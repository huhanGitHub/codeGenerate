["'@see expressionowner#getexpression()','getexpression','return m_arg0;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(this); m_arg0 = exp;'", "'access to the array','getarray','return array;'", "'overridden to fix 4759054','isshowing','return true;'", "'returns the unknown element','getunknownelement','return element;'", "'returns the additional argument','getargument','return parameter;'", "'clears the stack','clear','fdepth = 0;'", '\'returns the node name\',\'getnodename\',\'return "#cdata-section";\'', '\'{@inheritdoc}\',\'getpropertyprefix\',\'return "checkboxmenuitem";\'', "'creates a new directory','createdirectory','provider(dir).createdirectory(dir, attrs); return dir;'", "'deletes a file','delete','provider(path).delete(path);'", "'always returns {@code null}','getrawresult','return null;'", "'requires null completion value','setrawresult',''", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'{@inheritdoc}','createrenderer','return new synthcomboboxrenderer();'", "'{@inheritdoc}','createeditor','return new synthcomboboxeditor();'", "'@return negation of instruction','negate','return new ifnull(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifnonnull(this);'", "'determines the sort order','isascending','return (!reverseorder);'", "'@return negation of instruction','negate','return new if_acmpeq(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_acmpne(this);'", "'preserves singleton property','readresolve','return empty_set;'", "'preserves singleton property','readresolve','return empty_list;'", "'preserves singleton property','readresolve','return empty_map;'", "'gets the <code>borderpainted<code> property','isborderpainted','return paintborder;'", "'gets the <code>floatable<code> property','isfloatable','return floatable;'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'paints the specified component','paint','super.paint(g, splitpane);'", "'get the nth element','elementat','return m_map[i];'", "'pp','iscyclic','return l.iscyclic(getconstraint());'", "'returns 0','getlayoutalignmentx','return 0.5f;'", "'returns 0','getlayoutalignmenty','return 0.5f;'", "'sets the dtd handler','setdtdhandler','fdtdhandler = dtdhandler;'", "'returns the locale','getlocale','return flocale;'", "'returns the node index','getnodeindex','return fnodeindex;'", "'disable this variableparameter','disable','_ignore = true;'", "'@see expressionowner#getexpression()','getexpression','return m_predicates[m_index];'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(predicatednodetest.this); m_predicates[m_index] = exp;'", "'{@inheritdoc}','cancel','return future.cancel(mayinterruptifrunning);'", "'{@inheritdoc}','iscancelled','return future.iscancelled();'", "'{@inheritdoc}','isdone','return future.isdone();'", "'{@inheritdoc}','installlisteners','super.installlisteners(); header.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','header.removepropertychangelistener(this); super.uninstalllisteners();'", "'paints the specified component','paint','super.paint(g, context.getcomponent());'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'{@inheritdoc}','rollovercolumnupdated','header.repaint(header.getheaderrect(oldcolumn)); header.repaint(header.getheaderrect(newcolumn));'", "'javax','geterrorlistener','return _errorlistener;'", "'@return the feature manager','getjdkxmlfeatures','return _xmlfeatures;'", "'javax','geturiresolver','return _uriresolver;'", "'javax','seturiresolver','_uriresolver = resolver;'", "'@see org','getdocument','return fschemadomparser.getdocument();'", "'@see org','setdocumentlocator','fsaxlocatorwrapper.setlocator(locator);'", "'@see org','endprefixmapping',''", "'@see org','skippedentity',''", "'@inheritdoc','getbaselocalname','return constants._tag_keyvalue;'", "'get attribute's value','getvalue','return attribute.getvalue();'", "'with the given name','getattrvalue','return elem.getattribute(name);'", "'with the given name','getattrvaluens','return elem.getattributens(nsuri, localname);'", "'return the prefix','getprefix','return node.getprefix();'", "'return the namespace uri','getnamespaceuri','return node.getnamespaceuri();'", "'get the positive prefix','getpositiveprefix','return positiveprefix;'", "'get the negative prefix','getnegativeprefix','return negativeprefix;'", "'get the positive suffix','getpositivesuffix','return positivesuffix;'", "'get the negative suffix','getnegativesuffix','return negativesuffix;'", "'{@inheritdoc}','setgroupingused','super.setgroupingused(newvalue); fastpathcheckneeded = true;'", "'return the grouping size','getgroupingsize','return groupingsize;'", "'gets the {@link java','getroundingmode','return roundingmode;'", "'@inheritdoc','enginelookupandresolvesecretkey','return null;'", "'-----------------------------------------------------------------------','resolvedate','return (minguodate) super.resolvedate(fieldvalues, resolverstyle);'", "'returns the cached parser','getnamespacesenabled','return fnamespacesenabled;'", "'returns the node index','getnodeindex','return 0;'", "'clears the vector','removeallelements','size = 0;'", "'sets the error handler','seterrorhandler','ferrorreporter.setproperty(error_handler, errorhandler);'", "'sets the entity resolver','setentityresolver','fentityresolver = entityresolver;'", "'sets the grammar pool','setgrammarpool','fgrammarpool = grammarpool;'", "'some custom work','getloader','return floaders.get(type);'", "'calls <code>paint<code>','update','paint(g);'", "'prints this component's children','printchildren','paintchildren(g);'", "'prints the component's border','printborder','paintborder(g);'", "'in release 1','ismanagingfocus','return false;'", "'in release 1','getnextfocusablecomponent','return (component) getclientproperty(next_focus);'", "'gets the <code>autoscrolls<code> property','getautoscrolls','return autoscrolls;'", "'gets the <code>transferhandler<code> property','gettransferhandler','return (transferhandler) getclientproperty(jcomponent_transfer_handler);'", "'action','setenabled',''", "'in swing','clientpropertychanged',''", "'methods','firepropertychange','super.firepropertychange(propertyname, oldvalue, newvalue);'", "'package private','alwaysontop','return false;'", "'{@inheritdoc}','clear','map.clear();'", "'{@inheritdoc}','containsvalue','return map.containsvalue(value);'", "'{@inheritdoc}','entryset','return map.entryset();'", "'{@inheritdoc}','isempty','return map.isempty();'", "'{@inheritdoc}','keyset','return map.keyset();'", "'{@inheritdoc}','size','return map.size();'", "'{@inheritdoc}','values','return map.values();'", "'@return type','gettype','return type.float;'", "'returns the node index','getnodeindex','return fnodeindex;'", "'returns the node index','getnodeindex','return fnodeindex;'", "'{@inheritdoc}','getid','return id;'", "'{@inheritdoc}','configurescrollbarcolors',''", "'{@inheritdoc}','installlisteners','super.installlisteners(); scrollbar.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); scrollbar.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'performs a clone action','duplicate','return (snmpvalue) clone();'", "'opens a datagram channel','open','return selectorprovider.provider().opendatagramchannel();'", "'opens a datagram channel','open','return selectorprovider.provider().opendatagramchannel(family);'", "'post-registration: does nothing','postregister','return;'", "'pre-unregistration: does nothing','prederegister','return;'", "'post-unregistration: does nothing','postderegister','return;'", "'relative bulk <i>get<i> method','get','return get(dst, 0, dst.length);'", "'@inheritdoc','engineresolveuri','return new xmlsignatureinput(instream);'", "'@inheritdoc','enginegetpropertykeys','return new string[0];'", "'sets the <code>documentfilter<code>','setdocumentfilter','documentfilter = filter;'", "'removes a document listener','removedocumentlistener','listenerlist.remove(documentlistener.class, listener);'", "'removes an undo listener','removeundoableeditlistener','listenerlist.remove(undoableeditlistener.class, listener);'", "'retrieves the underlying model','getdocument','return abstractdocument.this;'", "'gets a child element','getelement','return null;'", "'defaultdocument events are significant','issignificant','return true;'", "'returns the underlying element','getelement','return e;'", "'gets the hour-of-day field','gethour','return time.gethour();'", "'gets the minute-of-hour field','getminute','return time.getminute();'", "'gets the second-of-minute field','getsecond','return time.getsecond();'", "'gets the nano-of-second field','getnano','return time.getnano();'", "'activate this fallback element','activate','_active = true;'", "'equivalent to <code>firetablechanged<code>','newdataavailable','firetablechanged(event);'", "'equivalent to <code>firetablechanged<code>','rowsremoved','firetablechanged(event);'", "'returns the line width','getlinewidth','return width;'", "'obsolete - not used','intervaladded',''", "'obsolete - not used','intervalremoved',''", "'gets the year field','getyear','return year;'", "'gets the day-of-month field','getdayofmonth','return day;'", "'{@inheritdoc} @since 1','getx','return (double) x;'", "'{@inheritdoc} @since 1','gety','return (double) y;'", "'{@inheritdoc} @since 1','getwidth','return (double) width;'", "'{@inheritdoc} @since 1','getheight','return (double) height;'", "'{@inheritdoc} @since 1','getx','return x;'", "'{@inheritdoc} @since 1','gety','return y;'", "'{@inheritdoc} @since 1','getwidth','return width;'", "'{@inheritdoc} @since 1','getheight','return height;'", "'{@inheritdoc} @since 1','getbounds2d','return (rectangle2d) clone();'", "'@return type','gettype','return type.float;'", "'call corresponding visitor method(s)','accept','v.visittypedinstruction(this); v.visitstackproducer(this); v.visitstackconsumer(this); v.visitfcmpl(this);'", "'setter for _isrestartable flag','setrestartable','_isrestartable = isrestartable;'", "'of the queue','push','list.addfirst(item);'", "'returns the public exponent','getpublicexponent','return this.publicexponent;'", "'returns the primep','getprimep','return this.primep;'", "'returns the primeq','getprimeq','return this.primeq;'", "'returns the primeexponentp','getprimeexponentp','return this.primeexponentp;'", "'returns the primeexponentq','getprimeexponentq','return this.primeexponentq;'", "'returns the crtcoefficient','getcrtcoefficient','return this.crtcoefficient;'", "'get the sequence number','getsequencenumber','return sequencenumber;'", "'set the sequence number','setsequencenumber','sequencenumber = seq;'", "'set event time','setmillis','this.millis = millis;'", "'-----------------------------------------------------------------------','getbaseunit','return baseunit;'", "'-----------------------------------------------------------------------','issupportedby','return temporal.issupported(epoch_day);'", "'-----------------------------------------------------------------------','tostring','return name;'", "'reset the node count','resetnodecount','nodecount = 0;'", "'@deprecated replaced by <code>add(string)<code>','additem','additem(item, -1);'", "'finalizes the equals method','equals','return super.equals(obj);'", "'finalizes the hashcode method','hashcode','return super.hashcode();'", "'','createui','return new gtkfilechooserui((jfilechooser) c);'", "'','createdirectorycomboboxmodel','return new directorycomboboxmodel();'", "'','createfiltercomboboxrenderer','return new filtercomboboxrenderer();'", "'','createfiltercomboboxmodel','return new filtercomboboxmodel();'", "'org','read_boolean','return impl.read_boolean();'", "'org','read_value','return impl.read_value();'", "'org','_truncatable_ids','return impl._truncatable_ids();'", "'java','read','return impl.read(b);'", "'needed by tcutility','read_fixed','return impl.read_fixed(digits, scale);'", "'have to do this','getcodebase','return null;'", "'performed','createcharbtcconverter','return codesetconversion.impl().getbtcconverter(osfcodesetregistry.iso_8859_1, impl.islittleendian());'", "'returns the cached gtkthemename','getgtkthemename','return gtkthemename;'", "'{@inheritdoc}','getlayoutstyle','return gnomelayoutstyle.instance;'", "'equivalent to {@link #get}','doublevalue','return get();'", '\'returns a <a href="\',\'writereplace\',\'return new serializationproxy(this);\'', "'obtains the sample rate','getsamplerate','return samplerate;'", "'sets the certificateequals criterion','setcertificate','x509cert = cert;'", "'sets the serialnumber criterion','setserialnumber','serialnumber = serial;'", "'sets the issuer criterion','setissuer','this.issuer = issuer;'", "'sets the subject criterion','setsubject','this.subject = subject;'", "'returns the certificateequals criterion','getcertificate','return x509cert;'", "'returns the serialnumber criterion','getserialnumber','return serialnumber;'", "'returns the subjectpublickey criterion','getsubjectpublickey','return subjectpublickey;'", "'returns the extendedkeyusage criterion','getextendedkeyusage','return keypurposeset;'", "'returns the policy criterion','getpolicy','return policyset;'", "'returns the edit value','getedit','return myedit;'", "'sets <code>alive<code> to false','die','alive = false;'", "'removes a hyperlink listener','removehyperlinklistener','listenerlist.remove(hyperlinklistener.class, listener);'", "'sets the frameborder's jcomponent','setcomponent','jcomp = comp;'", "'returns the frameborder's jcomponent','component','return jcomp;'", "'sets the internalframeborder's internalframe','setframe','frame = aframe;'", "'returns the internalframeborder's internalframe','frame','return frame;'", "'sets the mincrlnumber criterion','setmincrlnumber','this.mincrl = mincrl;'", "'sets the maxcrlnumber criterion','setmaxcrlnumber','this.maxcrl = maxcrl;'", "'returns the mincrlnumber criterion','getmincrl','return mincrl;'", "'returns the maxcrlnumber criterion','getmaxcrl','return maxcrl;'", "'sets the selector','setselector','fselector = selector;'", "'returns the selector','getselector','return fselector;'", "'returns the field count','getfieldcount','return ffieldcount;'", "'optional','getannotations','return new xsobjectlistimpl(fannotations, fnumannotations);'", "'@see com','getnamespaceitem','return null;'", "'-----------------------------------------------------------------------','resolvedatefields','updatecheckconflict(chrono.resolvedate(fieldvalues, resolverstyle));'", "'-----------------------------------------------------------------------','range','return field.range();'", "'returns the accessiblejoptionpane','getaccessiblejoptionpane','return super.getaccessiblecontext();'", "'@param constantvalue_index','setconstantvalueindex','this.constantvalue_index = constantvalue_index;'", "'@param name_index','setnameindex','this.name_index = name_index;'", "'@return dereferenced string','getbytes','return (string) getconstantvalue(cp);'", "'destroy this {@code object}','destroy','throw new destroyfailedexception();'", "'@throws nosuchelementexception {@inheritdoc}','pop','return removefirst();'", "'relative bulk <i>get<i> method','get','return get(dst, 0, dst.length);'", "'-----------------------------------------------------------------------','plus','return (d) chronolocaldate.super.plus(amount);'", "'gets the editor kit','getstylededitorkit','return (stylededitorkit) geteditorkit();'", "'returns the node index','getnodeindex','return fnodeindex;'", "'@param pmgclass_index','setpmgclassindex','this.pmg_class_index = pmg_class_index;'", "'@param pmgclass_index','setpmgindex','this.pmg_index = pmg_index;'", "'writes <code>b','write','write(b, 0, b.length);'", "'returns the symbol table','getsymboltable','return fsynchronizedsymboltable;'", "'returns the grammar pool','getxmlgrammarpool','return fsynchronizedgrammarpool;'", "'call corresponding visitor method(s)','accept','v.visitexceptionthrower(this); v.visitstackconsumer(this); v.visitmonitorexit(this);'", "'set the parent reader','setparent','this.parent = parent;'", "'get the parent reader','getparent','return parent;'", "'set the entity resolver','setentityresolver','entityresolver = resolver;'", "'parse a document','parse','setupparse(); parent.parse(input);'", "'parse a document','parse','parse(new inputsource(systemid));'", "'creates an entity manager','createentitymanager','return new xmlentitymanager();'", "'creates an error reporter','createerrorreporter','return new xmlerrorreporter();'", "'create a document scanner','createdocumentscanner','return new xmldocumentscannerimpl();'", "'create a dtd scanner','createdtdscanner','return new xmldtdscannerimpl();'", "'create a dtd loader','createdtdprocessor','return new xmldtdprocessor();'", "'create a dtd validator','createdtdvalidator','return new xmldtdvalidator();'", "'create a namespace binder','createnamespacebinder','return new xmlnamespacebinder();'", "'createdatatypevalidatorfactory():datatypevalidatorfactory','createvalidationmanager','return new validationmanager();'", "'sets the current locale','setlocale','flocale = locale;'", "'gets the current locale','getlocale','return flocale;'", "'sets the document locator','setdocumentlocator','flocator = locator;'", "'get the internal xmlerrrorhandler','geterrorhandler','return ferrorhandler;'", "'defined in menucomponent','getaccessiblechildindex','return items.indexof(child);'", "'called by droptargetcontext','dosetdefaultactions','actions = ops;'", "'returns the model's extent','getextent','return extent;'", "'returns the model's minimum','getminimum','return min;'", "'returns the model's maximum','getmaximum','return max;'", "'adds a <code>changelistener<code>','addchangelistener','listenerlist.add(changelistener.class, l);'", "'removes a <code>changelistener<code>','removechangelistener','listenerlist.remove(changelistener.class, l);'", "'paints this canvas','paint','g.clearrect(0, 0, width, height);'", "'get the nth element','elementat','return m_map[i];'", "'{@inheritdoc} @since 1','getx','return x;'", "'{@inheritdoc} @since 1','gety','return y;'", "'returns the node value','getnodevalue','return null;'", "'sets the node value','setnodevalue',''", "'change the child views','replace','super.replace(offset, length, views); invalidategrid();'", "'change the child views','replace','super.replace(offset, length, views); invalidategrid();'", "'returns the current index','getindex','return pos;'", "'{@inheritdoc} @since 1','length','return count;'", "'@return a substring','substring','return src.substring(beginindex, endindex);'", "'@return a substring','substring','return src.substring(beginindex);'", "'resets the error flag','reset','haderror = false;'", '\'set the "active" grammar:\',\'setactivegrammar\',\'factivegrammar = grammar;\'', "'produces a {@link node','node','return new intarraynode(array);'", "'produces a {@link node','node','return new longarraynode(array);'", "'produces a {@link node','node','return new doublearraynode(array);'", "'returns the data buffer','getdata','return buf;'", "'set the rounding mode','setroundingmode','roundingmode = r;'", "'get the association list','getcontents','return _contents;'", "'shouldn't be called','paint',''", "'shouldn't be called','update',''", "'','createbuttonlistener','return new basicbuttonlistener(b);'", "'','gettype','return (type.boolean);'", "'sets the public identifier','setpublicid','fpublicid = publicid;'", "'returns the public identifier','getpublicid','return fpublicid;'", "'sends the last fragment','sendmessage','sendfragment(true); sentfullmessage = true;'", "'returns the class name','getclassnamevalue','return classnamevalue;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitaload(this);'", "'always returns {@code integer','remainingcapacity','return integer.max_value;'", '\'{@inheritdoc}\',\'getpropertyprefix\',\'return "checkbox.";\'', "'execute the function','execute','return new xnumber(math.ceil(m_arg0.execute(xctxt).num()));'", "'performs a clone action','duplicate','return (snmpvalue) clone();'", "'return the parent contenthandler','getparent','return fparentxincludehandler;'", "'return the xpointer schema','getxpointerschemapointer','return fschemapointer;'", "'{@inheritdoc}','installdefaults','updatestyle(menuitem);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); menuitem.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); menuitem.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'a comment','comment',''", "'a processing instruction','processinginstruction',''", "'an element declaration','elementdecl',''", "'an attribute declaration','attributedecl',''", "'an internal entity declaration','internalentitydecl',''", "'an external entity declaration','externalentitydecl',''", "'an unparsed entity declaration','unparsedentitydecl',''", "'expensive to create','createkey','return new cachekey(classname, latestloader);'", "'3','emptiable','return mineffectivetotalrange() == 0;'", "'@see org','getnamespaceitem','return null;'", "'sets the error handler','seterrorhandler','ferrorreporter.setproperty(error_handler, errorhandler);'", "'@since 1','getdescriptor','return getmbeandescriptornoexception();'", "'package-private','settargetnormal','methodhandlenatives.setcallsitetargetnormal(this, newtarget);'", "'package-private','gettargetvolatile','return (methodhandle) unsafe.getobjectvolatile(this, target_offset);'", "'package-private','settargetvolatile','methodhandlenatives.setcallsitetargetvolatile(this, newtarget);'", "'@return negation of instruction','negate','return new if_icmpeq(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_icmpne(this);'", "'causes <i>dorun','invokelater','eventqueue.invokelater(dorun);'", "'causes <code>dorun','invokeandwait','eventqueue.invokeandwait(dorun);'", "'returns the unsolicited notification','getnotification','return notice;'", "'gets the year field','getyear','return datetime.getyear();'", "'gets the day-of-month field','getdayofmonth','return datetime.getdayofmonth();'", "'gets the day-of-year field','getdayofyear','return datetime.getdayofyear();'", "'gets the hour-of-day field','gethour','return datetime.gethour();'", "'gets the minute-of-hour field','getminute','return datetime.getminute();'", "'gets the second-of-minute field','getsecond','return datetime.getsecond();'", "'gets the nano-of-second field','getnano','return datetime.getnano();'", "'@inheritdoc','getbaselocalname','return constants._tag_x509crl;'", "'overrides create_input_stream from cdroutputstream','create_input_stream','return null;'", "'@return data bytes','getbytes','return bytes;'", "'@return name of attribute','getname','return name;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@since 1','getannotations','return getpackageinfo().getannotations();'", "'@since 1','getdeclaredannotations','return getpackageinfo().getdeclaredannotations();'", "'returns the current value','get','return value != 0;'", "'{@inheritdoc}','isempty','return sumcount() <= 0l;'", "'writes <code>b','write','writebytes(b, 0, b.length, append);'", "'@see org','getlength','return fstrings.size();'", "'@see org','contains','return fstrings.contains(param);'", "'{@inheritdoc}','installdefaults','updatestyle(optionpane);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); optionpane.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); optionpane.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'disard the highest-numbered record','discardlast','--lastused;'", "'@inheritdoc','getiterator','return new filesystemiterator(this.certs);'", "'@inheritdoc','hasnext','return (this.i < this.certs.size());'", "'@inheritdoc','next','return this.certs.get(this.i++);'", "'execute the function','execute','return new xnumber(getarg0asnumber(xctxt));'", "'report the arity','arity','return arity;'", "'fundamental facet: ordered','getordered','return fordered;'", "'fundamental facet: bounded','getbounded','return fbounded;'", "'fundamental facet: cardinality','getfinite','return ffinite;'", "'fundamental facet: numeric','getnumeric','return fnumeric;'", "'@see com','getnamespaceitem','return fnamespaceitem;'", "'optional','getannotation','return (xsannotation) annotations.item(0);'", "'optional','getannotations','return annotations;'", "'(non-javadoc) @see com','getfacetkind','return kind;'", "'(non-javadoc) @see com','getlexicalfacetvalue','return value;'", "'(non-javadoc) @see com','getfixed','return fixed;'", "'(non-javadoc) @see com','getname','return null;'", "'(non-javadoc) @see com','getnamespace','return null;'", "'(non-javadoc) @see com','getnamespaceitem','return null;'", "'(non-javadoc) @see com','gettype','return xsconstants.facet;'", "'(non-javadoc) @see com','getfacetkind','return kind;'", "'(non-javadoc) @see com','getannotations','return annotations;'", "'(non-javadoc) @see com','getlexicalfacetvalues','return values;'", "'(non-javadoc) @see com','getname','return null;'", "'(non-javadoc) @see com','getnamespace','return null;'", "'(non-javadoc) @see com','getnamespaceitem','return null;'", "'(non-javadoc) @see com','gettype','return xsconstants.multivalue_facet;'", "'@param inner_access_flags','setinneraccessflags','this.inner_access_flags = inner_access_flags;'", "'@param inner_class_index','setinnerclassindex','this.inner_class_index = inner_class_index;'", "'@param inner_name_index','setinnernameindex','this.inner_name_index = inner_name_index;'", "'@param outer_class_index','setouterclassindex','this.outer_class_index = outer_class_index;'", "'returns span before gutter','getspanbeforegutter','return 3;'", "'returns span after gutter','getspanaftergutter','return 3;'", "'warning: ignore','warning',''", "'error: throws back saxparseexception','error','throw e;'", "'converts a {@link java','defineclass','return defineclass(name, b, getprotectiondomain(cs));'", "'returns the <code>lookuptable<code>','gettable','return ltable;'", "'get the association list','getcontents','return _contents;'", "'returns {@code notifyonedt} property','isnotifyonedt','return notifyonedt;'", "'returns null','getoutputformat','return null;'", "'does nothing','indent',''", "'does nothing','serialize','return;'", "'does nothing','setoutputformat',''", "'does nothing','setoutputstream',''", "'does nothing','setwriter',''", "'does nothing','attributedecl',''", "'does nothing','elementdecl','return;'", "'@see org','externalentitydecl',''", "'does nothing','internalentitydecl',''", "'does nothing','endprefixmapping',''", "'does nothing','ignorablewhitespace',''", "'does nothing','setdocumentlocator','super.setdocumentlocator(arg0);'", "'does nothing','skippedentity',''", "'does nothing','endcdata','return;'", "'does nothing','enddtd',''", "'does nothing','startcdata',''", "'does nothing','startentity',''", "'do nothing','close','return;'", "'@since 1','getannotations','return getdeclaredannotations();'", "'execute the function','execute','return xboolean.s_false;'", "'fail with an error','fail','system.out.print(log.tostring()); fail(s);'", "'@see expressionowner#getexpression()','getexpression','return m_functionexpr;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(functionpattern.this); m_functionexpr = exp;'", "'main work starts here','parse','bridge();'", '\'warning\',\'warning\',\'printerror("warning", ex);\'', '\'error\',\'error\',\'printerror("error", ex);\'', "'{@inheritdoc} @since 1','getwidth','return width;'", "'{@inheritdoc} @since 1','getheight','return height;'", "'(non-javadoc) @see com','getdtdsource','return fdtdsource;'", "'(non-javadoc) @see com','setdtdsource','fdtdsource = source;'", "'(non-javadoc) @see com','getdtdhandler','return fdtdhandler;'", "'(non-javadoc) @see com','setdtdhandler','fdtdhandler = handler;'", "'modify the augmentations','modifyaugmentations','return modifyaugmentations(augs, false);'", "'non-public','editor','return form.editor();'", "'non-public','bindargumenti','return editor().bindargumenti(this, pos, value);'", "'non-public','bindargumentj','return editor().bindargumentj(this, pos, value);'", "'non-public','bindargumentf','return editor().bindargumentf(this, pos, value);'", "'non-public','bindargumentd','return editor().bindargumentd(this, pos, value);'", "'non-public','fieldcount','return typecodes.length;'", "'non-public','fieldtype','return typecodes[i];'", "'non-public','fieldtypechar','return typechars.charat(i);'", "'implements javax','getsystemid','return _systemid;'", "'implements javax','setsystemid','_systemid = id;'", "'implements javax','gettemplates','return _templates;'", "'turn continuous layout onoff','setcontinuouslayout','continuouslayout = b;'", "'creates the default divider','createdefaultdivider','return new basicsplitpanedivider(this);'", "'returns the insets','getinsets','return null;'", "'does nothing','invalidatelayout',''", "'','focusgained','dividerkeyboardresize = true; splitpane.repaint();'", "'method getbaselocalname @inheritdoc','getbaselocalname','return xpathfilterchgpcontainer._tag_xpathchgp;'", "'method getbasenamespace @inheritdoc','getbasenamespace','return transform_xpathfilterchgp;'", "'get the association list','getcontents','return _contents;'", "'@return type','gettype','return type.long;'", "'call corresponding visitor method(s)','accept','v.visittypedinstruction(this); v.visitstackproducer(this); v.visitstackconsumer(this); v.visitlcmp(this);'", "'retrieves the current attachment','attachment','return attachment;'", "'@see com','setcolumnnumber','this.column = col;'", "'@see com','setlinenumber','this.line = line;'", "'@see com','setbasesystemid',''", "'@see com','setexpandedsystemid','esid = systemid;'", "'@see com','setliteralsystemid','lsid = systemid;'", "'@see com','setpublicid',''", "'returns the keysize','getkeysize','return keysize;'", "'returns the public-exponent value','getpublicexponent','return publicexponent;'", "'method enginegetcontextfromelement @param element','enginegetcontextfromelement',''", "'return the base identifier','getbaseidentifier','return null;'", "'@see prefixresolver#handlesnullprefixes()','handlesnullprefixes','return false;'", "'sax parser api','setdocumenthandler','documenthandler = handler;'", "'sax parser api','setdtdhandler','dtdhandler = handler;'", "'sax parser api','setentityresolver',''", "'sax parser api','seterrorhandler','parser.seterrorhandler(handler);'", "'sax parser api','setlocale','parser.setlocale(locale);'", "'returns the document handler','getdocumenthandler','return fdocumenthandler;'", "'sets the document source','setdocumentsource','fdocumentsource = source;'", "'returns the document source','getdocumentsource','return fdocumentsource;'", "'returns the white color','getwhite','return white;'", "'returns the black color','getblack','return black;'", "'returns the focus color','getfocuscolor','return getprimary2();'", "'returns the desktop color','getdesktopcolor','return getprimary2();'", "'returns the control color','getcontrol','return getsecondary3();'", "'fetches the elementiterator','getelementiterator','return it;'", "'fetches the document','getdocument','return doc;'", "'{@inheritdoc} @since 1','getx1','return (double) x1;'", "'{@inheritdoc} @since 1','gety1','return (double) y1;'", "'{@inheritdoc} @since 1','getp1','return new point2d.float(x1, y1);'", "'{@inheritdoc} @since 1','getx2','return (double) x2;'", "'{@inheritdoc} @since 1','gety2','return (double) y2;'", "'{@inheritdoc} @since 1','getp2','return new point2d.float(x2, y2);'", "'{@inheritdoc} @since 1','getx1','return x1;'", "'{@inheritdoc} @since 1','gety1','return y1;'", "'{@inheritdoc} @since 1','getp1','return new point2d.double(x1, y1);'", "'{@inheritdoc} @since 1','getx2','return x2;'", "'{@inheritdoc} @since 1','gety2','return y2;'", "'{@inheritdoc} @since 1','getp2','return new point2d.double(x2, y2);'", "'{@inheritdoc} @since 1','getbounds','return getbounds2d().getbounds();'", "'hook for subclasses','skipvariable','return false;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitlload(this);'", "'{@inheritdoc} @since 1','getx1','return (double) x1;'", "'{@inheritdoc} @since 1','gety1','return (double) y1;'", "'{@inheritdoc} @since 1','getp1','return new point2d.float(x1, y1);'", "'{@inheritdoc} @since 1','getctrlx','return (double) ctrlx;'", "'{@inheritdoc} @since 1','getctrly','return (double) ctrly;'", "'{@inheritdoc} @since 1','getctrlpt','return new point2d.float(ctrlx, ctrly);'", "'{@inheritdoc} @since 1','getx2','return (double) x2;'", "'{@inheritdoc} @since 1','gety2','return (double) y2;'", "'{@inheritdoc} @since 1','getp2','return new point2d.float(x2, y2);'", "'{@inheritdoc} @since 1','getx1','return x1;'", "'{@inheritdoc} @since 1','gety1','return y1;'", "'{@inheritdoc} @since 1','getp1','return new point2d.double(x1, y1);'", "'{@inheritdoc} @since 1','getctrlx','return ctrlx;'", "'{@inheritdoc} @since 1','getctrly','return ctrly;'", "'{@inheritdoc} @since 1','getctrlpt','return new point2d.double(ctrlx, ctrly);'", "'{@inheritdoc} @since 1','getx2','return x2;'", "'{@inheritdoc} @since 1','gety2','return y2;'", "'{@inheritdoc} @since 1','getp2','return new point2d.double(x2, y2);'", "'{@inheritdoc} @since 1','contains','return contains(p.getx(), p.gety());'", "'{@inheritdoc} @since 1','getbounds','return getbounds2d().getbounds();'", "'@inheritdoc','enginegeturi','return transformc14n.implementedtransformuri;'", "'@since 1','descendingset','return new treeset<>(m.descendingmap());'", "'@throws nosuchelementexception {@inheritdoc}','first','return m.firstkey();'", "'@throws nosuchelementexception {@inheritdoc}','last','return m.lastkey();'", '\'creates a <em><a href="spliterator\',\'spliterator\',\'return treemap.keyspliteratorfor(m);\'', "'method to work','setdelegate','servant._set_delegate(delegateimpl);'", "'wipe it out','removeallelements','m_firstfree = 0;'", "'creates a content driver','createcontentdriver','return new ns11contentdriver();'", "'@deprecated @see #getendcolumn','getcolumn','return bufcolumn[bufpos];'", "'@deprecated @see #getendline','getline','return bufline[bufpos];'", "'{@inheritdoc}','installdefaults','updatestyle(slider);'", "'{@inheritdoc}','installlisteners','super.installlisteners(slider); slider.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','slider.removepropertychangelistener(this); super.uninstalllisteners(slider);'", "'{@inheritdoc}','createtracklistener','return new synthtracklistener();'", "'{@inheritdoc}','calculategeometry','calculatethumbsize(); layout(); calculatethumblocation();'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'call corresponding visitor method(s)','accept','v.visitbreakpoint(this);'", "'@return name','getname','return cp.constanttostring(getnameindex(), constants.constant_utf8);'", "'@return signature','getsignature','return cp.constanttostring(getsignatureindex(), constants.constant_utf8);'", "'@param name_index','setnameindex','this.name_index = name_index;'", "'@param signature_index','setsignatureindex','this.signature_index = signature_index;'", "'sets the {@link javax','setui','this.layerui = ui; super.setui(ui);'", "'returns the {@link javax','getui','return layerui;'", "'{@inheritdoc}','addnotify','super.addnotify(); eventcontroller.updateawteventlistener(0, eventmask);'", "'{@inheritdoc}','removenotify','super.removenotify(); eventcontroller.updateawteventlistener(eventmask, 0);'", "'@param uri','seturi','this.uri = uri;'", "'@return the uri','geturi','return this.uri;'", "'@param baseuri','setbaseuri','this.baseuri = baseuri;'", "'@return the baseuri','getbaseuri','return this.baseuri;'", '\'[nil] @see <a href="http:www\',\'getnil\',\'return fnil;\'', '\'[notation] @see <a href="http:www\',\'getnotation\',\'return fnotation;\'', "'(non-javadoc) @see com','getactualnormalizedvalue','return this.factualvalue;'", "'(non-javadoc) @see com','getactualnormalizedvaluetype','return this.factualvaluetype;'", "'(non-javadoc) @see com','getitemvaluetypes','return this.fitemvaluetypes;'", "'gets the mib name','getmibname','return mibname;'", "'returns the offset','getoffset','return offset;'", "'returns true','iscelleditable','return true;'", "'returns true','shouldselectcell','return true;'", "'calls <code>fireeditingcanceled<code>','cancelcellediting','fireeditingcanceled();'", "'gets the index','geterrorindex','return errorindex;'", '\'escapes chars\',\'printhex\',\'_printer.printtext("&#x"); _printer.printtext(integer.tohexstring(ch)); _printer.printtext(\';\');\'', "'returns the callbackhandler','getcallbackhandler','return handler;'", "'@inheritdoc','getbaselocalname','return constants._tag_dsakeyvalue;'", "'{@inheritdoc} @since 1','getbaselineoffset','return 0;'", "'don't rotate runs!','shouldrotatetabruns','return false;'", "'don't rotate runs!','rotatetabruns',''", "'don't pad selected tab','padselectedtab',''", "'@inheritdoc','enginegeturi','return canonicalizer.algo_id_c14n_with_comments;'", "'@inheritdoc','enginegetincludecomments','return true;'", "'@inheritdoc','enginegeturi','return canonicalizer.algo_id_c14n_excl_omit_comments;'", "'@inheritdoc','enginegetincludecomments','return false;'", "'{@inheritdoc}','installdefaults','updatestyle(tabpane);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); tabpane.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); tabpane.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'{@inheritdoc}','getfontmetrics','return getfontmetrics(tabcontext.getstyle().getfont(tabcontext));'", "'@see expressionowner#getexpression()','getexpression','return m_nextwalker;'", "'returns the privatekey','getprivatekey','return key;'", "'return the current state','getstate','return state;'", "'@see org','lookupnamespaceuri','return super.getnamespaceforprefix(prefix);'", "'returns the fromindex','getfromindex','return fromindex;'", "'returns the toindex','gettoindex','return toindex;'", "'&& end == null','isempty','return start == null;'", "'append a compound instruction','append','return append(c.getinstructionlist());'", "'append a compound instruction','append','return append(ih, c.getinstructionlist());'", "'insert a compound instruction','insert','return insert(c.getinstructionlist());'", "'insert a compound instruction','insert','return insert(ih, c.getinstructionlist());'", "'@return start of list','getstart','return start;'", "'@return end of list','getend','return end;'", "'gets the <code>transferhandler<code> property','gettransferhandler','return transferhandler;'", "'calls <code>paint(g)<code>','update','paint(g);'", "'sets the <code>layeredpane<code> property','setlayeredpane','getrootpane().setlayeredpane(layeredpane);'", "'sets the <code>glasspane<code> property','setglasspane','getrootpane().setglasspane(glasspane);'", "'{@inheritdoc} @since 1','getgraphics','jcomponent.getgraphicsinvoked(this); return super.getgraphics();'", "'{@inheritdoc}','installdefaults','frame.setlayout(internalframelayout = createlayoutmanager()); updatestyle(frame);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); frame.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','frame.removepropertychangelistener(this); super.uninstalllisteners();'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'the etherealizer','startetherealize','this.etherealizer[0] = etherealizer; doit(start_eth);'", "'@return type','gettype','return type.double;'", "'call corresponding visitor method(s)','accept','v.visittypedinstruction(this); v.visitstackproducer(this); v.visitstackconsumer(this); v.visitdcmpg(this);'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@return','getcolumnnumber','return fentityscanner.getcolumnnumber();'", "'@return','getlinenumber','return fentityscanner.getlinenumber();'", "'@return','isendelement','return feventtype == xmlevent.end_element;'", "'@return','isstandalone','return fscanner.isstandalone();'", "'@return','isstartelement','return feventtype == xmlevent.start_element;'", "'<p>return fractional seconds','getfractionalsecond','return fractionalsecond;'", "'@param string_index','setstringindex','this.string_index = string_index;'", "'@return dereferenced string','getbytes','return (string) getconstantvalue(cp);'", "'get the notification type','gettype','return type;'", "'get the notification timestamp','gettimestamp','return timestamp;'", "'set the notification timestamp','settimestamp','this.timestamp = timestamp;'", "'get the notification message','getmessage','return message;'", "'get the user data','getuserdata','return userdata;'", "'set the user data','setuserdata','this.userdata = userdata;'", "'','copymethod','return arg.copy();'", "'org','getdocumentelement','return (elementimpl) relations[0][1];'", "'by this scanner','isvalidnamestarthighsurrogate','return xml11char.isxml11namehighsurrogate(value);'", "'returns the resizing column','getresizingcolumn','return resizingcolumn;'", "'repaint(); }','columnselectionchanged',''", "'@since 1','ispopuptrigger','return e.ispopuptrigger();'", "'{@inheritdoc}','installui','super.installui(c); installdefaults(c); installlisteners(c);'", "'{@inheritdoc}','uninstallui','super.uninstallui(c); uninstalllisteners(c); uninstalldefaults(c);'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'paints the border','paintborder',''", "'paints the specified component','paint',''", "'method getbaselocalname @inheritdoc','getbaselocalname','return constants._tag_signedinfo;'", "'sets the dtd handler','setdtdhandler','fdtdhandler = dtdhandler;'", "'returns the locale','getlocale','return flocale;'", "'@inheritdoc','getbaselocalname','return constants._tag_mgmtdata;'", "'overridden in container','issameorancestorof','return comp == this;'", "'paints this component','paint',''", "'updates this component','update','paint(g);'", "'prints this component','print','paint(g);'", "'disables all notification types','disablealltypes','enabledtypes.clear();'", "'call corresponding visitor method(s)','accept','v.visitstackproducer(this); v.visitpushinstruction(this); v.visitstackinstruction(this); v.visitdup2(this);'", "'{@inheritdoc}','installdefaults','updatestyle(scrollpane);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'implements section 1','identifierclasheswithcontainer','return identifier.equalsignorecase(mappedcontainername);'", "'call corresponding visitor method(s)','accept','v.visitexceptionthrower(this); v.visitstackproducer(this); v.visitarraylength(this);'", "'unimplemented','appendchild','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','haschildnodes','error(xmlerrorresources.er_function_not_supported); return false;'", "'unimplemented','getnodetype','error(xmlerrorresources.er_function_not_supported); return 0;'", "'unimplemented','getparentnode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getchildnodes','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getfirstchild','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getlastchild','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getnextsibling','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getlength','error(xmlerrorresources.er_function_not_supported); return 0;'", "'unimplemented','item','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getownerdocument','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','gettagname','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getnodename','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','normalize','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','getelementsbytagname','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','removeattributenode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','setattributenode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','hasattribute','error(xmlerrorresources.er_function_not_supported); return false;'", "'unimplemented','hasattributens','error(xmlerrorresources.er_function_not_supported); return false;'", "'unimplemented','getattributenode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','removeattribute','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','setattribute','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','getattribute','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','hasattributes','error(xmlerrorresources.er_function_not_supported); return false;'", "'unimplemented','getelementsbytagnamens','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','setattributenodens','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getattributenodens','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','removeattributens','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','setattributens','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','getattributens','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getprevioussibling','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','clonenode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getnodevalue','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','setnodevalue','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','setvalue','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','getownerelement','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getspecified','error(xmlerrorresources.er_function_not_supported); return false;'", "'unimplemented','getattributes','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','insertbefore','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','replacechild','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','removechild','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getnamespaceuri','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getprefix','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','setprefix','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','getlocalname','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getdoctype','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getimplementation','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getdocumentelement','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createelement','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createdocumentfragment','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createtextnode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createcomment','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createcdatasection','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createprocessinginstruction','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createattribute','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createentityreference','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','importnode','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createelementns','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','createattributens','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','getelementbyid','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','substringdata','error(xmlerrorresources.er_function_not_supported); return null;'", "'unimplemented','appenddata','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','insertdata','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','deletedata','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','replacedata','error(xmlerrorresources.er_function_not_supported);'", "'unimplemented','splittext','error(xmlerrorresources.er_function_not_supported); return null;'", "'method getschematypeinfo','getschematypeinfo','return null;'", "'access the wrapped dtmiterator','getdtmiterator','return m_iter;'", "'gets the transition instant','getinstant','return transition.toinstant(offsetbefore);'", "'string representation','tostring','return name;'", "'returns the wrapped exception','getexception','return fexception;'", "'gets the first day-of-week','getfirstdayofweek','return firstdayofweek;'", "'@return type','gettype','return type.long;'", "'@inheritdoc','getbaselocalname','return constants._tag_signatureproperty;'", "'gets the engine id','getengineid','return engineid;'", "'gets the engine lcd','getlcd','return lcd;'", "'add a linked exception','setlinkedexception','this.linkedexception = exception;'", "'@inheritdoc','write','write(arg0, 0, arg0.length);'", "'@inheritdoc','flush','flushbuffer(); out.flush();'", "'@inheritdoc','close','flush(); out.close();'", "'@see org','getresulttype','return m_resulttype;'", "'@see org','getinvaliditeratorstate','return m_isinvaliditeratorstate;'", "'returns the image','tostring','return image;'", "'@inheritdoc','enginegetpropertykeys','return resolverdirecthttp.properties.clone();'", "'','getselectcolor','return selectcolor;'", "'2','ischaracterelementcontentwhitespace','return false;'", "'10','isdocumentalldeclarationsprocessed','return true;'", "'get the nth element','elementat','return m_map[i];'", "'get the association list','getcontents','return _contents;'", "'get the ad-type field','gettype','return type;'", "'returns this context's context','getcontext','return context;'", "'package private for accesscontroller','getcombiner','return combiner;'", "'returns a <code>jscrollpane','createhorizontalscrollbar','return new scrollbar(jscrollbar.horizontal);'", "'returns a <code>jscrollpane','createverticalscrollbar','return new scrollbar(jscrollbar.vertical);'", "'returns the current <code>jviewport<code>','getviewport','return viewport;'", "'returns the row header','getrowheader','return rowheader;'", "'returns the column header','getcolumnheader','return columnheader;'", "'determines the control's criticality','iscritical','return criticality;'", "'retrieves the control's asn','getencodedvalue','return value;'", "'generate a hashcode','hashcode','return this.value;'", "'sets the public identifier','setpublicid','fpublicid = publicid;'", "'returns the public identifier','getpublicid','return fpublicid;'", "'sets the system identifier','setsystemid','fsystemid = systemid;'", "'returns the system identifier','getsystemid','return fsystemid;'", "'sets the byte stream','setbytestream','fbytestream = bytestream;'", "'returns the byte stream','getbytestream','return fbytestream;'", "'sets the character stream','setcharacterstream','fcharstream = charstream;'", "'returns the character stream','getcharacterstream','return fcharstream;'", "'@see org','getnamespaceitem','return null;'", "'by this scanner','isvalidnamestarthighsurrogate','return false;'", "'bottleneck output: calls outwriter','logmsg','outwriter.println(s);'", "'returns the current size','getsize','return size;'", "'{@inheritdoc}','addgroup','return (sequentialgroup) super.addgroup(group);'", "'{@inheritdoc}','addcomponent','return (sequentialgroup) super.addcomponent(component);'", "'{@inheritdoc}','addgap','return (sequentialgroup) super.addgap(size);'", "'{@inheritdoc}','addgroup','return (parallelgroup) super.addgroup(group);'", "'{@inheritdoc}','addcomponent','return (parallelgroup) super.addcomponent(component);'", "'{@inheritdoc}','addgap','return (parallelgroup) super.addgap(pref);'", "'call corresponding visitor method(s)','accept','v.visitstackinstruction(this); v.visitdup_x1(this);'", "'non-public','getfactory','return factory.instance;'", "'@inheritdoc','getbaselocalname','return constants._tag_keyinforeference;'", "'creates the default divider','createdefaultdivider','return new metalsplitpanedivider(this);'", "'public','getscientificinstance','return getinstance(locale.getdefault(locale.category.format), scientificstyle);'", "'public','getscientificinstance','return getinstance(inlocale, scientificstyle);'", "'gets the {@link java','getroundingmode','throw new unsupportedoperationexception();'", "'sets the {@link java','setroundingmode','throw new unsupportedoperationexception();'", "'paints the specified component','paint','c.paint(g);'", "'invoked when {@link javax','updateui',''", "'cleans up any state','dispose',''", "'to deserialize an object','getstreamformatversion','return streamformatversion;'", "'added setsender and getsender','setsender','cbsender = cb;'", "'rep-ids','setvaluehandler','vhandler = (com.sun.corba.se.impl.io.valuehandlerimpl) vh;'", "'of the object','addobject','offsettoobjectmap.put(new integer(offset), value);'", "'further indirections','removeobject','offsettoobjectmap.remove(new integer(offset));'", "'currently being deserialized','containsobject','return offsettoobjectmap.containskey(new integer(offset));'", "'get static singleton instance','getinstance','return instance;'", "'returns the default focustraversalpolicy','getdefaultfocustraversalpolicy','return defaultpolicy;'", "'{@inheritdoc} @since 1','contains','return contains(p.getx(), p.gety());'", "'avoid unnecessary allocations','getfieldsnocopy','return fields;'", "'overridden from component','delivermousewheeltoancestor',''", "'overridden from component','dispatchmousewheeltoancestor','return false;'", "'setdocumenthandler @param documenthandler','setdocumenthandler','fdocumenthandler = documenthandler;'", "'returns the document handler','getdocumenthandler','return fdocumenthandler;'", "'creates a content driver','createcontentdriver','return new fragmentcontentdriver();'", "'getscannerstatename(int):string','getentityname','return fcurrententityname;'", "'returns the current depth','popelement','return fdepth--;'", "'scan for doctype hook','scanfordoctypehook','return false;'", "'element depth iz zero','elementdepthiszerohook','return false;'", "'-----------------------------------------------------------------------','resolvedate','return (hijrahdate) super.resolvedate(fieldvalues, resolverstyle);'", "'returns year length','getyearlength','return yearmonthtodayofyear(prolepticyear, 12);'", "'returns maximum day-of-month','getmaximummonthlength','return maxmonthlength;'", "'returns smallest maximum day-of-month','getminimummonthlength','return minmonthlength;'", "'returns maximum day-of-year','getmaximumdayofyear','return maxyearlength;'", "'returns smallest maximum day-of-year','getsmallestmaximumdayofyear','return minyearlength;'", "'returns the local engine','getengine','return engine;'", "'-------------------------------------------------------------------','getpdu','return reqpdu;'", "'-------------------------------------------------------------------','getelements','return varbinds.elements();'", "'-------------------------------------------------------------------','getsublist','return varbinds;'", "'-------------------------------------------------------------------','getversion','return version;'", "'-------------------------------------------------------------------','getrequestpduversion','return reqpdu.version;'", "'-------------------------------------------------------------------','getuserdata','return data;'", "'-------------------------------------------------------------------','getvarindex','return varbinds.indexof(varbind);'", "'-------------------------------------------------------------------','addvarbind','varbinds.addelement(varbind);'", "'-------------------------------------------------------------------','setrequesttree','this.tree = tree;'", "'-------------------------------------------------------------------','getrequesttree','return tree;'", "'-------------------------------------------------------------------','getvarbinds','return varbinds;'", "'reset the iterator','reset','m_next = 0;'", "'get the nth element','elementat','runto(i); return super.elementat(i);'", "'removes a <code>vetoablechangelistener<code>','removevetoablechangelistener','vcsupport.removevetoablechangelistener(name, vcl);'", "'gets the year value','getvalue','return year;'", "'@return data, i','getbytes','return bytes;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@return long object','getconstantvalue','return new long(bytes);'", "'method enginegeturi @inheritdoc','enginegeturi','return implementedtransformuri;'", "'{@inheritdoc}','enginecanresolve','return xmlutils.elementisinsignature11space(element, constants._tag_derencodedkeyvalue);'", "'{@inheritdoc}','enginelookupresolvex509certificate','return null;'", "'{@inheritdoc}','enginelookupandresolvesecretkey','return null;'", "'{@inheritdoc}','enginelookupandresolveprivatekey','return null;'", "'gets the year field','getyear','return date.getyear();'", "'gets the day-of-month field','getdayofmonth','return date.getdayofmonth();'", "'gets the day-of-year field','getdayofyear','return date.getdayofyear();'", "'gets the hour-of-day field','gethour','return time.gethour();'", "'gets the minute-of-hour field','getminute','return time.getminute();'", "'gets the second-of-minute field','getsecond','return time.getsecond();'", "'gets the nano-of-second field','getnano','return time.getnano();'", "'non-public','getcallsitetarget','return ((callsite) site).gettarget();'", "'main work starts here','parse','bridge();'", "'reset @param componentmanager','reset','super.reset(componentmanager); init();'", "'setdtdhandler @param dtdhandler','setdtdhandler','fdtdhandler = dtdhandler;'", "'getdtdhandler @return the xmldtdhandler','getdtdhandler','return fdtdhandler;'", "'setdtdcontentmodelhandler @param dtdcontentmodelhandler','setdtdcontentmodelhandler','fdtdcontentmodelhandler = dtdcontentmodelhandler;'", "'getdtdcontentmodelhandler @return xmldtdcontentmodelhandler','getdtdcontentmodelhandler','return fdtdcontentmodelhandler;'", "'pop the stack','poppestack','return fpestack[--fpedepth];'", "'a comment','comment',''", "'a processing instruction','processinginstruction',''", "'an empty element','emptyelement',''", "'character content','characters',''", "'ignorable whitespace','ignorablewhitespace',''", "'an element declaration','elementdecl',''", "'an attribute declaration','attributedecl',''", "'an internal entity declaration','internalentitydecl',''", "'an external entity declaration','externalentitydecl',''", "'an unparsed entity declaration','unparsedentitydecl',''", "'sets the document source','setdocumentsource','fdocumentsource = source;'", "'returns the document source','getdocumentsource','return fdocumentsource;'", "'set content model source','setdtdcontentmodelsource','fcmsource = source;'", "'get content model source','getdtdcontentmodelsource','return fcmsource;'", "'access to production table','production_table','return _production_table;'", "'access to parse-action table','action_table','return _action_table;'", "'access to <code>reduce_goto<code> table','reduce_table','return _reduce_table;'", "'action encapsulation object initializer','init_actions','action_obj = new cup$xpathparser$actions(this);'", "'indicates start state','start_state','return 0;'", "'indicates start production','start_production','return 0;'", "'<code>eof<code> symbol index','eof_sym','return 0;'", "'<code>error<code> symbol index','error_sym','return 1;'", "'reset all xml 1','resetxml10','fnamespacescanner.reset(this); fdtdscanner.reset(this);'", "'reset all xml 1','resetxml11','fxml11nsdocscanner.reset(this); fxml11dtdscanner.reset(this);'", "'','resetnodepool',''", "'justify this layout','handlejustify',''", "'overrides <code>graphics','getfontmetrics','return graphics.getfontmetrics();'", "'overrides <code>graphics','getfontmetrics','return graphics.getfontmetrics(f);'", "'overrides <code>graphics','getclipbounds','return graphics.getclipbounds();'", "'overrides <code>graphics','getclip','return graphics.getclip();'", "'overrides <code>graphics','dispose','graphics.dispose(); graphics = null;'", "'returns the drawingbuffer value','isdrawingbuffer','return buffer != null;'", "'@return start of handler','gethandlerpc','return handler_pc;'", "'@return negation of instruction','negate','return new if_icmple(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_icmpgt(this);'", "'overridden for performance reasons','validate',''", "'overridden for performance reasons','invalidate',''", "'overridden for performance reasons','revalidate',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'flush the stream','flush',''", "'close the stream','close',''", "'sets the default locale','setdefaultlocale','defaultlocale = l;'", "'returns the default locale','getdefaultlocale','return defaultlocale;'", "'','paintspinnerbackground',''", "'@param sourcefile_index','setsourcefileindex','this.sourcefile_index = sourcefile_index;'", "'@inheritdoc','enginegetjcealgorithmstring','return this.signaturealgorithm.getalgorithm();'", "'@inheritdoc','enginegetjceprovidername','return this.signaturealgorithm.getprovider().getname();'", '\'@inheritdoc\',\'enginesethmacoutputlength\',\'throw new xmlsignatureexception("algorithms.hmacoutputlengthonlyforhmac");\'', '\'@inheritdoc\',\'engineinitsign\',\'throw new xmlsignatureexception("algorithms.cannotusealgorithmparameterspeconrsa");\'', "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_ecdsa_sha1;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_ecdsa_sha256;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_ecdsa_sha384;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_ecdsa_sha512;'", "'@see expressionowner#getexpression()','getexpression','return m_firstwalker;'", "'@inheritdoc','getbasenamespace','return encryptionconstants.encryptionspecns;'", "'reads in a boolean','readboolean','return bin.readboolean();'", "'skips bytes','skipbytes','return bin.skipbytes(len);'", "'clears internal data structures','clear','handles.clear(); vlist.clear();'", "'non-public','make','return new simplemethodhandle(type, form);'", "'non-public','speciesdata','return species_data;'", "'getter methods','getnodename','return null;'", "'dom level 3','getbaseuri','return null;'", "'<code>create_thread_policy<code> <b>section 3','create_thread_policy','return new threadpolicyimpl(value);'", "'<code>create_lifespan_policy<code> <b>section 3','create_lifespan_policy','return new lifespanpolicyimpl(value);'", "'<code>create_id_uniqueness_policy<code> <b>section 3','create_id_uniqueness_policy','return new iduniquenesspolicyimpl(value);'", "'<code>create_id_assignment_policy<code> <b>section 3','create_id_assignment_policy','return new idassignmentpolicyimpl(value);'", "'<code>create_implicit_activation_policy<code> <b>section 3','create_implicit_activation_policy','return new implicitactivationpolicyimpl(value);'", "'<code>create_servant_retention_policy<code> <b>section 3','create_servant_retention_policy','return new servantretentionpolicyimpl(value);'", "'<code>create_request_processing_policy<code> <b>section 3','create_request_processing_policy','return new requestprocessingpolicyimpl(value);'", "'sets the <code>jformattedtextfield','setdefaultformatter','defaultformat = atf;'", "'returns the <code>jformattedtextfield','getdefaultformatter','return defaultformat;'", "'sets the <code>jformattedtextfield','setdisplayformatter','displayformat = atf;'", "'returns the <code>jformattedtextfield','getdisplayformatter','return displayformat;'", "'sets the <code>jformattedtextfield','seteditformatter','editformat = atf;'", "'returns the <code>jformattedtextfield','geteditformatter','return editformat;'", "'','setbeginning','this.beginpos[index] = v;'", "'','setend','this.endpos[index] = v;'", "'creates a <code>service<code> instance','create','return new service(wsdldocumentlocation, servicename);'", "'creates a <code>service<code> instance','create','return new service(null, servicename);'", "'@return negation of instruction','negate','return new if_acmpne(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_acmpeq(this);'", "'package private','getdomparser','return domparser;'", "'non-dom: increment documentdoctype counter','assigndocumentnumber','return ++docanddoctypecounter;'", "'non-dom: increment documentdoctype counter','assigndoctypenumber','return ++docanddoctypecounter;'", "'implements <tt>abstractpreferences<tt> <tt>childspi()<tt> method','childspi','return new windowspreferences(this, name);'", "'-----------------------------------------------------------------------','plusyears','return with(isodate.plusyears(years));'", "'{@inheritdoc}','dynamicinvoker','return makedynamicinvoker();'", "'@see expressionowner#getexpression()','getexpression','return m_args[m_argindex];'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(functionmultiargs.this); m_args[m_argindex] = exp;'", "'get the {@link org','gethandler','return handler;'", "'{@inheritdoc}','enginelookupandresolvesecretkey','return null;'", "'returns the underlying model','getmodel','return getmodelwrapper().getmodel();'", "'{@inheritdoc}','getmodelrowcount','return getmodelwrapper().getrowcount();'", "'{@inheritdoc}','modelstructurechanged','allchanged(); modelrowcount = getmodelwrapper().getrowcount();'", "'{@inheritdoc}','allrowschanged','modelrowcount = getmodelwrapper().getrowcount(); sort();'", "'{@inheritdoc} @throws indexoutofboundsexception {@inheritdoc}','rowsupdated','checkcolumn(column); rowsupdated(firstrow, endrow);'", "'creates an entity manager','createentitymanager','return new xmlentitymanager();'", "'creates an error reporter','createerrorreporter','return new xmlerrorreporter();'", "'create a document scanner','createdocumentscanner','return null;'", "'create a dtd scanner','createdtdscanner','return new xmldtdscannerimpl();'", "'createdatatypevalidatorfactory():datatypevalidatorfactory','createvalidationmanager','return new validationmanager();'", "'lays out the grid','arrangegrid','arrangegrid(parent);'", "'@see com','getownerelement','return ((attr) m_attributenode).getownerelement();'", '\'@see org\',\'getnodename\',\'return "#namespace";\'', "'@see org','getnodevalue','return m_attributenode.getnodevalue();'", "'@see org','setnodevalue',''", "'@see org','getnodetype','return xpathnamespace.xpath_namespace_node;'", "'@see org','getparentnode','return m_attributenode.getparentnode();'", "'@see org','getchildnodes','return m_attributenode.getchildnodes();'", "'@see org','getfirstchild','return m_attributenode.getfirstchild();'", "'@see org','getlastchild','return m_attributenode.getlastchild();'", "'@see org','getprevioussibling','return m_attributenode.getprevioussibling();'", "'@see org','getnextsibling','return m_attributenode.getnextsibling();'", "'@see org','getattributes','return m_attributenode.getattributes();'", "'@see org','getownerdocument','return m_attributenode.getownerdocument();'", "'@see org','insertbefore','return null;'", "'@see org','replacechild','return null;'", "'@see org','removechild','return null;'", "'@see org','appendchild','return null;'", "'@see org','haschildnodes','return false;'", "'@see org','clonenode','throw new domexception(domexception.not_supported_err, null);'", "'@see org','normalize','m_attributenode.normalize();'", "'@see org','issupported','return m_attributenode.issupported(arg0, arg1);'", "'@see org','getnamespaceuri','return m_attributenode.getnodevalue();'", "'@see org','getprefix','return m_attributenode.getprefix();'", "'@see org','setprefix',''", "'@see org','getlocalname','return m_attributenode.getprefix();'", "'@see org','hasattributes','return m_attributenode.hasattributes();'", "'','uninstalldefaults','super.uninstalldefaults(b); defaults_initialized = false;'", "'returns the default icon','getdefaulticon','return icon;'", "'paints focused radio button','paintfocus',''", "'comment inherited','setdestinationtype','super.setdestinationtype(destinationtype); setdestination(null);'", "'draws the panel','paint','super.paint(g);'", "'{@inheritdoc}','installdefaults','updatestyle(menuitem);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); menuitem.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); menuitem.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'{@inheritdoc}','installdefaults','toolbar.setlayout(createlayout()); updatestyle(toolbar);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); toolbar.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); toolbar.removepropertychangelistener(this);'", "'{@inheritdoc}','installcomponents',''", "'{@inheritdoc}','uninstallcomponents',''", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'@return type','gettype','return type.float;'", "'call corresponding visitor method(s)','accept','v.visittypedinstruction(this); v.visitstackproducer(this); v.visitstackconsumer(this); v.visitfcmpg(this);'", "'the system context','getsystemcontext','return systemcontext;'", "'this context's logmanager','getowner','return logmanager.this;'", "'logger's tree','getrootlogger','return getowner().rootlogger;'", "'returns the edge condition','getedgecondition','return edgehint;'", "'returns the kernel','getkernel','return (kernel) kernel.clone();'", "'append @param s','append','append(s.ch, s.offset, s.length);'", "'-------------------------------------------------------------------','getchild','return fchild;'", "'-------------------------------------------------------------------','calcfirstpos','toset.setto(fchild.firstpos());'", "'parse an xml document','parse',''", "'sets the dtd handler','setdtdhandler',''", "'returns the locale','getlocale','return flocale;'", "'compare two version strings','compareversion','return compareversion(parseversion(v1), parseversion(v2));'", "'returns the enterprise oid','getenterpriseoid','return enterpriseoid.tostring();'", "'sets the enterprise oid','setenterpriseoid','enterpriseoid = new snmpoid(oid);'", "'returns the node index','getnodeindex','return fnodeindex;'", "'{@inheritdoc} @since 1','installui','super.installui(c); updatedisplayproperties(c.getfont(), c.getforeground());'", "'{@inheritdoc} @since 1','uninstallui','cleandisplayproperties(); super.uninstallui(c);'", "'@return negation of instruction','negate','return new ifeq(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifne(this);'", "'public identifier','getpublicid','return flocator.getpublicid();'", "'system identifier','getsystemid','return flocator.getexpandedsystemid();'", "'line number','getlinenumber','return flocator.getlinenumber();'", "'column number','getcolumnnumber','return flocator.getcolumnnumber();'", "'creates a new <code>attributetracker<code>','createinputattributeupdated','inputattributeupdater = new attributetracker();'", "'gets the day-of-month field','getdayofmonth','return day;'", "'installs the given <code>java','settypemap','this.map = map;'", "'call corresponding visitor method(s)','accept','v.visitimpdep1(this);'", "'gets the year field','getyear','return datetime.getyear();'", "'gets the day-of-month field','getdayofmonth','return datetime.getdayofmonth();'", "'gets the day-of-year field','getdayofyear','return datetime.getdayofyear();'", "'gets the hour-of-day field','gethour','return datetime.gethour();'", "'gets the minute-of-hour field','getminute','return datetime.getminute();'", "'gets the second-of-minute field','getsecond','return datetime.getsecond();'", "'gets the nano-of-second field','getnano','return datetime.getnano();'", "'creates the default divider','createdefaultdivider','return new motifsplitpanedivider(this);'", "'inherits javadocs from object','tostring','return getname();'", "'{attribute wildcard} optional','getattributewildcard','return fattrgrp.getattributewildcard();'", "'@see org','getnamespaceitem','return fnamespaceitem;'", "'(non-javadoc) @see org','getattributeuse','return fattrgrp.getattributeuse(namespace, name);'", "'returns the transparency','gettransparency','return transparency;'", "'needed by reflectaccess','gettypeannotationbytes','return gettypeannotationbytes0();'", "'{@inheritdoc} @throws nullpointerexception {@inheritdoc}','getannotation','objects.requirenonnull(annotationclass); return annotationclass.cast(declaredannotations().get(annotationclass));'", "'{@inheritdoc} @throws nullpointerexception {@inheritdoc}','getannotationsbytype','objects.requirenonnull(annotationclass); return annotationsupport.getdirectlyandindirectlypresent(declaredannotations(), annotationclass);'", "'{@inheritdoc}','getdeclaredannotations','return annotationparser.toarray(declaredannotations());'", "'flushes this encoder','implflush','return coderresult.underflow;'", "'implementation of combopopup','getlist','return list;'", "'','mouseclicked',''", "'','mousewheelmoved','e.consume();'", "'@see org','gettypename','return null;'", "'@see org','gettypenamespace','return null;'", "'@see or','isderivedfrom','return false;'", "'returns the lease duration','getvalue','return value;'", "'1','write','super.write(ostream);'", "'directexecutor using caller thread','execute','r.run();'", "'method printstacktrace @param printwriter','printstacktrace','super.printstacktrace(printwriter);'", "'method printstacktrace @param printstream','printstacktrace','super.printstacktrace(printstream);'", "'sets the dtd handler','setdtdhandler','fdtdhandler = dtdhandler;'", "'returns the locale','getlocale','return flocale;'", "'{@inheritdoc}','installdefaults','updatestyle(c);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'overriden to do nothing','initfocusability',''", "'returns the <code>java','getcomponent','return this;'", "'factory method','lambdaformeditor','return new lambdaformeditor(lambdaform.uncustomize());'", "'set possible roots','setpossibleroots','fpossibleroots = possibleroots;'", "'get the association list','getcontents','return _contents;'", "'@see javax','geteventhandler','return eventhandler;'", "'get the association list','getcontents','return _contents;'", "'--------------------------------------------------------------------','getrootoid',''", "'returns the public exponent','getpublicexponent','return this.publicexponent;'", "'returns the primep','getprimep','return this.primep;'", "'returns the primeq','getprimeq','return this.primeq;'", "'returns the primeexponentp','getprimeexponentp','return this.primeexponentp;'", "'returns the primeexponentq','getprimeexponentq','return this.primeexponentq;'", "'returns the crtcoefficient','getcrtcoefficient','return this.crtcoefficient;'", "'get the nth element','elementat','return m_map[i];'", "'@inheritdoc','enginegetjcealgorithmstring','return this.signaturealgorithm.getalgorithm();'", "'@inheritdoc','enginegetjceprovidername','return this.signaturealgorithm.getprovider().getname();'", '\'@inheritdoc\',\'enginesethmacoutputlength\',\'throw new xmlsignatureexception("algorithms.hmacoutputlengthonlyforhmac");\'', '\'@inheritdoc\',\'engineinitsign\',\'throw new xmlsignatureexception("algorithms.cannotusealgorithmparameterspeconrsa");\'', "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_rsa_sha1;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_rsa_sha256;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_rsa_sha384;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_rsa_sha512;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_rsa_ripemd160;'", "'@inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_not_recommended_rsa_md5;'", "'makes the multihashtable unmodifiable','makeunmodifiable','modifiable = false;'", "'@see expressionowner#getexpression()','getexpression','return m_expr;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(filterexprwalker.this); m_expr = exp;'", "'thread service','createthread','return new thread(this);'", "'reply mesg body','write','super.write(ostream); ostream.write_ulong(this.request_id); ostream.write_long(this.reply_status);'", "'{attribute wildcard} optional','getattributewildcard','return fattributewc;'", "'@see org','getnamespaceitem','return fnamespaceitem;'", "'writes a string','write','write(str, 0, str.length());'", "'get the request method','getrequestmethod','return method;'", "'returns the signature timestamp','gettimestamp','return timestamp;'", "'','getselectcolor','return selectcolor;'", "'@return org','getiopcomponent','return new org.omg.iop.taggedcomponent(getid(), getdata());'", "'calls {@link com','decodesnmppdu','return msg.decodesnmppdu();'", "'convenience method','getnamespaces','return fnamespaceslist;'", "'convenience method','getsubstitutiongroup','return (xsobjectlist) fsubgroupmap.get(head);'", "'implementation internal','newxssimpletypedecl','return new xssimpletypedecl();'", "'return the base identifier','getbaseidentifier','return null;'", "'@see prefixresolver#handlesnullprefixes()','handlesnullprefixes','return false;'", "'gets the local port','getlocalport','return localport;'", "'remove class from repository','removeclass','_loadedclasses.remove(clazz.getclassname());'", "'{@inheritdoc}','getid','return id;'", "'gets the <code>transferhandler<code> property','gettransferhandler','return transferhandler;'", "'just calls <code>paint(g)<code>','update','paint(g);'", "'sets the contentpane property','setcontentpane','getrootpane().setcontentpane(contentpane);'", "'sets the layeredpane property','setlayeredpane','getrootpane().setlayeredpane(layeredpane);'", "'sets the glasspane property','setglasspane','getrootpane().setglasspane(glasspane);'", "'{@inheritdoc} @since 1','getgraphics','jcomponent.getgraphicsinvoked(this); return super.getgraphics();'", "'initialize catalog','initializecatalogs','catalog = catalogmanager.getcatalog();'", "'return the underlying catalog','getcatalog','return catalog;'", "'{@inheritdoc}','getcolormodel','return model;'", "'returns the drag image','getdragimage','return dragimage;'", "'@see javax','newvalidator','return new validatorimpl(this);'", "'@see javax','newvalidatorhandler','return new validatorhandlerimpl(this);'", "'@inheritdoc','getbaselocalname','return constants._tag_x509subjectname;'", "'call corresponding visitor method(s)','accept','v.visitnop(this);'", "'@see nodelist','getlength','return nodelistgetlength();'", "'@see nodelist','item','return nodelistitem(index);'", "'deserialize object','readobject','ois.defaultreadobject(); needssyncchildren(false);'", "'see requestinfoimpl for javadoc','operation','return messagemediator.getoperationname();'", "'see requestinfoimpl for javadoc','response_expected','return !messagemediator.isoneway();'", "'see comment for setdiiinitiate','isdiiinitiate','return this.diiinitiate;'", "'a comment','comment',''", "'a processing instruction','processinginstruction',''", "'set content model source','setdtdcontentmodelsource','fdtdcontentmodelsource = source;'", "'get content model source','getdtdcontentmodelsource','return fdtdcontentmodelsource;'", "'returns the symbol table','getsymboltable','return fsymboltable;'", "'pp','iscyclic','return false;'", "'pp','iscyclic','return s.iscyclic(l);'", "'pp','iscyclic','return s.iscyclic(l);'", "'pp','iscyclic','return s.iscyclic(l);'", "'pp','iscyclic','return l.iscyclic(s1) || l.iscyclic(s2);'", "'pp','difference','return sum(s1, minus(s2));'", "'removes all the mappings','clear','table = null;'", "'{@inheritdoc}','getwriter','return writer;'", "'{@inheritdoc}','getreader','return reader;'", "'{@inheritdoc}','setreader','this.reader = reader;'", "'{@inheritdoc}','setwriter','this.writer = writer;'", "'{@inheritdoc}','geterrorwriter','return errorwriter;'", "'{@inheritdoc}','seterrorwriter','this.errorwriter = writer;'", "'{@inheritdoc}','getscopes','return scopes;'", "'register the entity resolver','setentityresolver','xmlreader.setentityresolver(resolver);'", "'parse the document','parse','parse(new inputsource(systemid));'", "'parse the document','parse','setupxmlreader(); xmlreader.parse(input);'", "'api changes are allowed','requestfocusforvisiblecomponent','return swingutilities2.tabbedpanechangefocusto(getvisiblecomponent());'", "'','mouseclicked',''", "'','mousedragged',''", "'','focusgained','setfocusindex(tabpane.getselectedindex(), true);'", "'dom level 3: isid','isid','return isidattribute();'", "'@see org','gettypename','return (string) type;'", "'method getschematypeinfo','getschematypeinfo','return this;'", "'deserialize object','readobject','ois.defaultreadobject(); needssyncchildren(false);'", "'removes a <code>rowsorterlistener<code>','removerowsorterlistener','listenerlist.remove(rowsorterlistener.class, l);'", "'@see org','endcdata',''", "'from xsltc','addattribute',''", "'add a unique attribute','adduniqueattribute',''", "'{@inheritdoc}','updateafterchange','breakspots = null;'", "'returns the class part','getclassname','return classname;'", "'call corresponding visitor method(s)','accept','v.visitimpdep2(this);'", "'this implementation does nothing','delete','return false;'", "'@return {@code this','getkind','return kind;'", "'returns the encoded key','getencoded','return this.encodedkey.clone();'", "'override dtmdefaultbase','_exptype','return m_exptype.elementat(identity);'", "'internal debugging routines','pattern2string','return pattern2string(pattern, true);'", "'execute the function','execute','return new xnumber(java.lang.math.floor(m_arg0.execute(xctxt).num()));'", "'-------------------------------------------------------------------','getleft','return fleftchild;'", "'{@inheritdoc}','finalize',''", "'','getinttable','return enumrowstatus.getrsinttable();'", "'','getstringtable','return enumrowstatus.getrsstringtable();'", "'generates the parameters','generateparameters','return paramgenspi.enginegenerateparameters();'", "'{@inheritdoc}','installdefaults','updatestyle(c);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'implements the <code>snmppdubulktype<code> interface','setmaxrepetitions','maxrepetitions = i;'", "'implements the <code>snmppdubulktype<code> interface','setnonrepeaters','nonrepeaters = i;'", "'implements the <code>snmppdubulktype<code> interface','getmaxrepetitions','return maxrepetitions;'", "'implements the <code>snmppdubulktype<code> interface','getnonrepeaters','return nonrepeaters;'", "'@return data bytes','getbytes','return bytes;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@return attribute name','tostring','return constants.attribute_names[constants.attr_deprecated];'", "'call corresponding visitor method(s)','accept','v.visitstackproducer(this); v.visitbranchinstruction(this); v.visitjsrinstruction(this); v.visitjsr_w(this);'", "'returns the node','getnode','return node;'", "'{@inheritdoc}','installdefaults','super.installdefaults(); updatestyle(chooser);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); chooser.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','chooser.removepropertychangelistener(this); super.uninstalllisteners();'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'','gettokenstring','return ftokennames.get(token);'", "'@param name_index of attribute','setnameindex','this.name_index = name_index;'", "'@return attribute name','tostring','return constants.attribute_names[tag];'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitfload(this);'", "'returns the parent node','getparent','return parent;'", "'returns the nextsibling node','getnextsibling','return nextsibling;'", "'always returns {@code true}','isempty','return true;'", "'always returns zero','size','return 0;'", "'always returns zero','remainingcapacity','return 0;'", "'does nothing','clear',''", "'always returns {@code false}','contains','return false;'", "'always returns {@code false}','remove','return false;'", "'always returns {@code false}','removeall','return false;'", "'always returns {@code false}','retainall','return false;'", "'always returns {@code null}','peek','return null;'", "'returns a zero-length array','toarray','return new object[0];'", "'@return the position, i','getposition','return i_position;'", "'set the position, i','setposition','i_position = pos;'", "'gets the revocation options','getoptions','return collections.unmodifiableset(options);'", "'get the association list','getcontents','return _contents;'", "'gets the specified menu','getmenu','return getmenuimpl(i);'", "'defined in menucomponent','getaccessiblechildindex','return menus.indexof(child);'", "'returns the node index','getnodeindex','return fnodeindex;'", "'@see expressionowner#getexpression()','getexpression','return m_exp;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(funcextfunction.this); m_exp = exp;'", "'get the object name','getname','return name;'", "'get the object','getobject','return object;'", "'@param length','setlength','this.length = length;'", "'@param name_index','setnameindex','this.name_index = name_index;'", "'@param signature_index','setsignatureindex','this.signature_index = signature_index;'", "'@param index','setindex','this.index = index;'", '\'{@inheritdoc} @since 1\',\'uninstalllisteners\',\'super.uninstalllisteners(); combobox.removepropertychangelistener("componentorientation", componentorientationlistener);\'', "'{@inheritdoc} @since 1','unconfigureeditor','super.unconfigureeditor(); editor.removemouselistener(rolloverlistener);'", "'{@inheritdoc} @since 1','getbounds2d','return getbounds();'", "'{@inheritdoc} @since 1','contains','return contains(p.getx(), p.gety());'", "'@return negation of instruction','negate','return new ifge(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitiflt(this);'", "'','comparedocorder','return _node - other._node;'", "'get the association list','getcontents','return _contents;'", "'{@inheritdoc} @since 1','getx','return (double) x;'", "'{@inheritdoc} @since 1','gety','return (double) y;'", "'{@inheritdoc} @since 1','getwidth','return (double) width;'", "'{@inheritdoc} @since 1','getheight','return (double) height;'", "'{@inheritdoc} @since 1','getarcwidth','return (double) arcwidth;'", "'{@inheritdoc} @since 1','getarcheight','return (double) archeight;'", "'{@inheritdoc} @since 1','getx','return x;'", "'{@inheritdoc} @since 1','gety','return y;'", "'{@inheritdoc} @since 1','getwidth','return width;'", "'{@inheritdoc} @since 1','getheight','return height;'", "'{@inheritdoc} @since 1','getarcwidth','return arcwidth;'", "'{@inheritdoc} @since 1','getarcheight','return archeight;'", "'{@inheritdoc}','installdefaults','updatestyle(p);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'execute the function','execute','return (xstring) getarg0asstring(xctxt);'", "'@return corresponding source line','getlinenumber','return line_number;'", "'@return pc in code','getstartpc','return start_pc;'", "'@param line_number','setlinenumber','this.line_number = line_number;'", "'@param start_pc','setstartpc','this.start_pc = start_pc;'", "'getter methods','gettagname','return null;'", "'gets the current value','get','return value;'", "'(non-javadoc) @see com','getprefix','return getprefix(uri, fnamespacesize, fcontext[fscope[fcurrentscope]]);'", "'(non-javadoc) @see com','geturi','return geturi(prefix, fnamespacesize, fcontext[fscope[fcurrentscope]]);'", "'pops the current scope','popscope','fcurrentcontext = fscope[fcurrentscope--]; popcontext();'", "'maps an html','getcssattribute','return htmlattrtocssattrmap.get(hattr);'", '\'used by viewattributeset\',\'isitalic\',\'return (svalue.indexof("italic") != -1);\'', "'@inheritdoc','getbaselocalname','return constants._tag_pgpdata;'", "'adds the <code>celleditorlistener<code>','addcelleditorlistener','realeditor.addcelleditorlistener(l);'", "'overrides <code>jcomponent','getborder','return border;'", "'allowed','editorcontainer','setlayout(null);'", "'begin accessiblecontext implementation','getaccessiblecontext','return this;'", "'begin accessiblecomponent implementation','getaccessiblecomponent','return this;'", "'sets the row headers','setaccessiblerowheader',''", "'sets the column headers','setaccessiblecolumnheader',''", "'sets the row headers','setaccessiblerowheader',''", "'sets the column headers','setaccessiblecolumnheader',''", "'validates the receiver','validate','isvalid = true; loadchildren(getelement());'", "'get the entry type','getentrytype','return entrytype;'", "'set an entry argument','setentryarg','args.set(argnum, newspec);'", "'read needed data (e','initfromfile',''", "'@return this instructions opcode','getopcode','return opcode;'", "'needed in readinstruction','setopcode','this.opcode = opcode;'", "'com','consumeendian','throw wrapper.giopversionerror();'", "'org','read_abstract','return read_abstract_interface();'", "'','marksupported','return true;'", "'needed by typecodeimpl','islittleendian','throw wrapper.giopversionerror();'", "'selects the specified interval','setselectioninterval','getselectionmodel().setselectioninterval(anchor, lead);'", "'@since 1','trimtosize','super.trimtosize();'", "'@since 1','codepointat','return super.codepointat(index);'", "'@since 1','codepointbefore','return super.codepointbefore(index);'", "'@since 1','codepointcount','return super.codepointcount(beginindex, endindex);'", "'@since 1','offsetbycodepoints','return super.offsetbycodepoints(index, codepointoffset);'", "'@throws indexoutofboundsexception {@inheritdoc}','getchars','super.getchars(srcbegin, srcend, dst, dstbegin);'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, b); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, i); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, l); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, f); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, d); return this;'", "'@since 1','indexof','return super.indexof(str);'", "'@since 1','indexof','return super.indexof(str, fromindex);'", "'@since 1','lastindexof','return lastindexof(str, count);'", "'@since 1','lastindexof','return super.lastindexof(str, fromindex);'", "'returns the sub-text font','getsubtextfont','return getfont(sub_text_font);'", "'do nothing','startdtd',''", "'sets the lexicalhandler','setlexhandler','this.m_lexhandler = _lexhandler;'", "'does nothing','setcdatasectionelements',''", "'add a unique attribute','adduniqueattribute','addattribute(qname, value);'", "'@deprecated','invoke','ref.invoke(call);'", "'@deprecated','done','ref.done(call);'", '\'see above\',\'align\',\'return align(targetstr, paddingstr, "left");\'', '\'see above\',\'padding\',\'return padding(length, " ");\'', '\'see above\',\'split\',\'return split(str, " ");\'', '\'see above\',\'tokenize\',\'return tokenize(totokenize, " \\t\\n\\r");\'', "'@inheritdoc','write','write(arg0, 0, arg0.length);'", "'@inheritdoc','write','mda.update((byte) arg0);'", "'@return the digest value','getdigestvalue','return mda.digest();'", "'creates the default divider','createdefaultdivider','return new windowssplitpanedivider(this);'", "'throws {@code unsupportedoperationexception}','stop','throw new unsupportedoperationexception();'", "'throws {@link nosuchmethoderror}','destroy','throw new nosuchmethoderror();'", "'suspends this thread','suspend','checkaccess(); suspend0();'", "'resumes a suspended thread','resume','checkaccess(); resume0();'", "'returns this thread's priority','getpriority','return priority;'", "'returns this thread's name','getname','return name;'", "'method enginegeturi @inheritdoc','enginegeturi','return implementedtransformuri;'", "'returns the unknown type','getunknowntype','return type;'", "'returns the additional argument','getargument','return parameter;'", "'resolve an external entity','resolveentity','return null;'", "'@return current object','current','return stack.peek();'", "'start traversal','visit','clazz.accept(this);'", "'{@inheritdoc}','enginecanresolve','return xmlutils.elementisinsignature11space(element, constants._tag_keyinforeference);'", "'@inheritdoc','enginegeturi','return implementedtransformuri;'", "'clears the stack','clear','m_index = -1;'", "'skip characters','skip','return finputstream.skip(n);'", "'reset the stream','reset','finputstream.reset();'", "'stops the timer thread','stop','timer.stop();'", "'iterator methods','hasnext','return hasmoreelements();'", "'returns this completablefuture','tocompletablefuture','return this;'", "'get a current pseudo-object','get_current','checkshutdownstate(); throw wrapper.genericnoimpl();'", "'this method does nothing','perform_work','checkshutdownstate(); throw wrapper.genericnoimpl();'", "'set flag to true','set','_flag = true;'", "'get value','value','return _flag;'", "'reset flag to true','reset','_flag = false;'", "'retrieves the field identifier','getfield','return field;'", "'sets the begin index','setbeginindex','beginindex = bi;'", "'sets the end index','setendindex','endindex = ei;'", "'returns a <code>format','getfielddelegate','return new delegate();'", "'returns the hash code','hashcode','return charindex;'", "'identical to {@link #equals(dataflavor)}','match','return equals(that);'", "'reset the stream','reset','finputstream.reset();'", "'finalizes the hashcode method','hashcode','return super.hashcode();'", "'call corresponding visitor method(s)','accept','v.visitstackinstruction(this); v.visitdup2_x2(this);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); menubar.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); menubar.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'returns the <code>data<code>','getdata','return data;'", "'returns the public identifier','getpublicid','return fpublicid;'", "'returns the line number','getlinenumber','return flinenumber;'", "'returns the row number','getcolumnnumber','return fcolumnnumber;'", "'returns the character offset','getcharacteroffset','return fcharacteroffset;'", '\'printing this token out\',\'tostring\',\'return "#" + sym;\'', "'create an org','makenode','return makenode(iter.next());'", "'create an org','makenodelist','return new dtmaxisiternodelist(this, iter);'", "'return the attributes map','getelementswithids','return m_idattributes;'", "'no-op','marshal','return s;'", "'@see javax','geturl','return url;'", "'@see javax','getoffset','return offset;'", "'@see javax','getlinenumber','return linenumber;'", "'@see javax','getcolumnnumber','return columnnumber;'", "'@see javax','getobject','return object;'", "'@see javax','getnode','return node;'", "'------------------------------------------------------------------','getattribute','return mbean.getattribute(attribute);'", "'------------------------------------------------------------------','setattribute','mbean.setattribute(attribute);'", "'------------------------------------------------------------------','getattributes','return mbean.getattributes(attributes);'", "'------------------------------------------------------------------','setattributes','return mbean.setattributes(attributes);'", "'------------------------------------------------------------------','invoke','return mbean.invoke(actionname, params, signature);'", "'reset the iterator','reset','m_next = 0;'", "'@inheritdoc','getbaselocalname','return xpath2filtercontainer04._tag_xpath2;'", "'@inheritdoc','getbasenamespace','return xpath2filtercontainer04.xpathfilter2ns;'", "'sets the dtd handler','setdtdhandler','fdtdhandler = dtdhandler;'", "'returns the locale','getlocale','return flocale;'", "'(non-javadoc) @see com','setparameter','fschemaloader.setparameter(name, value);'", "'(non-javadoc) @see com','getparameter','return fschemaloader.getparameter(name);'", "'(non-javadoc) @see com','cansetparameter','return fschemaloader.cansetparameter(name, value);'", "'(non-javadoc) @see com','getparameternames','return fschemaloader.getparameternames();'", "'org','write_value','impl.write_value(value);'", "'java','write','impl.write(b);'", "'com','start_block','impl.start_block();'", "'org','write_abstract','impl.write_abstract(value);'", "'org','_truncatable_ids','return impl._truncatable_ids();'", "'other','getsize','return impl.getsize();'", "'performed','createcharctbconverter','return codesetconversion.impl().getctbconverter(osfcodesetregistry.iso_8859_1);'", "'implementation methods','internalmembername','return member;'", "'static wrapper for directmethodhandle','internalmembername','return ((directmethodhandle) mh).member;'", "'non-public','ensureinitialized','((directmethodhandle) mh).ensureinitialized();'", "'overridden by standardmbeansupport','getmbeaninfo','return mbeaninfo;'", "'writes a <code>java','writebigdecimal','attribs.add(x);'", "'writes a <code>java','writedate','attribs.add(x);'", "'writes a <code>java','writetime','attribs.add(x);'", "'writes a <code>java','writetimestamp','attribs.add(x);'", "'method enginegeturi @inheritdoc','enginegeturi','return implementedtransformuri;'", "'@see org','getnamespaceitem','return null;'", "'gets the hour-of-day field','gethour','return hour;'", "'gets the minute-of-hour field','getminute','return minute;'", "'gets the second-of-minute field','getsecond','return second;'", "'gets the nano-of-second field','getnano','return nano;'", "'','addnotificationlistener','broadcaster.addnotificationlistener(listener, filter, handback);'", "'','removenotificationlistener','broadcaster.removenotificationlistener(listener, filter, handback);'", "'','removenotificationlistener','broadcaster.removenotificationlistener(listener);'", "'update target of instruction','updatetarget','bi.updatetarget(old_ih, new_ih);'", "'@return target of instruction','gettarget','return bi.gettarget();'", "'returns this buffer's capacity','capacity','return capacity;'", "'returns this buffer's position','position','return position;'", "'returns this buffer's limit','limit','return limit;'", "'@inheritdoc','enginegeturi','return canonicalizer.algo_id_c14n_physical;'", "'@inheritdoc','enginegetincludecomments','return true;'", "'{@inheritdoc}','finalize',''", "'gets the nested exception','getnestedexception','return nested;'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'paints the specified component','paint','super.paint(g, getcomponent());'", "'{@inheritdoc}','installdefaults','super.installdefaults(); updatestyle(getcomponent()); getcomponent().addfocuslistener(handler);'", "'opens a server-socket channel','open','return selectorprovider.provider().openserversocketchannel();'", "'@see com','isfragmentresolved','return fisfragmentresolved;'", "'@see com','getschemedata','return null;'", "'@see com','setschemename','fshorthandpointer = schemename;'", "'@see com','setschemedata',''", "'publish a <tt>logrecord<tt>','publish','super.publish(record); flush();'", "'override <tt>streamhandler','close','flush();'", "'getters','oa','return oa;'", "'setters','setoperation','this.operation = operation;'", "'get the prompt','getprompt','return prompt;'", "'get the default text','getdefaulttext','return defaulttext;'", "'set the retrieved text','settext','this.inputtext = text;'", "'get the retrieved text','gettext','return inputtext;'", "'create a motifsliderui object','createui','return new motifsliderui((jslider) b);'", "'equivalent to <code>getnameditem(localname)<code>','getnameditemns','return getnameditem(localname);'", "'equivalent to <code>setnameditem(arg)<code>','setnameditemns','return setnameditem(arg);'", "'equivalent to <code>removenameditem(localname)<code>','removenameditemns','return removenameditem(localname);'", "'equivalent to <code>getnodename<code>','getlocalname','return nodename;'", "'equivalent to <code>getnodename<code>','gettagname','return nodename;'", "'equivalent to <code>getattribute(localname)<code>','getattributens','return getattribute(localname);'", "'equivalent to <code>setattribute(qualifiedname, value)<code>','setattributens','setattribute(qualifiedname, value);'", "'equivalent to <code>removeattribute(localname)<code>','removeattributens','removeattribute(localname);'", "'equivalent to <code>getattributenode(localname)<code>','getattributenodens','return getattributenode(localname);'", "'equivalent to <code>setattributenode(newattr)<code>','setattributenodens','return setattributenode(newattr);'", "'equivalent to <code>getelementsbytagname(localname)<code>','getelementsbytagnamens','return getelementsbytagname(localname);'", "'equivalent to <code>hasattribute(localname)<code>','hasattributens','return hasattribute(localname);'", "'@see org','gettypename','return null;'", "'@see org','gettypenamespace','return null;'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitpopinstruction(this); v.visitstackinstruction(this); v.visitpop2(this);'", "'@return array of constants','getconstantpool','return constant_pool;'", "'@inheritdoc','enginelookupresolvex509certificate','return null;'", "'@inheritdoc','enginelookupandresolvesecretkey','return null;'", "'see description in cdrinputstream','performorbversionspecificinit','createrepositoryidhandlers();'", "'is actually used','getcodebase','return parent.getcodebase();'", "'@param catch_type','setcatchtype','this.catch_type = catch_type;'", "'sets the input source','setinputsource','fentitymanager.setentityhandler(this); fentitymanager.startdocumententity(inputsource); setscannerstate(xmlevent.start_document);'", "'getnamespacecontext','getnamespacecontext','return fnamespacecontext;'", "'creates a content driver','createcontentdriver','return new contentdriver();'", "'element depth iz zero','elementdepthiszerohook','setscannerstate(scanner_state_trailing_misc); setdriver(ftrailingmiscdriver); return true;'", '\'end of file hook\',\'endoffilehook\',\'reportfatalerror("prematureeof", null);\'', "'-------------------------------------------------------------','getelements','return varbinds.elements();'", "'-------------------------------------------------------------','getsublist','return varbinds;'", "'-------------------------------------------------------------','addvarbind','varbinds.addelement(varbind); global.addvarbind(varbind);'", "'-------------------------------------------------------------','isnewentry','return isnew;'", "'-------------------------------------------------------------','getentryoid','return entryoid;'", "'-------------------------------------------------------------','getuserdata','return global.getuserdata();'", "'-------------------------------------------------------------','getversion','return version;'", "'-------------------------------------------------------------------','switchcreationflag','creationflag = flag;'", "'gets the locale','getlocale','return formatter.getlocale();'", "'gets the decimalstyle','getdecimalstyle','return formatter.getdecimalstyle();'", "'groups are irrelevant','begingroup',''", "'groups are irrelevant','begingroup',''", "'activate snmp v3 encryption','activateencryption','this.encrypt = true;'", "'deactivate snmp v3 encryption','deactivateencryption','this.encrypt = false;'", "'set the engine id','setengineid','this.engineid = engineid;'", "'get the engine id','getengineid','return engineid;'", "'sets <code>inprogress<code> to false','end','inprogress = false;'", "'no-op','setdocumentsource',''", "'always returns <code>null<code>','getexternalsubset','return null;'", "'get the association list','getcontents','return _contents;'", "'gets the current date','getdate','return new date(crtime);'", "'gets the current date','getdatetime','return crtime;'", "'returns the cofactor','getcofactor','return h;'", "'registers an <code>undoableeditlistener<code>','addundoableeditlistener','listeners.addelement(l);'", "'removes an <code>undoableeditlistener<code>','removeundoableeditlistener','listeners.removeelement(l);'", "'called only from <code>beginupdate<code>','createcompoundedit','return new compoundedit();'", "'{@inheritdoc}','setactioncommand','this.actioncommand = actioncommand;'", "'{@inheritdoc}','getactioncommand','return actioncommand;'", "'{@inheritdoc}','setmnemonic','mnemonic = key; firestatechanged();'", "'{@inheritdoc}','getmnemonic','return mnemonic;'", "'{@inheritdoc}','addchangelistener','listenerlist.add(changelistener.class, l);'", "'{@inheritdoc}','removechangelistener','listenerlist.remove(changelistener.class, l);'", "'{@inheritdoc}','addactionlistener','listenerlist.add(actionlistener.class, l);'", "'{@inheritdoc}','removeactionlistener','listenerlist.remove(actionlistener.class, l);'", "'{@inheritdoc}','additemlistener','listenerlist.add(itemlistener.class, l);'", "'{@inheritdoc}','removeitemlistener','listenerlist.remove(itemlistener.class, l);'", "'overridden to return <code>null<code>','getselectedobjects','return null;'", "'{@inheritdoc}','setgroup','this.group = group;'", "'reads {@code b','readfully','readfully(b, 0, b.length);'", "'writes {@code b','write','writebytes(b, 0, b.length);'", "'prints a character','print','write(string.valueof(c));'", "'prints an integer','print','write(string.valueof(i));'", "'prints a long integer','print','write(string.valueof(l));'", "'prints a floating-point number','print','write(string.valueof(f));'", "'prints an object','print','write(string.valueof(obj));'", "'boilerplate','createui','return new metaltreeui();'", "'reports xpointer warnings','reportwarning','fxpointererrorreporter.reporterror(xpointermessageformatter.xpointer_domain, key, arguments, xmlerrorreporter.severity_warning);'", "'-----------------------------------------------------------------------','resolvedate','return (thaibuddhistdate) super.resolvedate(fieldvalues, resolverstyle);'", "'stops the string monitor','stop','dostop();'", "'fetches an empty attributeset','getemptyset','return simpleattributeset.empty;'", "'adds a change listener','addchangelistener','listenerlist.add(changelistener.class, l);'", "'removes a change listener','removechangelistener','listenerlist.remove(changelistener.class, l);'", "'no-op','write',''", "'get the prompt','getprompt','return prompt;'", "'returns the node index','getnodeindex','return fnodeindex;'", "'returns the class','getdefinitionclass','return mclass;'", '\'warning\',\'warning\',\'printerror("warning", ex);\'', '\'error\',\'error\',\'printerror("error", ex);\'', "'returns the additional argument','getargument','return parameter;'", "'method add @param xmlx509issuerserial','add','this.constructionelement.appendchild(xmlx509issuerserial.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addski @param skibytes','addski','this.add(new xmlx509ski(this.doc, skibytes));'", "'method add @param xmlx509ski','add','this.constructionelement.appendchild(xmlx509ski.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addsubjectname @param subjectname','addsubjectname','this.add(new xmlx509subjectname(this.doc, subjectname));'", "'method addsubjectname @param x509certificate','addsubjectname','this.add(new xmlx509subjectname(this.doc, x509certificate));'", "'method add @param xmlx509subjectname','add','this.constructionelement.appendchild(xmlx509subjectname.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addcertificate @param x509certificatebytes','addcertificate','this.add(new xmlx509certificate(this.doc, x509certificatebytes));'", "'method add @param xmlx509certificate','add','this.constructionelement.appendchild(xmlx509certificate.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addcrl @param crlbytes','addcrl','this.add(new xmlx509crl(this.doc, crlbytes));'", "'method add @param xmlx509crl','add','this.constructionelement.appendchild(xmlx509crl.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method add @param xmlx509digest','add','this.constructionelement.appendchild(xmlx509digest.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addunknownelement @param element','addunknownelement','this.constructionelement.appendchild(element); xmlutils.addreturntoelement(this.constructionelement);'", "'@inheritdoc','getbaselocalname','return constants._tag_x509data;'", "'@return negation of instruction','negate','return new iflt(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifge(this);'", "'gets the <code>onetouchexpandable<code> property','isonetouchexpandable','return onetouchexpandable;'", "'returns the orientation','getorientation','return orientation;'", "'gets the <code>continuouslayout<code> property','iscontinuouslayout','return continuouslayout;'", "'@inheritdoc','getbaselocalname','return constants._tag_x509certificate;'", "'@see expressionowner#getexpression()','getexpression','return m_expr;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(filterexpriteratorsimple.this); m_expr = exp;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitastore(this);'", "'returns the node index','getnodeindex','return fnodeindex;'", "'returns the truncation length','getoutputlength','return outputlength;'", "'@return type','gettype','return type.null;'", "'call corresponding visitor method(s)','accept','v.visitstackproducer(this); v.visitpushinstruction(this); v.visittypedinstruction(this); v.visitaconst_null(this);'", "'return the next binding','next_one','return nextone(b);'", "'destroy this bindingiterator object','destroy','this.destroy();'", "'returns the asn','getencoded','return mencoded.clone();'", "'non-public','internalform','return form;'", "'non-public','internalmembername','return null;'", "'non-public','internalcallerclass','return null;'", "'non-public','intrinsicname','return methodhandleimpl.intrinsic.none;'", "'non-public','isinvokespecial','return false;'", "'non-public','internalvalues','return null;'", '\'non-public\',\'internalproperties\',\'return "";\'', "'get the association list','getcontents','return _contents;'", "'create all built-in types','createbuiltintypes','createbuiltintypes(fbuiltintypes, xssimpletypedecl.fanysimpletype);'", "'returns the unknown conversion','getconversion','return s;'", "'sets the default cursor','setdefaultcursor','defaultcursor = cursor;'", "'returns the default cursor','getdefaultcursor','return defaultcursor;'", "'ignore the drags','mousedragged',''", "'@see extendedcontenthandler#endelement(string)','endelement','endelement(null, null, elemname);'", "'this method does nothing','attributedecl',''", "'this method does nothing','elementdecl',''", "'this method does nothing','internalentitydecl',''", "'this method does nothing','externalentitydecl',''", "'@return negation of instruction','negate','return new if_icmpgt(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_icmple(this);'", "'deny knowledge of properties','getpropertydescriptors','return null;'", "'deny knowledge of methods','getmethoddescriptors','return null;'", "'','createbuttonlistener','return new motifbuttonlistener(b);'", "'returns the document handler','getdocumenthandler','return fdocumenthandler;'", "'sets the document source','setdocumentsource','fdocumentsource = source;'", "'returns the document source','getdocumentsource','return fdocumentsource;'", "'adds a matcher','addmatcher','ensurematchercapacity(); fmatchers[fmatcherscount++] = matcher;'", "'end document','enddocument','super.enddocument();'", "'object method','hashcode','return fid.hashcode() + fdepth;'", "'clears the vector','clear','flength = 0;'", "'gets the time zone','gettimezone','return calendar.gettimezone();'", "'overrides hashcode','hashcode','return numberformat.hashcode();'", "'resizes this object','setsize',''", "'returns <i>e<i><sup>x<sup>&nbsp;-1','expm1','return strictmath.expm1(x);'", "'-----------------------------------------------------------------------','getid','return id;'", "'@inheritdoc','enginelookupandresolvepublickey','return null;'", "'@inheritdoc','enginelookupresolvex509certificate','return null;'", "'','removenameditem','return internalremovenameditem(name, true);'", "'@see org','getasync','return false;'", "'@see org','getbusy','return fbusy;'", "'method enginegeturi @inheritdoc','enginegeturi','return implementedtransformuri;'", "'relative bulk <i>get<i> method','get','return get(dst, 0, dst.length);'", "'returns the button's text','gettext','return text;'", '\'programmatically perform a "click"\',\'doclick\',\'doclick(68);\'', "'returns the default icon','geticon','return defaulticon;'", "'gets the <code>borderpainted<code> property','isborderpainted','return paintborder;'", "'gets the <code>paintfocus<code> property','isfocuspainted','return paintfocus;'", "'gets the <code>contentareafilled<code> property','iscontentareafilled','return contentareafilled;'", "'gets the <code>rolloverenabled<code> property','isrolloverenabled','return rolloverenabled;'", "'update the displayedmnemonicindex property','updatedisplayedmnemonicindex','setdisplayedmnemonicindex(swingutilities.finddisplayedmnemonicindex(text, mnemonic));'", "'returns the label text','getlabel','return gettext();'", "'sets the label text','setlabel','settext(label);'", "'','actionperformed','fireactionperformed(event);'", "'return the error status','getstatus','return errorstatus;'", "'returns the formatting mask','getmask','return mask;'", "'thread policies','isorbcontrolledthreads','return getpolicyvalue(thread_policy_id.value) == threadpolicyvalue._orb_ctrl_model;'", "'lifespan','istransient','return getpolicyvalue(lifespan_policy_id.value) == lifespanpolicyvalue._transient;'", "'id uniqueness','isuniqueids','return getpolicyvalue(id_uniqueness_policy_id.value) == iduniquenesspolicyvalue._unique_id;'", "'id assignment','isuserassignedids','return getpolicyvalue(id_assignment_policy_id.value) == idassignmentpolicyvalue._user_id;'", "'servant rentention','retainservants','return getpolicyvalue(servant_retention_policy_id.value) == servantretentionpolicyvalue._retain;'", "'request processing','useactivemaponly','return getpolicyvalue(request_processing_policy_id.value) == requestprocessingpolicyvalue._use_active_object_map_only;'", "'implicit activation','isimplicitlyactivated','return getpolicyvalue(implicit_activation_policy_id.value) == implicitactivationpolicyvalue._implicit_activation;'", "'clears the name cache','clear','valuetoname.clear(); nametocount.clear();'", "'@return name of methodfield','getname','return name;'", "'remove an attribute','removeattribute','attribute_vec.remove(a);'", "'remove all attributes','removeattributes','attribute_vec.clear();'", "'@see predicatednodetest#getlastpos(xpathcontext)','getlastpos','return getlength();'", "'gets the array','getarray','return array;'", "'sets the array','setarray','array = a;'", "'{@inheritdoc} @throws indexoutofboundsexception {@inheritdoc}','get','return get(getarray(), index);'", "'not supported','remove','throw new unsupportedoperationexception();'", "'not supported','set','throw new unsupportedoperationexception();'", "'not supported','add','throw new unsupportedoperationexception();'", '\'{@inheritdoc}\',\'getpropertyprefix\',\'return "togglebutton.";\'', "'implementation methods','setschemaid','fattributes[attrindex].schemaid = schemaid;'", "'returns the selected file','getselectedfile','return selectedfile;'", "'returns the current directory','getcurrentdirectory','return currentdirectory;'", "'returns the accessory component','getaccessory','return accessory;'", "'@since 1','appendcodepoint','super.appendcodepoint(codepoint); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','delete','super.delete(start, end); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','deletecharat','super.deletecharat(index); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, obj); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, str); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, str); return this;'", "'@throws indexoutofboundsexception {@inheritdoc}','insert','super.insert(dstoffset, s); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, b); return this;'", "'@throws indexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, c); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, i); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, l); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, f); return this;'", "'@throws stringindexoutofboundsexception {@inheritdoc}','insert','super.insert(offset, d); return this;'", "'only used in servermanagerimpl','legacygettransientserverport','return legacygetserverport(type, false);'", "'@throws nosuchelementexception {@inheritdoc}','firstkey','return key(getfirstentry());'", "'@throws nosuchelementexception {@inheritdoc}','lastkey','return key(getlastentry());'", "'@since 1','firstentry','return exportentry(getfirstentry());'", "'@since 1','lastentry','return exportentry(getlastentry());'", "'@since 1','descendingkeyset','return descendingmap().navigablekeyset();'", "'returns the key','getkey','return key;'", "'finalizes the hashcode method','hashcode','return super.hashcode();'", "'writes a line separator','newline','write(lineseparator);'", "'@return return address type','gettype','return new returnaddresstype(physicalsuccessor());'", "'','setpattern','this.setpattern(newpattern, locale.getdefault());'", "'','setpattern','this.setpattern(newpattern, options, locale.getdefault());'", "'','getpattern','return this.regex;'", "'returns a option string','getoptions','return reutil.createoptionstring(this.options);'", "'retrieves the error index','getindex','return index;'", "'default implementation returns false','iscached','return false;'", "'default implementation returns false','iscachedmemory','return false;'", "'default implementation returns false','iscachedfile','return false;'", "'remove any initial value','cancelinitvalue','value = null;'", "'@since 1','descendingiterator','return new descendingiterator();'", "'@see #divideknuth(mutablebiginteger, mutablebiginteger, boolean)','divideknuth','return divideknuth(b, quotient, true);'", "'returns this identity's name','getname','return name;'", "'returns this identity's scope','getscope','return scope;'", '\'{@inheritdoc}\',\'installdefaults\',\'updatestyle(b); lookandfeel.installproperty(b, "rolloverenabled", boolean.true);\'', "'{@inheritdoc}','installlisteners','super.installlisteners(b); b.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(b); b.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'invalidates the current value','invalidate','invalidate();'", '\'[nil] @see <a href="http:www\',\'getnil\',\'return fnil;\'', '\'[notation] @see <a href="http:www\',\'getnotation\',\'return fnotation;\'', "'(non-javadoc) @see com','getactualnormalizedvalue','return this.factualvalue;'", "'(non-javadoc) @see com','getactualnormalizedvaluetype','return this.factualvaluetype;'", "'(non-javadoc) @see com','getitemvaluetypes','return this.fitemvaluetypes;'", "'gets the port number','getport','return holder.getport();'", "'gets the {@code inetaddress}','getaddress','return holder.getaddress();'", "'gets the {@code hostname}','gethostname','return holder.gethostname();'", "'creates a content driver','createcontentdriver','return new nscontentdriver();'", "'@return negation of instruction','negate','return new ifnonnull(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifnull(this);'", '\'{@inheritdoc}\',\'getpropertyprefix\',\'return "radiobutton.";\'', "'@return type of field','gettype','return type.getreturntype(getsignature());'", "'gets the <code>transferhandler<code> property','gettransferhandler','return transferhandler;'", "'just calls <code>paint(g)<code>','update','paint(g);'", "'{@inheritdoc}','seticonimage','super.seticonimage(image);'", "'sets the <code>contentpane<code> property','setcontentpane','getrootpane().setcontentpane(contentpane);'", "'sets the <code>layeredpane<code> property','setlayeredpane','getrootpane().setlayeredpane(layeredpane);'", "'sets the <code>glasspane<code> property','setglasspane','getrootpane().setglasspane(glasspane);'", "'{@inheritdoc} @since 1','getgraphics','jcomponent.getgraphicsinvoked(this); return super.getgraphics();'", "'call corresponding visitor method(s)','accept','v.visitstackinstruction(this); v.visitdup2_x1(this);'", "'populates buttons actions','loadactionmap','map.put(new actions(actions.press)); map.put(new actions(actions.release));'", "'create reference to `this'','createthis','return new aload(0);'", "'obtains the event's type','gettype','return type;'", "'$$kk: 04','getframeposition','return position;'", "'finalizes the hashcode method','hashcode','return super.hashcode();'", "'execute the function','execute','return xboolean.s_true;'", "'acquires the read lock','lock','sync.acquireshared(1);'", "'acquires the write lock','lock','sync.acquire(1);'", "'debug messages','debug','system.out.println(msg);'", "'@inheritdoc','enginegeturi','return implementedtransformuri;'", "'returns the loopback address','getloopbackaddress','return impl.loopbackaddress();'", "'returns the inapplicable conversion','getconversion','return c;'", "'required by parent cdroutputstream','setparent','this.parent = parent;'", "'clear the registry','reset','fnonsgrammar = null; fgrammarregistry.clear();'", "'creates the progressbar's ui','createui','return new motifprogressbarui();'", "'{@inheritdoc} @since 1','provideerrorfeedback','super.provideerrorfeedback(component);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(c); c.removepropertychangelistener(scrollbarswaplistener);'", "'overrides <code>jcomponent','updateui','setui((scrollbarui) uimanager.getui(this));'", "'returns the scrollbar's value','getvalue','return getmodel().getvalue();'", "'adds an adjustmentlistener','addadjustmentlistener','listenerlist.add(adjustmentlistener.class, l);'", "'removes an adjustmentevent listener','removeadjustmentlistener','listenerlist.remove(adjustmentlistener.class, l);'", "'return the root','first','return getdocumentroot(context);'", "'return the root','first','return getdocumentroot(context);'", "'return the root','first','return makenodehandle(_firstch(0));'", "'flushes this decoder','implflush','return coderresult.underflow;'", "'an accessor method','getidregistry_sub','return funparsedidentityconstraintregistrysub;'", "'@param state','setgeneratesyntheticannotations','fschemaparser.setfeature(generate_synthetic_annotations, state);'", "'write a single character','write','m_os.write(c);'", "'flush the stream','flush','m_os.flush();'", "'call corresponding visitor method(s)','accept','v.visitstackinstruction(this); v.visitdup_x2(this);'", "'return configuration parameters','getparameters','return null;'", "'get the association list','getcontents','return _contents;'", "'return the node type','getnodetype','return nodetype;'", "'return the local name','getlocalname','return localname;'", "'return the namespace','getnamespace','return namespace;'", "'@see com','popcontext','fnamespacesize = fcontext[fcurrentcontext--];'", "'@see java','hasnext','return (counter < size);'", "'@see java','hasmoreelements','return (counter < size);'", "'get the association list','getcontents','return _contents;'", "'throws an <code>org','operation','throw new org.omg.corba.no_implement();'", "'throws an <code>org','set_result','throw new org.omg.corba.no_implement();'", "'throws an <code>org','set_exception','throw new org.omg.corba.no_implement();'", "'call corresponding visitor method(s)','accept','v.visitexceptionthrower(this); v.visitstackconsumer(this); v.visitmonitorenter(this);'", "'class','getmonitoredobject','return workqueuemonitoredobject;'", "'optional','getscope','return fscope;'", "'{substitution group affiliation} optional','getsubstitutiongroupaffiliation','return fsubgroup;'", "'@see org','getnamespaceitem','return fnamespaceitem;'", "'set buffer size:','setbuffersize','fbuffersize = size;'", "'@see com','setbasesystemid',''", "'@see com','setlinenumber',''", "'@see com','setcolumnnumber',''", "'@see com','setexpandedsystemid',''", "'@see com','setliteralsystemid',''", "'@see com','setpublicid',''", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitstackproducer(this); v.visitstackinstruction(this); v.visitswap(this);'", "'accessor for factory','getfactory','return corereflectionfactory.make(this, constructorscope.make(this));'", "'{@inheritdoc}','getdeclaringclass','return clazz;'", "'{@inheritdoc}','getmodifiers','return modifiers;'", "'{@inheritdoc}','getparametertypes','return parametertypes.clone();'", "'{@inheritdoc} @since 1','getparametercount','return parametertypes.length;'", "'{@inheritdoc}','getexceptiontypes','return exceptiontypes.clone();'", "'{@inheritdoc} @since 1','isvarargs','return super.isvarargs();'", "'{@inheritdoc} @jls 13','issynthetic','return super.issynthetic();'", "'{@inheritdoc} @since 1','getdeclaredannotations','return super.getdeclaredannotations();'", "'{@inheritdoc} @since 1','getparameterannotations','return sharedgetparameterannotations(parametertypes, parameterannotations);'", "'{@inheritdoc} @since 1','getannotatedreturntype','return getannotatedreturntype0(getdeclaringclass());'", "'@see serializer#getoutputformat()','getoutputformat','return null;'", "'@see serializer#getoutputstream()','getoutputstream','return null;'", "'@see serializer#getwriter()','getwriter','return null;'", "'do nothing for sax','indent',''", "'@see domserializer#serialize(node)','serialize',''", "'@see serializer#setoutputformat(properties)','setoutputformat',''", "'@see serializer#setoutputstream(outputstream)','setoutputstream',''", "'@see serializer#setwriter(writer)','setwriter',''", "'@see org','attributedecl',''", "'@see org','elementdecl',''", "'@see org','externalentitydecl',''", "'@see org','internalentitydecl',''", "'@see org','ignorablewhitespace','m_saxhandler.ignorablewhitespace(arg0, arg1, arg2);'", "'@see org','setdocumentlocator','super.setdocumentlocator(arg0); m_saxhandler.setdocumentlocator(arg0);'", "'@see org','skippedentity','m_saxhandler.skippedentity(arg0);'", "'@see org','startprefixmapping','startprefixmapping(prefix, uri, true);'", "'@see extendedcontenthandler#endelement(string)','endelement','endelement(null, null, elemname);'", "'set the bootstrap resolver','setbootstrapresolver','bresolver = resolver;'", "'get the bootstrap resolver','getbootstrapresolver','return bresolver;'", "'set the relativecatalogs setting','setrelativecatalogs','relativecatalogs = new boolean(relative);'", "'get the relativecatalogs setting','relativecatalogs','return getrelativecatalogs();'", "'@return type','gettype','return type.int;'", "'always returns {@code integer','remainingcapacity','return integer.max_value;'", "'@see expressionowner#getexpression()','getexpression','return m_patterns[m_index];'", "'returns the incompatible flag','getflags','return f;'", "'returns the incompatible conversion','getconversion','return c;'", "'non-public','getnamestring','return getnamestring(target, (methodtype) null);'", "'non-public','newinternalerror','return new internalerror(message);'", "'non-public','newinternalerror','return new internalerror(message, cause);'", "'non-public','newinternalerror','return new internalerror(cause);'", "'non-public','newillegalstateexception','return new illegalstateexception(message);'", "'non-public','newillegalstateexception','return new illegalstateexception(message(message, obj));'", "'non-public','newillegalargumentexception','return new illegalargumentexception(message);'", "'non-public','newillegalargumentexception','return new illegalargumentexception(message(message, obj));'", "'remove all local variables','removelocalvariables','variable_vec.clear();'", "'remove a line number','removelinenumber','line_number_vec.remove(l);'", "'remove all line numbers','removelinenumbers','line_number_vec.clear();'", "'remove an exception handler','removeexceptionhandler','exception_vec.remove(c);'", "'remove all line numbers','removeexceptionhandlers','exception_vec.clear();'", "'remove an exception','removeexception','throws_vec.remove(c);'", "'remove all exceptions','removeexceptions','throws_vec.clear();'", "'remove a code attribute','removecodeattribute','code_attrs_vec.remove(a);'", "'remove all code attributes','removecodeattributes','code_attrs_vec.clear();'", "'returns the node index','getnodeindex','return fnodeindex;'", "'@return data, i','getbytes','return bytes;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@return double object','getconstantvalue','return new double(bytes);'", "'gets an <code>snmpvarbind<code> object','getvarbindat','return elementat(pos);'", "'clones the <code>snmpvarbindlist<code>','clone','return clonewithvalue();'", "'writes a byte','write','out.write(b); cksum.update(b);'", "'{@inheritdoc}','installui','installdefaults((jseparator) c); installlisteners((jseparator) c);'", "'{@inheritdoc}','uninstallui','uninstalllisteners((jseparator) c); uninstalldefaults((jseparator) c);'", "'installs default setting','installdefaults','updatestyle(c);'", "'installs listeners','installlisteners','c.addpropertychangelistener(this);'", "'uninstalls listeners','uninstalllisteners','c.removepropertychangelistener(this);'", "'{@inheritdoc}','getminimumsize','return getpreferredsize(c);'", "'{@inheritdoc}','getmaximumsize','return new dimension(short.max_value, short.max_value);'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'returns the uri','geturi','return uri;'", "'@return return address type','gettype','return returnaddresstype.no_target;'", "'call corresponding visitor method(s)','accept','v.visitret(this);'", "'compares two strings lexicographically','compareto','return m_str.compareto(anotherstring.tostring());'", "'hook for subclasses','skipentryvariable','return false;'", "'get the association list','getcontents','return _contents;'", "'retrieves role name','getrolename','return name;'", "'retrieves role value','getrolevalue','return objectnamelist;'", "'-------------------------------------------------------------------','getleft','return fleftchild;'", "'-----------------------------------------------------------------------','issupportedby','return temporal.issupported(this);'", "'-----------------------------------------------------------------------','tostring','return name;'", "'required for abstractset','iterator','return nodetodata.keyset().iterator();'", "'required for abstractset','size','return nodetodata.keyset().size();'", "'opens a pipe','open','return selectorprovider.provider().openpipe();'", "'accessor to buflen','getlength','return buflen;'", "'mutator to buflen','setlength','buflen = thelength; bytebuffer.limit(buflen);'", "'runs the garbage collector','gc','runtime.getruntime().gc();'", "'required by the superclass','getfieldsnocopy','return currentclassdesc.getfieldsnocopy();'", "'implements javax','getsystemid','return _systemid;'", "'implements javax','setsystemid','_systemid = id;'", "'implements javax','gettransformer','return _transformer;'", "'implements org','characters','_handler.characters(ch, start, length);'", "'implements org','startelement','_handler.startelement(uri, localname, qname, attributes);'", "'implements org','endelement','_handler.endelement(namespaceuri, localname, qname);'", "'implements org','processinginstruction','_handler.processinginstruction(target, data);'", "'implements org','ignorablewhitespace','_handler.ignorablewhitespace(ch, start, length);'", "'implements org','skippedentity','_handler.skippedentity(name);'", "'implements org','startprefixmapping','_handler.startprefixmapping(prefix, uri);'", "'implements org','endprefixmapping','_handler.endprefixmapping(prefix);'", "'returns the node index','getnodeindex','return fnodeindex;'", "'@inheritdoc','getbasenamespace','return constants.signaturespecns;'", "'call corresponding visitor method(s)','accept','v.visitstackproducer(this); v.visitpushinstruction(this); v.visitstackinstruction(this); v.visitdup(this);'", "'@throws nosuchelementexception {@inheritdoc}','getfirst','return screennullresult(peekfirst());'", "'@throws nosuchelementexception {@inheritdoc}','getlast','return screennullresult(peeklast());'", "'@throws nosuchelementexception {@inheritdoc}','removefirst','return screennullresult(pollfirst());'", "'@throws nosuchelementexception {@inheritdoc}','removelast','return screennullresult(polllast());'", "'@throws nosuchelementexception {@inheritdoc}','remove','return removefirst();'", "'@throws nosuchelementexception {@inheritdoc}','pop','return removefirst();'", "'@throws nosuchelementexception {@inheritdoc}','element','return getfirst();'", "'@throws nullpointerexception {@inheritdoc}','push','addfirst(e);'", "'fetch the value','value','assertnotpromise(); return (t) value;'", "'adds an <code>itemlistener<code>','additemlistener','listenerlist.add(itemlistener.class, alistener);'", "'removes an <code>itemlistener<code>','removeitemlistener','listenerlist.remove(itemlistener.class, alistener);'", "'adds an <code>actionlistener<code>','addactionlistener','listenerlist.add(actionlistener.class, l);'", "'removes a <code>popupmenulistener<code>','removepopupmenulistener','listenerlist.remove(popupmenulistener.class, l);'", "'returns the event type','gettype','return type;'", "'{@inheritdoc} @since 1','getbounds','return getbounds2d().getbounds();'", "'{@inheritdoc} @since 1','contains','return contains(p.getx(), p.gety());'", "'see setmask()','getmask','return (_mask);'", "'packing and unpacking ctl','runstateof','return c & ~capacity;'", "'visit a locationpath','visitlocationpath','return true;'", "'visit a unionpath','visitunionpath','return true;'", "'visit a binary operation','visitbinaryoperation','return true;'", "'visit a unary operation','visitunaryoperation','return true;'", "'visit a variable reference','visitvariableref','return true;'", "'visit a function','visitfunction','return true;'", "'visit a match pattern','visitmatchpattern','return true;'", "'visit a union pattern','visitunionpattern','return true;'", "'visit a string literal','visitstringliteral','return true;'", "'visit a number literal','visitnumberliteral','return true;'", "'returns the prime','getprime','return this.prime;'", "'returns the prime's exponent','getexponent','return this.primeexponent;'", "'returns the prime's crtcoefficient','getcrtcoefficient','return this.crtcoefficient;'", "'get the input nodeset','getinputnodeset','return inputnodeset;'", "'@return real octet stream','getoctetstreamreal','return inputoctetstreamproxy;'", "'returns mimetype @return mimetype','getmimetype','return mimetype;'", "'sets mimetype @param mimetype','setmimetype','this.mimetype = mimetype;'", "'return sourceuri @return sourceuri','getsourceuri','return sourceuri;'", "'sets sourceuri @param sourceuri','setsourceuri','this.sourceuri = sourceuri;'", "'@return returns the excludecomments','isexcludecomments','return excludecomments;'", "'@param os','setoutputstream','outputstream = os;'", "'@return the node filters','getnodefilters','return nodefilters;'", "'@param b','setnodeset','isnodeset = b;'", "'see javax','getmaximumstreamformatversion','return max_stream_format_version;'", "'sets the current font','setfont','super.setfont(f); columnwidth = 0;'", "'same interface','analyzer','return new mbeananalyzer<m>(mbeantype, introspector);'", "'-----------------------------------------------------------------------','issupportedby','return temporal.issupported(this);'", "'-----------------------------------------------------------------------','between','return temporal1inclusive.until(temporal2exclusive, this);'", "'-----------------------------------------------------------------------','tostring','return name;'", "'returns the node index','getnodeindex','return fnodeindex;'", "'a simple type definition','gettypedefinition','return ftype;'", "'optional','getscope','return fscope;'", "'@see org','getnamespaceitem','return fnamespaceitem;'", "'receive the datagram packet','receive','receive0(p);'", "'join the multicast group','join','join(inetaddr, null);'", "'leave the multicast group','leave','leave(inetaddr, null);'", "'get the association list','getcontents','return _contents;'", "'@return data bytes','getbytes','return bytes;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'{@inheritdoc}','getid','return id;'", "'keylistener','keypressed',''", "'{@inheritdoc}','uninstalllisteners','table.removepropertychangelistener(this); super.uninstalllisteners();'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'implements javax','getselecteditem','return selectedobject;'", "'implements javax','getsize','return objects.size();'", "'writes gzip member header','writeheader','0 });'", "'@return negation of instruction','negate','return new if_icmplt(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_icmpge(this);'", "'@see org','getnamespaceitem','return null;'", "'acquires the lock','lock','sync.lock();'", "'returns the defaults','getdefaults','maybeinitialize(); return getlafstate().multiuidefaults;'", "'{@inheritdoc} @since 1','configurepropertiesfromaction','super.configurepropertiesfromaction(a); configureacceleratorfromaction(a);'", "'returns the <code>java','getcomponent','return this;'", "'-----------------------------------------------------------------------','plusyears','return with(isodate.plusyears(years));'", "'for backward compatibility only','getmaxdecent','return getmaxdescent();'", "'@see expressionowner#getexpression()','getexpression','return m_arg2;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(function3args.this); m_arg2 = exp;'", "'@throws java','first','return m.firstkey();'", "'@throws java','last','return m.lastkey();'", "'@inheritdoc','getiterator','return new keystoreiterator(this.keystore);'", "'cancels editing','cancelcellediting','fireeditingcanceled();'", "'-----------------------------------------------------------------------','plusyears','return with(isodate.plusyears(years));'", "'overrides <code>jcomponent','addnotify','super.addnotify(); keyboardmanager.getcurrentmanager().registermenubar(this);'", "'overrides <code>jcomponent','removenotify','super.removenotify(); keyboardmanager.getcurrentmanager().unregistermenubar(this);'", "'get the nth element','elementat','return m_map[i];'", "'','createui','return new motiffilechooserui((jfilechooser) c);'", "'','createfiltercomboboxmodel','return new filtercomboboxmodel();'", "'','createfiltercomboboxrenderer','return new filtercomboboxrenderer();'", "'returns the abstracttreeui','getnode','return (treestatenode) visiblenodes.elementat(row);'", "'expands the receiver','expand','expand(true);'", "'collapses the receiver','collapse','collapse(true);'", "'<p>the emitted notification','getnotification','return notif;'", "'@return negation of instruction','negate','return new if_icmpne(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_icmpeq(this);'", "'{@link com','accept',''", "'returns the initial value','getinitialvalue','return initialvalue;'", "'returns the message type','getmessagetype','return messagetype;'", "'@see expressionowner#getexpression()','getexpression','return m_exprs[m_index];'", "'@return a substring','substring','return substring(beginindex, len);'", "'(non-javadoc) @see com','getactualnormalizedvalue','return this.factualvalue;'", "'(non-javadoc) @see com','getactualnormalizedvaluetype','return this.factualvaluetype;'", "'(non-javadoc) @see com','getitemvaluetypes','return this.fitemvaluetypes;'", "'@inheritdoc','enginelookupresolvex509certificate','return null;'", "'@inheritdoc','enginelookupandresolvesecretkey','return null;'", "'method enginegeturi @inheritdoc','enginegeturi','return transformbase64decode.implementedtransformuri;'", "'{@inheritdoc} @since 1','contains','return contains(p.getx(), p.gety());'", "'access the wrapped dtmiterator','getdtmiterator','return dtm_iter;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitistore(this);'", "'reads a single character','read','return sd.read();'", "'do nada','typecheck','return type.void;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitdload(this);'", "'returns a {@link java','touri','return new uri(tostring());'", "'returns a {@link java','openconnection','return handler.openconnection(this);'", "'@see com','callvisitors','visitor.visitnumberliteral(owner, this);'", "'implements javax','getselectedindex','return index;'", "'implements javax','clearselection','setselectedindex(-1);'", "'get the association list','getcontents','return _contents;'", "'@see org','getnamespaceitem','return fnamespaceitem;'", "'returns the current <code>abstractformatterfactory<code>','getformatterfactory','return factory;'", "'returns the current index','getindex','return begin + pos;'", "'from mbeanserver','getdomains','return mbsinterceptor.getdomains();'", "'<p>return the {@link java','getclassloaderfor','return mbsinterceptor.getclassloaderfor(cloneobjectname(mbeanname));'", "'','actionperformed','optionpane.setinputvalue(((jtextfield) e.getsource()).gettext());'", "'','mouseclicked',''", "'standard function count(node-set)','countf','return (iterator.getlast());'", "'xslt standard function string()','stringf','return dom.getstringvaluex(node);'", "'xslt standard function number()','numberf','return stringtoreal(dom.getstringvaluex(node));'", "'xslt standard function normalize-space()','normalize_spacef','return normalize_spacef(dom.getstringvaluex(node));'", "'xslt standard function namespace-uri(node-set)','namespace_urif','return namespace_urif(iter.next(), dom);'", "'{@inheritdoc}','addnotify','super.addnotify(); enableevents(awtevent.key_event_mask);'", "'{@inheritdoc}','removenotify','super.removenotify();'", "'returns the service provider','getserviceprovider','return serviceprovider;'", "'','createincrementalsaxsource','return new incrementalsaxsource_filter(co, controllercoroutineid);'", "'writes a byte','write','bout.write(val);'", "'flushes the stream','flush','bout.flush();'", "'closes the stream','close','flush(); clear(); bout.close();'", "'writes a boolean','writeboolean','bout.writeboolean(val);'", "'clears internal data structures','clear','subs.clear(); handles.clear();'", '\'returns the node name\',\'getnodename\',\'return "#comment";\'', "'@return negation of instruction','negate','return new ifgt(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifle(this);'", "'gets era strings','geteras','return arrays.copyof(eras, eras.length);'", "'gets month strings','getmonths','return arrays.copyof(months, months.length);'", "'gets short month strings','getshortmonths','return arrays.copyof(shortmonths, shortmonths.length);'", "'gets weekday strings','getweekdays','return arrays.copyof(weekdays, weekdays.length);'", "'gets short weekday strings','getshortweekdays','return arrays.copyof(shortweekdays, shortweekdays.length);'", "'gets ampm strings','getampmstrings','return arrays.copyof(ampms, ampms.length);'", "'gets time zone strings','getzonestrings','return getzonestringsimpl(true);'", "'returns the principal component','principal','return who;'", "'get the prompt','getprompt','return prompt;'", "'get the defaultchoice','getdefaultchoice','return defaultchoice;'", "'get the selected choices','getselectedindexes','return selections;'", "'notify a waiting thread','signal','notify();'", "'notify all waiting threads','broadcast','notifyall();'", "'writes <code>b','write','write(b, 0, b.length);'", "'errorlistener','setwarningerror','_iswarningerror = flag;'", "'overrides <code>filterinputstream','close','in.close(); monitor.close();'", "'optimized dispatch of characters','dispatachchars','m_dtm.dispatchcharactersevents(node, m_contenthandler, false);'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_signature_dsa;'", "'method enginegetjcealgorithmstring @inheritdoc','enginegetjcealgorithmstring','return this.signaturealgorithm.getalgorithm();'", "'method enginegetjceprovidername @inheritdoc','enginegetjceprovidername','return this.signaturealgorithm.getprovider().getname();'", "'throws clonenotsupportedexception','clone','throw new clonenotsupportedexception();'", "'return the output method','getoutputmethod','return _outputmethod;'", "'{@inheritdoc}','installdefaults','super.installdefaults(); updatestyle(getcomponent()); getcomponent().addfocuslistener(handler);'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'paints the specified component','paint','super.paint(g, getcomponent());'", "'','addlayoutcomponent',''", "'not implemented','getid','throw wrapper.genericnoimpl();'", "'protected','getcomponentindex','return cycle.indexof(acomponent);'", "'sets the element type','settype','this.type = type;'", "'gets the element type','gettype','return type;'", "'sets the direction','setdirection','this.direction = direction;'", "'gets the direction','getdirection','return direction;'", "'gets the element attributes','getattributes','return attr;'", "'gets the starting offset','getoffset','return offs;'", "'gets the length','getlength','return len;'", "'gets the root element','getrootelement','return root;'", "'removes content','remove','beginedits(offset, length); removeupdate(); endedits(de);'", "'changes content','change','beginedits(offset, length); changeupdate(); endedits(de);'", "'redoes a change','redo','super.redo(); element.setresolveparent(newstyle);'", "'undoes a change','undo','super.undo(); element.setresolveparent(oldstyle);'", "'@inheritdoc','getbasenamespace','return constants.signaturespec11ns;'", "'call corresponding visitor method(s)','accept','v.visitunconditionalbranch(this); v.visitexceptionthrower(this); v.visitathrow(this);'", "'returns the modulus','getmodulus','return this.modulus;'", "'returns the public exponent','getpublicexponent','return this.publicexponent;'", "'calls {@code paint(g)}','update','paint(g);'", "'{@inheritdoc} @since 1','getgraphics','jcomponent.getgraphicsinvoked(this); return super.getgraphics();'", "'@see expressionowner#getexpression()','getexpression','return m_arg1;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(function2args.this); m_arg1 = exp;'", "'@deprecated','extract_principal','checkextractbadoperation(tckind._tk_principal); return (principal) object;'", "'generates a key pair','genkeypair','return generatekeypair();'", "'generates a key pair','generatekeypair','return null;'", "'extracts the <code>java','extract_fixed','throw new org.omg.corba.no_implement();'", '\'throws an <a href="package-summary\',\'insert_fixed\',\'throw new org.omg.corba.no_implement();\'', '\'throws an <a href="package-summary\',\'insert_fixed\',\'throw new org.omg.corba.no_implement();\'', "'(non-javadoc) @see com','getactualnormalizedvalue','return this.factualvalue;'", "'(non-javadoc) @see com','getactualnormalizedvaluetype','return this.factualvaluetype;'", "'(non-javadoc) @see com','getitemvaluetypes','return this.fitemvaluetypes;'", "'@inheritdoc','enginegeturi','return canonicalizer.algo_id_c14n_omit_comments;'", "'@inheritdoc','enginegetincludecomments','return false;'", "'access the wrapped dtmiterator','getdtmaxisiterator','return m_iter;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitdstore(this);'", "'no-op','marshal','return s;'", "'class','getmonitoredobject','return threadpoolmonitoredobject;'", "'a comment','comment',''", "'a processing instruction','processinginstruction',''", "'character content','characters',''", "'ignorable whitespace','ignorablewhitespace','allwhitespace = true;'", "'sets the document source','setdocumentsource',''", "'returns the document source','getdocumentsource','return null;'", "'implements <code>snmppdurequesttype<code> interface','seterrorindex','errorindex = i;'", "'implements <code>snmppdurequesttype<code> interface','seterrorstatus','errorstatus = i;'", "'implements <code>snmppdurequesttype<code> interface','geterrorindex','return errorindex;'", "'implements <code>snmppdurequesttype<code> interface','geterrorstatus','return errorstatus;'", "'sets the selected state','setselection','selected = state;'", "'gets the <code>lightweightpopupenabled<code> property','islightweightpopupenabled','return lightweightpopup;'", "'adds a <code>popupmenu<code> listener','addpopupmenulistener','listenerlist.add(popupmenulistener.class, l);'", "'removes a <code>popupmenu<code> listener','removepopupmenulistener','listenerlist.remove(popupmenulistener.class, l);'", "'package private','alwaysontop','return true;'", "'returns this <code>jpopupmenu<code> component','getcomponent','return this;'", "'{@inheritdoc}','finalize',''", "'method getbasenamespace @inheritdoc','getbasenamespace','return inclusivenamespaces.exclusivecanonicalizationnamespace;'", "'method getbaselocalname @inheritdoc','getbaselocalname','return inclusivenamespaces._tag_ec_inclusivenamespaces;'", "'p{gc=control}','is','return character.gettype(ch) == character.control;'", "'p{gc=decimal_number}','is','return character.isdigit(ch);'", "'p{digit}','is','return alphabetic.is(ch) || digit.is(ch);'", "'p{gc=paragraph_separator}]','is','ch == 0x9;'", "'','focusgained','scrollbar.repaint();'", "'@param sf','setstreamfilter','this.fstreamfilter = sf;'", "'@throws xmlstreamexception','close','fstreamreader.close();'", "'@return','getattributecount','return fstreamreader.getattributecount();'", "'@param index @return','getattributename','return fstreamreader.getattributename(index);'", "'@param index @return','getattributenamespace','return fstreamreader.getattributenamespace(index);'", "'@param index @return','getattributeprefix','return fstreamreader.getattributeprefix(index);'", "'@param index @return','getattributetype','return fstreamreader.getattributetype(index);'", "'@param index @return','getattributevalue','return fstreamreader.getattributevalue(index);'", "'@return','getcharacterencodingscheme','return fstreamreader.getcharacterencodingscheme();'", "'@throws xmlstreamexception @return','getelementtext','return fstreamreader.getelementtext();'", "'@return','getencoding','return fstreamreader.getencoding();'", "'@return','geteventtype','return fstreamreader.geteventtype();'", "'@return','getlocalname','return fstreamreader.getlocalname();'", "'@return','getlocation','return fstreamreader.getlocation();'", "'@return','getname','return fstreamreader.getname();'", "'@return','getnamespacecontext','return fstreamreader.getnamespacecontext();'", "'@return','getnamespacecount','return fstreamreader.getnamespacecount();'", "'@param index @return','getnamespaceprefix','return fstreamreader.getnamespaceprefix(index);'", "'@return','getnamespaceuri','return fstreamreader.getnamespaceuri();'", "'@param index @return','getnamespaceuri','return fstreamreader.getnamespaceuri(index);'", "'@param prefix @return','getnamespaceuri','return fstreamreader.getnamespaceuri(prefix);'", "'@return','getpidata','return fstreamreader.getpidata();'", "'@return','getpitarget','return fstreamreader.getpitarget();'", "'@return','getprefix','return fstreamreader.getprefix();'", "'@return','gettext','return fstreamreader.gettext();'", "'@return','gettextcharacters','return fstreamreader.gettextcharacters();'", "'@return','gettextlength','return fstreamreader.gettextlength();'", "'@return','gettextstart','return fstreamreader.gettextstart();'", "'@return','getversion','return fstreamreader.getversion();'", "'@return','hasname','return fstreamreader.hasname();'", "'@return','hastext','return fstreamreader.hastext();'", "'@return @param index','isattributespecified','return fstreamreader.isattributespecified(index);'", "'@return','ischaracters','return fstreamreader.ischaracters();'", "'@return','isendelement','return fstreamreader.isendelement();'", "'@return','isstandalone','return fstreamreader.isstandalone();'", "'@return','isstartelement','return fstreamreader.isstartelement();'", "'@return','iswhitespace','return fstreamreader.iswhitespace();'", "'@return','standaloneset','return fstreamreader.standaloneset();'", "'@param index @return','getattributelocalname','return fstreamreader.getattributelocalname(index);'", '\'returns the node name\',\'getnodename\',\'return "#text";\'', "'@return the type','gettype','return this.constructionelement.getattributens(null, constants._att_type);'", "'@inheritdoc','getbaselocalname','return constants._tag_retrievalmethod;'", "'{@inheritdoc} @since 1','setfont','super.setfont(font); updatelabelsizes();'", "'returns the top-level stylesheet','getstylesheet','return _stylesheet;'", "'turn debugging messages onoff','setdebug','_debug = debug;'", "'override throwable','getcause','return _exception;'", "'posts a 1','postevent','suntoolkit.flushpendingevents(appcontext); posteventprivate(theevent);'", "'get the association list','getcontents','return _contents;'", "'returns the exception type','gettype','return ftype;'", "'returns an <code>encrypteddata<code> interface','encryptdata','return encryptdata(context, element, false);'", "'returns an <code>encryptedkey<code> interface','loadencryptedkey','return loadencryptedkey(element.getownerdocument(), element);'", "'@return a new encryptionproperties','newencryptionproperties','return new encryptionpropertiesimpl();'", "'@return a new encryptionproperty','newencryptionproperty','return new encryptionpropertyimpl();'", "'@param type referencelist','newreferencelist','return new referencelistimpl(type);'", "'@return a new transforms','newtransforms','return new transformsimpl();'", "'@inheritdoc','getkanonce','return kanonce;'", "'@inheritdoc','setkanonce','kanonce = kanonce;'", "'@inheritdoc','getagreementmethodinformation','return agreementmethodinformation.iterator();'", "'@inheritdoc','addagreementmethodinformation','agreementmethodinformation.add(info);'", "'@inheritdoc','revoveagreementmethodinformation','agreementmethodinformation.remove(info);'", "'@inheritdoc','getoriginatorkeyinfo','return originatorkeyinfo;'", "'@inheritdoc','setoriginatorkeyinfo','originatorkeyinfo = keyinfo;'", "'@inheritdoc','getrecipientkeyinfo','return recipientkeyinfo;'", "'@inheritdoc','setrecipientkeyinfo','recipientkeyinfo = keyinfo;'", "'@inheritdoc','getalgorithm','return algorithmuri;'", "'@inheritdoc','getciphervalue','return ciphervalue;'", "'@inheritdoc','getcipherreference','return cipherreference;'", "'@inheritdoc','getdatatype','return ciphertype;'", "'@inheritdoc','geturi','return referenceuri;'", "'@inheritdoc','geturiasattr','return referencenode;'", "'@inheritdoc','gettransforms','return referencetransforms;'", "'@inheritdoc','settransforms','referencetransforms = transforms;'", "'@inheritdoc','getvalue','return ciphervalue;'", "'@inheritdoc','setvalue','ciphervalue = value;'", "'@inheritdoc','getrecipient','return keyrecipient;'", "'@inheritdoc','setrecipient','keyrecipient = recipient;'", "'@inheritdoc','getreferencelist','return referencelist;'", "'@inheritdoc','setreferencelist','referencelist = list;'", "'@inheritdoc','getcarriedname','return carriedname;'", "'@inheritdoc','setcarriedname','carriedname = name;'", "'@return the id','getid','return id;'", "'@param id','setid','this.id = id;'", "'@return the type','gettype','return type;'", "'@return the mimetype','getmimetype','return mimetype;'", "'@param type','setmimetype','mimetype = type;'", "'@return the encoding','getencoding','return encoding;'", "'@return the encryptionmethod','getencryptionmethod','return encryptionmethod;'", "'@param method','setencryptionmethod','encryptionmethod = method;'", "'@return the keyinfo','getkeyinfo','return keyinfo;'", "'@param info','setkeyinfo','keyinfo = info;'", "'@return the cipherdata','getcipherdata','return cipherdata;'", "'@return the encryptionproperties','getencryptionproperties','return encryptionproperties;'", "'@param properties','setencryptionproperties','encryptionproperties = properties;'", "'@inheritdoc','getalgorithm','return algorithm;'", "'@inheritdoc','getkeysize','return keysize;'", "'@inheritdoc','setkeysize','keysize = size;'", "'@inheritdoc','getoaepparams','return oaepparams;'", "'@inheritdoc','setoaepparams','oaepparams = params;'", "'@inheritdoc','setdigestalgorithm','this.digestalgorithm = digestalgorithm;'", "'@inheritdoc','getdigestalgorithm','return digestalgorithm;'", "'@inheritdoc','setmgfalgorithm','this.mgfalgorithm = mgfalgorithm;'", "'@inheritdoc','getmgfalgorithm','return mgfalgorithm;'", "'@inheritdoc','getencryptionmethodinformation','return encryptionmethodinformation.iterator();'", "'@inheritdoc','addencryptionmethodinformation','encryptionmethodinformation.add(info);'", "'@inheritdoc','removeencryptionmethodinformation','encryptionmethodinformation.remove(info);'", "'@inheritdoc','getid','return id;'", "'@inheritdoc','setid','this.id = id;'", "'@inheritdoc','getencryptionproperties','return encryptionproperties.iterator();'", "'@inheritdoc','addencryptionproperty','encryptionproperties.add(property);'", "'@inheritdoc','removeencryptionproperty','encryptionproperties.remove(property);'", "'@inheritdoc','gettarget','return target;'", "'@inheritdoc','getid','return id;'", "'@inheritdoc','setid','this.id = id;'", "'@inheritdoc','getattribute','return attributemap.get(attribute);'", "'@inheritdoc','setattribute','attributemap.put(attribute, value);'", "'@inheritdoc','getencryptioninformation','return encryptioninformation.iterator();'", "'@inheritdoc','addencryptioninformation','encryptioninformation.add(info);'", "'@inheritdoc','removeencryptioninformation','encryptioninformation.remove(info);'", "'@inheritdoc','getdstransforms','return this;'", "'@inheritdoc','getbasenamespace','return encryptionconstants.encryptionspecns;'", "'@inheritdoc','size','return references.size();'", "'@inheritdoc','isempty','return references.isempty();'", "'@inheritdoc','getreferences','return references.iterator();'", "'@inheritdoc','newdatareference','return new datareference(uri);'", "'@inheritdoc','newkeyreference','return new keyreference(uri);'", "'@inheritdoc','geturi','return uri;'", "'@inheritdoc','getelementretrievalinformation','return referenceinformation.iterator();'", "'@inheritdoc','seturi','this.uri = uri;'", "'@inheritdoc','removeelementretrievalinformation','referenceinformation.remove(node);'", "'@inheritdoc','addelementretrievalinformation','referenceinformation.add(node);'", "'@inheritdoc','gettype','return encryptionconstants._tag_datareference;'", "'@inheritdoc','gettype','return encryptionconstants._tag_keyreference;'", "'-----------------------------------------------------------------------','resolvedate','return (japanesedate) super.resolvedate(fieldvalues, resolverstyle);'", "'@return increment factor','getincrement','return c;'", "'set increment factor','setincrement','this.c = c; setwide();'", "'@return int type','gettype','return type.int;'", "'call corresponding visitor method(s)','accept','v.visitlocalvariableinstruction(this); v.visitiinc(this);'", "'method addproperties @param properties','addproperties','resolverspi.engineaddproperies(properties);'", "'method enginegeturi @inheritdoc','enginegeturi','return implementedtransformuri;'", "'this will never happen','fragmentationoccured',''", "'gets the resolving parent','getresolveparent','return (attributeset) table.get(styleconstants.resolveattribute);'", "'sets the resolving parent','setresolveparent','addattribute(styleconstants.resolveattribute, parent);'", "'@inheritdoc','getbasenamespace','return constants.signaturespecns;'", "'@inheritdoc','getbaselocalname','return constants._tag_digestmethod;'", "'execute the function','execute','return new xnumber(getarg0asstring(xctxt).length());'", "'','createui','return new basicinternalframeui((jinternalframe) b);'", "'internalframelistener','internalframeclosed','frame.removeinternalframelistener(gethandler());'", "'layoutmanager','addlayoutcomponent',''", "'mouseinputlistener','mousepressed',''", "'return the initial namingcontext','initialnamingcontext','return theinitialnamingcontext;'", "'@see org','getnodename','return dtm.getnodename(node);'", "'@see org','getlocalname','return dtm.getlocalname(node);'", "'@see org','getnamespaceuri','return dtm.getnamespaceuri(node);'", "'@throws domexception @see org','getnodevalue','return dtm.getnodevalue(node);'", "'@see org','getnodetype','return (short) dtm.getnodetype(node);'", "'@see org','getchildnodes','return new dtmchilditernodelist(dtm, node);'", "'@see org','getattributes','return new dtmnamednodemap(dtm, node);'", "'@see org','getownerdocument','return (document) (dtm.getnode(dtm.getownerdocument(node)));'", "'@see org','haschildnodes','return (dtm.null != dtm.getfirstchild(node));'", "'@param deep @see org','clonenode','throw new dtmdomexception(domexception.not_supported_err);'", "'@see org','getdoctype','return null;'", "'@see org','getimplementation','return implementation;'", "'@see org','createdocumentfragment','throw new dtmdomexception(domexception.not_supported_err);'", "'@param data @see org','createtextnode','throw new dtmdomexception(domexception.not_supported_err);'", "'@param data @see org','createcomment','throw new dtmdomexception(domexception.not_supported_err);'", "'@param elementid @see org','getelementbyid','return (element) dtm.getnode(dtm.getelementbyid(elementid));'", "'@throws domexception @see org','getdata','return dtm.getnodevalue(node);'", "'@see org','getlength','return dtm.getnodevalue(node).length();'", "'@see org','gettagname','return dtm.getnodename(node);'", "'@see org','normalize','throw new dtmdomexception(domexception.not_supported_err);'", "'@see org','getname','return dtm.getnodename(node);'", "'@see org','getspecified','return true;'", "'@see org','getvalue','return dtm.getnodevalue(node);'", "'@param value @see org','setvalue','throw new dtmdomexception(domexception.not_supported_err);'", "'dom level 3','setdocumenturi','fdocumenturi = documenturi;'", "'dom level 3','replacewholetext','return null;'", "'method getschematypeinfo','getschematypeinfo','return null;'", "'sets the error handler','seterrorhandler','ferrorreporter.setproperty(error_handler, errorhandler);'", "'(non-javadoc) @see com','getpropertydefault','return null;'", "'(non-javadoc) @see com','getconfig','return this;'", "'returns the transparency','gettransparency','return transparency;'", "'read constant pool entries','readconstantpool','constant_pool = new constantpool(file);'", "'writes a string','write','write(s, 0, s.length());'", "'prints a character','print','write(c);'", "'prints an integer','print','write(string.valueof(i));'", "'prints a long integer','print','write(string.valueof(l));'", "'prints a floating-point number','print','write(string.valueof(f));'", "'prints an object','print','write(string.valueof(obj));'", "'gets the year field','getyear','return year;'", "'method addkeyname @param keynamestring','addkeyname','this.add(new keyname(this.doc, keynamestring));'", "'method add @param keyname','add','this.constructionelement.appendchild(keyname.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addkeyvalue @param pk','addkeyvalue','this.add(new keyvalue(this.doc, pk));'", "'method addkeyvalue @param unknownkeyvalueelement','addkeyvalue','this.add(new keyvalue(this.doc, unknownkeyvalueelement));'", "'method add @param dsakeyvalue','add','this.add(new keyvalue(this.doc, dsakeyvalue));'", "'method add @param rsakeyvalue','add','this.add(new keyvalue(this.doc, rsakeyvalue));'", "'method add @param pk','add','this.add(new keyvalue(this.doc, pk));'", "'method add @param keyvalue','add','this.constructionelement.appendchild(keyvalue.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addmgmtdata @param mgmtdata','addmgmtdata','this.add(new mgmtdata(this.doc, mgmtdata));'", "'method add @param mgmtdata','add','this.constructionelement.appendchild(mgmtdata.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addpgpdata @param pgpdata','add','this.constructionelement.appendchild(pgpdata.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method add @param retrievalmethod','add','this.constructionelement.appendchild(retrievalmethod.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method add @param spkidata','add','this.constructionelement.appendchild(spkidata.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method add @param derencodedkeyvalue','add','this.constructionelement.appendchild(derencodedkeyvalue.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method add @param keyinforeference','add','this.constructionelement.appendchild(keyinforeference.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'method addunknownelement @param element','addunknownelement','this.constructionelement.appendchild(element); xmlutils.addreturntoelement(this.constructionelement);'", "'@inheritdoc','getbaselocalname','return constants._tag_keyinfo;'", "'{@inheritdoc} @since 1','createpropertychangelistener','return new motifpropertychangelistener();'", "'','getbulk','getbulkwithgetnext(req, nonrepeat, maxrepeat);'", "'@see com','handlesnullprefixes','return false;'", "'@see com','getbaseidentifier','return null;'", "'relative bulk <i>get<i> method','get','return get(dst, 0, dst.length);'", "'{@inheritdoc}','installdefaults','updatestyle(desktopicon);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'is protected in bytearrayinputstream','getposition','return pos;'", "'desktoppaneui methods','createui','return new motifdesktoppaneui();'", "'','createui','return new windowsfilechooserui((jfilechooser) c);'", "'','createdirectorycomboboxmodel','return new directorycomboboxmodel();'", "'','createfiltercomboboxrenderer','return new filtercomboboxrenderer();'", "'','createfiltercomboboxmodel','return new filtercomboboxmodel();'", "'{@inheritdoc} @since 1','getx','return (double) x;'", "'{@inheritdoc} @since 1','gety','return (double) y;'", "'{@inheritdoc} @since 1','getx','return x;'", "'{@inheritdoc} @since 1','gety','return y;'", "'lays out the children','layout','super.layout(integer.max_value - 1, height);'", "'revisit - remove this','gettargetior','return contactinfolist.gettargetior();'", "'@inheritdoc','getbaselocalname','return constants._tag_object;'", "'@inheritdoc','getbaselocalname','return constants._tag_xpath;'", "'{@inheritdoc}','remove','super.remove(comp); updateframescache();'", "'','setextrachecking','fextrachecking = newvalue;'", "'@see serializationhandler#ascontenthandler()','ascontenthandler','couldthrowioexception(); return null;'", "'@see serializationhandler#setcontenthandler(org','setcontenthandler','amethodiscalled();'", "'@see serializationhandler#close()','close','amethodiscalled();'", "'@see serializationhandler#getoutputformat()','getoutputformat','amethodiscalled(); return null;'", "'@see serializationhandler#getoutputstream()','getoutputstream','amethodiscalled(); return null;'", "'@see serializationhandler#getwriter()','getwriter','amethodiscalled(); return null;'", "'@see serializationhandler#reset()','reset','amethodiscalled(); return false;'", "'@see serializationhandler#serialize(org','serialize','couldthrowioexception();'", "'@see serializationhandler#setcdatasectionelements(java','setcdatasectionelements','amethodiscalled();'", "'@see serializationhandler#setescaping(boolean)','setescaping','couldthrowsaxexception(); return false;'", "'@see serializationhandler#setindent(boolean)','setindent','amethodiscalled();'", "'@see serializationhandler#setindentamount(int)','setindentamount','amethodiscalled();'", "'@see serializationhandler#setisstandalone(boolean)','setisstandalone','amethodiscalled();'", "'@see serializationhandler#setoutputformat(java','setoutputformat','amethodiscalled();'", "'@see serializationhandler#setoutputstream(java','setoutputstream','amethodiscalled();'", "'@see serializationhandler#setversion(java','setversion','amethodiscalled();'", "'@see serializationhandler#setwriter(java','setwriter','amethodiscalled();'", "'@see serializationhandler#settransformer(javax','settransformer','amethodiscalled();'", "'@see serializationhandler#gettransformer()','gettransformer','amethodiscalled(); return null;'", "'@see serializationhandler#flushpending()','flushpending','couldthrowsaxexception();'", "'@see extendedcontenthandler#addattribute(java','addattribute','couldthrowsaxexception();'", "'@see extendedcontenthandler#addattributes(org','addattributes','couldthrowsaxexception();'", "'@see extendedcontenthandler#addattribute(java','addattribute','amethodiscalled();'", "'@see extendedcontenthandler#characters(java','characters','couldthrowsaxexception();'", "'@see extendedcontenthandler#endelement(java','endelement','couldthrowsaxexception();'", "'@see extendedcontenthandler#startdocument()','startdocument','couldthrowsaxexception();'", "'@see extendedcontenthandler#startelement(java','startelement','couldthrowsaxexception(qname);'", "'@see extendedcontenthandler#startelement(java','startelement','couldthrowsaxexception(qname);'", "'@see extendedcontenthandler#namespaceafterstartelement(java','namespaceafterstartelement','couldthrowsaxexception();'", "'@see extendedcontenthandler#startprefixmapping(java','startprefixmapping','couldthrowsaxexception(); return false;'", "'@see extendedcontenthandler#entityreference(java','entityreference','couldthrowsaxexception();'", "'@see extendedcontenthandler#getnamespacemappings()','getnamespacemappings','amethodiscalled(); return null;'", "'@see extendedcontenthandler#getprefix(java','getprefix','amethodiscalled(); return null;'", "'@see extendedcontenthandler#getnamespaceuri(java','getnamespaceuri','amethodiscalled(); return null;'", "'@see extendedcontenthandler#getnamespaceurifromprefix(java','getnamespaceurifromprefix','amethodiscalled(); return null;'", "'@see org','setdocumentlocator','amethodiscalled();'", "'@see org','enddocument','couldthrowsaxexception();'", "'@see org','startprefixmapping','couldthrowsaxexception();'", "'@see org','endprefixmapping','couldthrowsaxexception();'", "'@see org','startelement','couldthrowsaxexception();'", "'@see org','endelement','couldthrowsaxexception();'", "'@see org','characters','couldthrowsaxexception(arg0, arg1, arg2);'", "'@see org','ignorablewhitespace','couldthrowsaxexception();'", "'@see org','processinginstruction','couldthrowsaxexception();'", "'@see org','skippedentity','couldthrowsaxexception();'", "'@see extendedlexicalhandler#comment(java','comment','couldthrowsaxexception();'", "'@see org','startdtd','couldthrowsaxexception();'", "'@see org','enddtd','couldthrowsaxexception();'", "'@see org','startentity','couldthrowsaxexception();'", "'@see org','endentity','couldthrowsaxexception();'", "'@see org','startcdata','couldthrowsaxexception();'", "'@see org','endcdata','couldthrowsaxexception();'", "'@see org','comment','couldthrowsaxexception();'", "'@see xsloutputattributes#getdoctypepublic()','getdoctypepublic','amethodiscalled(); return null;'", "'@see xsloutputattributes#getdoctypesystem()','getdoctypesystem','amethodiscalled(); return null;'", "'@see xsloutputattributes#getencoding()','getencoding','amethodiscalled(); return null;'", "'@see xsloutputattributes#getindent()','getindent','amethodiscalled(); return false;'", "'@see xsloutputattributes#getindentamount()','getindentamount','amethodiscalled(); return 0;'", "'@see xsloutputattributes#getmediatype()','getmediatype','amethodiscalled(); return null;'", "'@see xsloutputattributes#getomitxmldeclaration()','getomitxmldeclaration','amethodiscalled(); return false;'", "'@see xsloutputattributes#getstandalone()','getstandalone','amethodiscalled(); return null;'", "'@see xsloutputattributes#getversion()','getversion','amethodiscalled(); return null;'", "'@see xsloutputattributes#setdoctype(java','setdoctype','amethodiscalled();'", "'@see xsloutputattributes#setdoctypepublic(java','setdoctypepublic','amethodiscalled();'", "'@see xsloutputattributes#setdoctypesystem(java','setdoctypesystem','amethodiscalled();'", "'@see xsloutputattributes#setencoding(java','setencoding','amethodiscalled();'", "'@see xsloutputattributes#setmediatype(java','setmediatype','amethodiscalled();'", "'@see xsloutputattributes#setomitxmldeclaration(boolean)','setomitxmldeclaration','amethodiscalled();'", "'@see xsloutputattributes#setstandalone(java','setstandalone','amethodiscalled();'", "'@see org','elementdecl','couldthrowsaxexception();'", "'@see org','attributedecl','couldthrowsaxexception();'", "'@see org','internalentitydecl','couldthrowsaxexception();'", "'@see org','externalentitydecl','couldthrowsaxexception();'", "'@see org','warning','couldthrowsaxexception();'", "'@see org','error','couldthrowsaxexception();'", "'@see org','fatalerror','couldthrowsaxexception();'", "'@see serializer#asdomserializer()','asdomserializer','couldthrowioexception(); return null;'", "'@see serializationhandler#setnamespacemappings(namespacemappings)','setnamespacemappings','amethodiscalled();'", "'@see extendedcontenthandler#setsourcelocator(javax','setsourcelocator','amethodiscalled();'", "'@see extendedcontenthandler#adduniqueattribute(java','adduniqueattribute','couldthrowsaxexception();'", "'@see extendedcontenthandler#characters(org','characters','couldthrowsaxexception();'", "'@see extendedcontenthandler#addxslattribute(java','addxslattribute','amethodiscalled();'", "'@see extendedcontenthandler#addattribute(java','addattribute','couldthrowsaxexception();'", "'@see org','notationdecl','couldthrowsaxexception();'", "'@see org','unparsedentitydecl','couldthrowsaxexception();'", "'@see serializationhandler#setdtdentityexpansion(boolean)','setdtdentityexpansion','amethodiscalled();'", "'returns the available chronologies','getavailablechronologies','return abstractchronology.getavailablechronologies();'", "'always returns {@code integer','remainingcapacity','return integer.max_value;'", "'always returns <code>false<code>','_non_existent','return false;'", "'throws an <code>org','_is_a','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_duplicate','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_release','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_request','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_create_request','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_create_request','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_get_interface','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_get_interface_def','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_orb','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_get_policy','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_get_domain_managers','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_set_policy_override','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_is_local','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_servant_preinvoke','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_servant_postinvoke','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_request','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_invoke','throw new org.omg.corba.no_implement(reason);'", "'throws an <code>org','_releasereply','throw new org.omg.corba.no_implement(reason);'", "'creates a {@code spliterator','spliterator','return new intarrayspliterator(objects.requirenonnull(array), additionalcharacteristics);'", "'creates a {@code spliterator','spliterator','return new longarrayspliterator(objects.requirenonnull(array), additionalcharacteristics);'", "'creates a {@code spliterator','spliterator','return new doublearrayspliterator(objects.requirenonnull(array), additionalcharacteristics);'", "'creates a {@code spliterator','spliteratorunknownsize','return new intiteratorspliterator(objects.requirenonnull(iterator), characteristics);'", "'creates a {@code spliterator','spliteratorunknownsize','return new longiteratorspliterator(objects.requirenonnull(iterator), characteristics);'", "'creates a {@code spliterator','spliteratorunknownsize','return new doubleiteratorspliterator(objects.requirenonnull(iterator), characteristics);'", "'get the association list','getcontents','return _contents;'", "'returns the string representation','tostring','return representation;'", "'sets the bidilevel','setbidilevel','a.addattribute(bidilevel, integer.valueof(o));'", "'sets the component attribute','setcomponent','a.addattribute(abstractdocument.elementnameattribute, componentelementname); a.addattribute(componentattribute, c);'", "'sets the icon attribute','seticon','a.addattribute(abstractdocument.elementnameattribute, iconelementname); a.addattribute(iconattribute, c);'", "'sets the font attribute','setfontfamily','a.addattribute(fontfamily, fam);'", "'sets the bold attribute','setbold','a.addattribute(bold, boolean.valueof(b));'", "'sets the italic attribute','setitalic','a.addattribute(italic, boolean.valueof(b));'", "'sets the underline attribute','setunderline','a.addattribute(underline, boolean.valueof(b));'", "'sets the strikethrough attribute','setstrikethrough','a.addattribute(strikethrough, boolean.valueof(b));'", "'sets the superscript attribute','setsuperscript','a.addattribute(superscript, boolean.valueof(b));'", "'sets the subscript attribute','setsubscript','a.addattribute(subscript, boolean.valueof(b));'", "'sets the foreground color','setforeground','a.addattribute(foreground, fg);'", "'sets the background color','setbackground','a.addattribute(background, fg);'", "'sets right indent','setrightindent','a.addattribute(rightindent, new float(i));'", "'sets left indent','setleftindent','a.addattribute(leftindent, new float(i));'", "'sets line spacing','setlinespacing','a.addattribute(linespacing, new float(i));'", "'sets space above','setspaceabove','a.addattribute(spaceabove, new float(i));'", "'sets space below','setspacebelow','a.addattribute(spacebelow, new float(i));'", "'sets alignment','setalignment','a.addattribute(alignment, integer.valueof(align));'", "'sets the tabset','settabset','a.addattribute(tabset, tabs);'", "'return the whattoshow value','getwhattoshow','return fwhattoshow;'", "'return the filter','getfilter','return fnodefilter;'", "'method enginegeturi @inheritdoc','enginegeturi','return implementedtransformuri;'", "'relative bulk <i>get<i> method','get','return get(dst, 0, dst.length);'", "'called by platform toolkit','setplatformresources','platformresources = bundle;'", "'initializedesktopproperties','initializedesktopproperties',''", "'returns the node index','getnodeindex','return fnodeindex;'", "'returns the user name','getusername','return username;'", "'returns the user password','getpassword','return password;'", "'return this dtm's entityresolver','getentityresolver','return null;'", "'return this dtm's dtdhandler','getdtdhandler','return null;'", "'return this dtm's errorhandler','geterrorhandler','return null;'", "'return this dtm's declhandler','getdeclhandler','return null;'", "'###zaj - tbd','getstringvaluechunkcount','return 0;'", "'###zaj - tbd','getstringvaluechunk','return new char[0];'", "'2','ischaracterelementcontentwhitespace','return false;'", "'10','isdocumentalldeclarationsprocessed','return false;'", "'5','isattributespecified','return false;'", "'starting a new document','appendstartdocument','m_docelement = null; initdocument(0);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'{@inheritdoc} @since 1','getx','return (double) x;'", "'{@inheritdoc} @since 1','gety','return (double) y;'", "'{@inheritdoc} @since 1','getwidth','return (double) width;'", "'{@inheritdoc} @since 1','getheight','return (double) height;'", "'{@inheritdoc} @since 1','getx','return x;'", "'{@inheritdoc} @since 1','gety','return y;'", "'{@inheritdoc} @since 1','getwidth','return width;'", "'{@inheritdoc} @since 1','getheight','return height;'", "'retrieves the log writer','getlogwriter','return logwriter;'", "'{@inheritdoc}','finalize',''", "'@inheritdoc','getbaselocalname','return constants._tag_x509ski;'", "'method addcertificate @param x509certificate','add','this.add(new singlecertificateresolver(x509certificate));'", "'returns the <code>java','getformat','return (simpledateformat) ((dateformatter) (gettextfield().getformatter())).getformat();'", "'returns the <code>java','getformat','return (decimalformat) ((numberformatter) (gettextfield().getformatter())).getformat();'", "'returns the document handler','getdocumenthandler','return fdocumenthandler;'", "'sets the document source','setdocumentsource','fdocumentsource = source;'", "'returns the document source','getdocumentsource','return fdocumentsource;'", "'error index setter','seterrorindex','errorindex = i;'", "'error status setter','seterrorstatus','errorstatus = s;'", "'error index getter','geterrorindex','return errorindex;'", "'error status getter','geterrorstatus','return errorstatus;'", "'@return type','gettype','return type.double;'", "'call corresponding visitor method(s)','accept','v.visittypedinstruction(this); v.visitstackproducer(this); v.visitstackconsumer(this); v.visitdcmpl(this);'", "'returns {@code swingconstants','getorientation','return orientation;'", "'returns the <code>borderpainted<code> property','isborderpainted','return paintborder;'", "'method enginegetjcealgorithmstring @inheritdoc','enginegetjcealgorithmstring','return this.macalgorithm.getalgorithm();'", "'method enginegetjcealgorithmstring @inheritdoc','enginegetjceprovidername','return this.macalgorithm.getprovider().getname();'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_mac_hmac_sha1;'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_mac_hmac_sha256;'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_mac_hmac_sha384;'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_mac_hmac_sha512;'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_mac_hmac_ripemd160;'", "'method enginegeturi @inheritdoc','enginegeturi','return xmlsignature.algo_id_mac_hmac_not_recommended_md5;'", "'reads up to <code>b','read','return readbytes(b, 0, b.length);'", "'clear the attribute list','clear','names.removeallelements(); types.removeallelements(); values.removeallelements();'", "'resolve an external entity','resolveentity','return null;'", "'stops the counter monitor','stop','dostop();'", "'the <code>max-repetitions<code> setter','setmaxrepetitions','maxrepetitions = max;'", "'the <code>non-repeaters<code> setter','setnonrepeaters','nonrepeaters = nr;'", "'the <code>max-repetitions<code> getter','getmaxrepetitions','return maxrepetitions;'", "'the <code>non-repeaters<code> getter','getnonrepeaters','return nonrepeaters;'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint','super.paint(g, getcomponent());'", "'{@inheritdoc}','paintbackground',''", "'returns the scanline stride','getscanlinestride','return scanlinestride;'", "'{@inheritdoc}','installlisteners','super.installlisteners(); popupmenu.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); popupmenu.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'paints the specified component','paint',''", "'gets the entry object','getentry','return entry;'", "'initialize global variables','initcdata',''", "'sets the indentation amount','setindentamount','this.m_indentamount = m_indentamount;'", "'@see org','error',''", "'@see org','fatalerror','m_elemcontext.m_starttagopen = false;'", "'@see org','warning',''", "'@see org','notationdecl',''", "'@see org','unparsedentitydecl',''", "'get the association list','getcontents','return _contents;'", "'{@inheritdoc}','installdefaults','updatestyle(c);'", "'{@inheritdoc}','installlisteners','c.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','c.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'see serverrequestinfo for javadocs','operation','return request.getoperationname();'", "'see serverrequestinfo for javadocs','exceptions','checkaccess(mid_exceptions); throw stdwrapper.pioperationnotsupported2();'", "'see serverrequestinfo for javadocs','contexts','checkaccess(mid_contexts); throw stdwrapper.pioperationnotsupported3();'", "'see serverrequestinfo for javadocs','operation_context','checkaccess(mid_operation_context); throw stdwrapper.pioperationnotsupported4();'", "'see serverrequestinfo for javadocs','response_expected','return !request.isoneway();'", "'set reply message','setreplymessage','this.replymessage = replymessage;'", "'reseeds this random object','setseed','securerandomspi.enginesetseed(seed);'", "'@param signature_index','setsignatureindex','this.signature_index = signature_index;'", "'sets the cell editor','setcelleditor','updatecelleditor();'", "'','editingstopped','completeediting(false, false, true);'", "'@see expressionowner#getexpression()','getexpression','return m_right;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(this); m_right = exp;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitiload(this);'", "'','grow','bbwi.needed = n; buffermanagerwrite.overflow(bbwi);'", "'accessor for factory','getfactory','return corereflectionfactory.make(this, classscope.make(this));'", "'@since 1','getannotations','return annotationparser.toarray(annotationdata().annotations);'", "'@since 1','getdeclaredannotations','return annotationparser.toarray(annotationdata().declaredannotations);'", "'equivalent to {@link #get}','longvalue','return get();'", '\'returns a <a href="\',\'writereplace\',\'return new serializationproxy(this);\'', "'call corresponding visitor method(s)','accept','super.accept(v); v.visitfstore(this);'", "'set this node's parser','setparser','_parser = parser;'", "'enables events to subcomponents','enableevents','eventmask |= events;'", "'get the association list','getcontents','return _contents;'", "'reset for fresh reuse','reset',''", "'for functions to override','rtree','return null;'", "'for functions to override','rtf','return dtm.null;'", "'stops the gauge monitor','stop','dostop();'", "'subsume node into objecttype','translateto','methodgen.getinstructionlist().append(nop);'", "'@throws illegalstateexception {@inheritdoc}','inferbinaryname','return filemanager.inferbinaryname(location, file);'", "'@throws illegalargumentexception {@inheritdoc}','issamefile','return filemanager.issamefile(a, b);'", "'returns the attribute's asn','getname','return name;'", "'returns the attribute's asn','getvalue','return value;'", "'returns the attribute's asn','getencoded','return encoded.clone();'", "'post-registration: does nothing','postregister','return;'", "'pre-unregistration: does nothing','prederegister','return;'", "'post-unregistration: does nothing','postderegister','return;'", "'returns this parser's xmlparserconfiguration','getxmlparserconfiguration','return fconfiguration;'", "'return policy parameters','getparameters','return null;'", "'refreshesreloads the policy configuration','refresh',''", "'opens a socket channel','open','return selectorprovider.provider().opensocketchannel();'", "'@inheritdoc','enginegeturi','return canonicalizer.algo_id_c14n_excl_with_comments;'", "'@inheritdoc','enginegetincludecomments','return true;'", "'@inheritdoc','getbaselocalname','return constants._tag_x509digest;'", "'get the context','getcontexttype','return fcontexttype;'", "'override the syntaxtreenode','setparser','super.setparser(parser); _left.setparser(parser); _right.setparser(parser);'", "'ends an un-escaping section','endnonescaping','m_disableoutputescapingstates.pop();'", "'starts an un-escaping section','startnonescaping','m_disableoutputescapingstates.push(true);'", "'returns the m_indentamount','getindentamount','return m_indentamount;'", "'sets the m_indentamount','setindentamount','this.m_indentamount = m_indentamount;'", "'@see java','flush',''", "'@see java','close',''", "'clears the stack','clear','m_index = -1;'", "'create an anonymous logger','getanonymouslogger','return getanonymouslogger(null);'", '\'log a method entry\',\'entering\',\'logp(level.finer, sourceclass, sourcemethod, "entry");\'', '\'log a method return\',\'exiting\',\'logp(level.finer, sourceclass, sourcemethod, "return");\'', "'log a severe message','severe','log(level.severe, msg);'", "'log a warning message','warning','log(level.warning, msg);'", "'log an info message','info','log(level.info, msg);'", "'log a config message','config','log(level.config, msg);'", "'log a fine message','fine','log(level.fine, msg);'", "'log a finer message','finer','log(level.finer, msg);'", "'log a finest message','finest','log(level.finest, msg);'", "'set the entity resolver','setentityresolver','entityresolver = resolver;'", "'set the dtd handler','setdtdhandler','dtdhandler = handler;'", "'set the content handler','setcontenthandler','contenthandler = handler;'", "'set the error handler','seterrorhandler','errorhandler = handler;'", "'parse an xml document','parse','parse(new inputsource(systemid));'", "'set the embedded attributelist','setattributelist','this.qatts = qatts;'", "'get the <tt>pushlevel<tt>','getpushlevel','return pushlevel;'", "'{@inheritdoc} @since 1','getanglestart','return (double) start;'", "'{@inheritdoc} @since 1','getangleextent','return (double) extent;'", "'{@inheritdoc} @since 1','setanglestart','this.start = (float) angst;'", "'{@inheritdoc} @since 1','setangleextent','this.extent = (float) angext;'", "'{@inheritdoc} @since 1','getanglestart','return start;'", "'{@inheritdoc} @since 1','getangleextent','return extent;'", "'{@inheritdoc} @since 1','setanglestart','this.start = angst;'", "'{@inheritdoc} @since 1','setangleextent','this.extent = angext;'", "'obtains the default synthesizer','getsynthesizer','return (synthesizer) getdefaultdevicewrapper(synthesizer.class);'", "'returns the node index','getnodeindex','return fnodeindex;'", "'returns <code>object','getcolumnclass','return object.class;'", "'returns false','iscelleditable','return false;'", "'gets the left inset','getleftinset','return left;'", "'gets the right inset','getrightinset','return right;'", "'gets the top inset','gettopinset','return top;'", "'gets the bottom inset','getbottominset','return bottom;'", "'@return type of field','getfieldtype','return type.gettype(getsignature(cpg));'", "'invoked by vm','register','new finalizer(finalizee);'", "'returns the current count','getcount','return sync.getcount();'", "'get the message type','getmessagetype','return messagetype;'", "'documentlistener methods','insertupdate','updatemodelfromtext();'", "'implements javax','beginresizingframe','setupdragmode(f);'", "'','getascendingsorticon','return geticon(ascending_sort_icon);'", "'','gettreeexpandedicon','return geticon(tree_expanded_icon);'", "'','getradiobuttonicon','return geticon(radio_button_icon);'", "'','getcheckboxicon','return geticon(check_box_icon);'", "'','getmenuarrowicon','return geticon(menu_arrow_icon);'", "'','gettoolbarhandleicon','return geticon(tool_bar_handle_icon);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitpopinstruction(this); v.visitstackinstruction(this); v.visitpop(this);'", "'returns dividersize x dividersize','getminimumsize','return getpreferredsize();'", "'gets the locale','getlocale','return formatter.getlocale();'", "'gets the decimalstyle','getdecimalstyle','return formatter.getdecimalstyle();'", "'returns the image type','gettype','return imagetype;'", "'returns the <code>colormodel<code>','getcolormodel','return colormodel;'", "'returns the {@link writableraster}','getraster','return raster;'", "'adds a tile observer','addtileobserver',''", "'removes a tile observer','removetileobserver',''", "'returns the transparency','gettransparency','return colormodel.gettransparency();'", "'get the prompt','getprompt','return prompt;'", "'get the message type','getmessagetype','return messagetype;'", "'get the option type','getoptiontype','return optiontype;'", "'get the confirmation options','getoptions','return options;'", "'get the default option','getdefaultoption','return defaultoption;'", "'method getbaselocalname @inheritdoc','getbaselocalname','return constants._tag_manifest;'", "'@see com','callvisitors','visitor.visitstringliteral(owner, this);'", "'subsume node-set into objecttype','translateto','methodgen.getinstructionlist().append(nop);'", "'recovers current pattern','getpattern','return getpattern(true);'", "'sets the pattern','setpattern','patterns.clear(); addpattern(pattern);'", "'@deprecated','read_principal','return in.read_principal();'", "'returns the event type','getid','return id;'", "'load the orb','getorbpropertiesfile','return (properties) accesscontroller.doprivileged(new getorbpropertiesfileaction());'", "'','statechanged','selectionchanged((colorselectionmodel) evt.getsource());'", "'@see expressionowner#getexpression()','getexpression','return m_expr;'", "'@see expressionowner#setexpression(expression)','setexpression','exp.exprsetparent(filterexpriterator.this); m_expr = exp;'", "'returns windowspreferences','userroot','return windowspreferences.userroot;'", "'returns windowspreferences','systemroot','return windowspreferences.systemroot;'", "'returns the shared segmentcache','getsharedinstance','return sharedcache;'", "'returns the input string','getinput','return input;'", "'public','setdefaultstylesheettype','putproperty(styletype, contenttype);'", "'gets the resolving parent','getresolveparent','return null;'", "'gets the resolving parent','getresolveparent','return null;'", "'{@inheritdoc}','installlisteners','super.installlisteners(); progressbar.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); progressbar.removepropertychangelistener(this);'", "'{@inheritdoc}','installdefaults','updatestyle(progressbar);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'relative bulk <i>get<i> method','get','return get(dst, 0, dst.length);'", "'get the prompt','getprompt','return prompt;'", "'get the default name','getdefaultname','return defaultname;'", "'set the retrieved name','setname','this.inputname = name;'", "'get the retrieved name','getname','return inputname;'", "'@return class name','getclassname','return class_name;'", "'@return package name','getpackagename','return package_name;'", "'@return class name index','getclassnameindex','return class_name_index;'", "'@return constant pool','getconstantpool','return constant_pool;'", "'@return fields, i','getfields','return fields;'", "'@return superclass name','getsuperclassname','return superclass_name;'", "'@return class name index','getsuperclassnameindex','return superclass_name_index;'", "'@param attributes','setattributes','this.attributes = attributes;'", "'@param class_name','setclassname','this.class_name = class_name;'", "'@param class_name_index','setclassnameindex','this.class_name_index = class_name_index;'", "'@param constant_pool','setconstantpool','this.constant_pool = constant_pool;'", "'@param fields','setfields','this.fields = fields;'", "'@param interface_names','setinterfacenames','this.interface_names = interface_names;'", "'@param interfaces','setinterfaces','this.interfaces = interfaces;'", "'@param major','setmajor','this.major = major;'", "'@param methods','setmethods','this.methods = methods;'", "'@param minor','setminor','this.minor = minor;'", "'@param superclass_name','setsuperclassname','this.superclass_name = superclass_name;'", "'@param superclass_name_index','setsuperclassnameindex','this.superclass_name_index = superclass_name_index;'", "'set the current catalog','setcatalog','this.catalog = catalog;'", "'get the current catalog','getcatalog','return catalog;'", "'@inheritdoc','getbaselocalname','return constants._tag_rsakeyvalue;'", "'','createui','return new metalfilechooserui((jfilechooser) c);'", "'','createdirectorycomboboxmodel','return new directorycomboboxmodel();'", "'','createfiltercomboboxrenderer','return new filtercomboboxrenderer();'", "'','createfiltercomboboxmodel','return new filtercomboboxmodel();'", "'@see extendedcontenthandler#endelement(string)','endelement','endelement(null, null, elemname);'", "'@inheritdoc','getbaselocalname','return constants._tag_keyname;'", "'gets the output stream','getoutputstream','return outstream;'", "'disposes this <code>streamprintservice<code>','dispose','disposed = true;'", "'@see org','getnamespaceitem','return fnamespaceitem;'", "'@see serializationhandler#close()','close','m_handler.close();'", "'@see serializationhandler#setescaping(boolean)','setescaping','return m_handler.setescaping(escape);'", "'@see org','startprefixmapping','this.startprefixmapping(prefix, uri, true);'", "'@see org','startdocument','m_needtocallstartdocument = true;'", "'@see xsloutputattributes#setdoctype(string, string)','setdoctype','m_handler.setdoctypepublic(pub); m_handler.setdoctypesystem(system);'", "'@see xsloutputattributes#setmediatype(string)','setmediatype','m_handler.setmediatype(mediatype); m_setmediatype_called = true;'", "'@see serializer#asdomserializer()','asdomserializer','return m_handler.asdomserializer();'", "'@see extendedcontenthandler#addattributes(org','addattributes','m_handler.addattributes(atts);'", "'@see serializationhandler#flushpending()','flushpending','flush(); m_handler.flushpending();'", "'@see extendedcontenthandler#getprefix','getprefix','return m_handler.getprefix(namespaceuri);'", "'@see extendedcontenthandler#entityreference(java','entityreference','m_handler.entityreference(entityname);'", "'@see extendedcontenthandler#getnamespaceuri(java','getnamespaceuri','return m_handler.getnamespaceuri(qname, iselement);'", "'@see serializationhandler#setcontenthandler(org','setcontenthandler','m_handler.setcontenthandler(ch);'", "'{@inheritdoc}','seticonimage','super.seticonimage(image);'", "'{@inheritdoc}','createlayout','return new spinnerlayout();'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'paints the specified component','paint',''", "'','mouseclicked',''", "'','menudragmouseentered',''", "'@return type','gettype','return type.unknown;'", "'returns the print service','getprintservice','return (printservice) getsource();'", "'compile an 'or' operation','or','return compileoperation(new or(), oppos);'", "'compile an 'and' operation','and','return compileoperation(new and(), oppos);'", "'compile a '!=' operation','notequals','return compileoperation(new notequals(), oppos);'", "'compile a '=' operation','equals','return compileoperation(new equals(), oppos);'", "'compile a '<=' operation','lte','return compileoperation(new lte(), oppos);'", "'compile a '<' operation','lt','return compileoperation(new lt(), oppos);'", "'compile a '>=' operation','gte','return compileoperation(new gte(), oppos);'", "'compile a '>' operation','gt','return compileoperation(new gt(), oppos);'", "'compile a '+' operation','plus','return compileoperation(new plus(), oppos);'", "'compile a '-' operation','minus','return compileoperation(new minus(), oppos);'", "'compile a '' operation','mult','return compileoperation(new mult(), oppos);'", "'compile a 'div' operation','div','return compileoperation(new div(), oppos);'", "'compile a 'mod' operation','mod','return compileoperation(new mod(), oppos);'", "'compile a 'string(','string','return compileunary(new com.sun.org.apache.xpath.internal.operations.string(), oppos);'", "'compile a 'boolean(','bool','return compileunary(new com.sun.org.apache.xpath.internal.operations.bool(), oppos);'", "'compile a 'number(','number','return compileunary(new com.sun.org.apache.xpath.internal.operations.number(), oppos);'", "'compile an expression group','group','return compile(oppos + 2);'", "'compile a function argument','arg','return compile(oppos + 2);'", "'get the function table','getfunctiontable','return m_functiontable;'", "'returns the current capacity','capacity','return value.length;'", "'{@inheritdoc}','installlisteners','super.installlisteners(); list.addpropertychangelistener(this);'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); list.removepropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, getcomponentstate(c));'", "'other means? xrevisit','isserver','return isserver;'", "'com','getsocket','return socket;'", "'can never be unset','setpostinitialcontexts','postinitialcontexts = true;'", "'set transport read thresholds','setreadtimeouts','this.readtimeouts = readtimeouts;'", "'method addsignatureproperty @param sp','addsignatureproperty','this.constructionelement.appendchild(sp.getelement()); xmlutils.addreturntoelement(this.constructionelement);'", "'@inheritdoc','getbaselocalname','return constants._tag_signatureproperties;'", "'@return data, i','getbytes','return bytes;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@return float object','getconstantvalue','return new float(bytes);'", "'method printstacktrace @param printwriter','printstacktrace','super.printstacktrace(printwriter);'", "'method printstacktrace @param printstream','printstacktrace','super.printstacktrace(printstream);'", "'call corresponding visitor method(s)','accept','v.visitallocationinstruction(this); v.visitexceptionthrower(this); v.visitstackproducer(this); v.visitnewarray(this);'", "'@return negation of instruction','negate','return new if_icmpge(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitif_icmplt(this);'", "'-----------------------------------------------------------------------','getoffset','return offset;'", "'-----------------------------------------------------------------------','tolocaldatetime','return datetime;'", "'resets the saturation','setsaturation','sethsb(hue, saturation, brightness);'", "'returns the saturation','getsaturation','return saturation;'", "'sets the brightness','setbrightness','sethsb(hue, saturation, brightness);'", "'returns the brightness','getbrightness','return brightness;'", "'returns the gtkcolorchooserpanel','getgtkcolorchooserpanel','return gtkcolorchooserpanel.this;'", "'returns the selected color','getcolor','return gtkcolorchooserpanel.this.getcolor();'", "'accepts the drag','acceptdrag','getdroptargetcontext().acceptdrag(dragoperation);'", "'returns this icon's <code>image<code>','getimage','return image;'", "'@see serializer#getoutputformat()','getoutputformat','return null;'", "'@see serializer#getoutputstream()','getoutputstream','return null;'", "'@see serializer#getwriter()','getwriter','return null;'", "'@see serializer#reset()','reset','return false;'", "'@see domserializer#serialize(node)','serialize',''", "'@see serializationhandler#setescaping(boolean)','setescaping','return false;'", "'@see serializationhandler#setindent(boolean)','setindent',''", "'@see serializer#setoutputformat(properties)','setoutputformat',''", "'@see serializer#setoutputstream(outputstream)','setoutputstream',''", "'@see serializer#setwriter(writer)','setwriter',''", "'@see org','attributedecl',''", "'@see org','elementdecl',''", "'@see org','externalentitydecl',''", "'@see org','internalentitydecl',''", "'@see org','endprefixmapping',''", "'@see org','ignorablewhitespace',''", "'@see org','setdocumentlocator','super.setdocumentlocator(arg0);'", "'@see org','skippedentity',''", "'@see org','endcdata',''", "'@see org','enddtd',''", "'@see org','startcdata',''", "'@see org','startentity',''", "'from xsltc @see extendedcontenthandler#startelement(string)','startelement','super.startelement(elementnamespaceuri, elementlocalname, elementname);'", "'from xsltc','addattribute',''", "'facets','checkextrarules',''", "'-0','isidentical','return value1.equals(value2);'", "'to serialize an object','getstreamformatversion','return streamformatversion;'", "'return the document id','getdocument','return _documentid;'", "'call corresponding visitor method(s)','accept','super.accept(v); v.visitlstore(this);'", '\'returns the node name\',\'getnodename\',\'return "#document-fragment";\'', "'<p>clears the values','clear','super.clear(); fentityname = null;'", "'<p> gets the monitoredattributeinfofactory','getmonitoredattributeinfofactory','return monitoredattributeinfofactory;'", "'<p> gets the monitoredmanagerfactory','getmonitoringmanagerfactory','return monitoringmanagerfactory;'", "'charsetdecoder','getfixedcharwidth','return codeset.getmaxbytesperchar();'", "'warning: ignore','warning',''", "'error: throws back saxparseexception','error','throw e;'", "'no propertyfeature supported','getrecognizedfeatures','return null;'", "'@inheritdoc','getiterator','return new internaliterator(this.certificate);'", "'@inheritdoc','hasnext','return !this.alreadyreturned;'", "'throws {@link unsupportedoperationexception}','setref','throw new unsupportedoperationexception();'", "'{@inheritdoc}','getmaxselectionindex','return maxindex;'", "'{@inheritdoc}','getvalueisadjusting','return isadjusting;'", "'{@inheritdoc}','getselectionmode','return selectionmode;'", "'{@inheritdoc}','isselectionempty','return (minindex > maxindex);'", "'{@inheritdoc}','addlistselectionlistener','listenerlist.add(listselectionlistener.class, l);'", "'{@inheritdoc}','removelistselectionlistener','listenerlist.remove(listselectionlistener.class, l);'", "'{@inheritdoc}','clearselection','removeselectionintervalimpl(minindex, maxindex, false);'", "'{@inheritdoc}','getanchorselectionindex','return anchorindex;'", "'{@inheritdoc}','getleadselectionindex','return leadindex;'", "'refreshesreloads the policy configuration','enginerefresh',''", "'but before invokeclientpistartingpoint','makecompletedclientrequest','return handleclientpiendingpoint(replystatus, exception, false);'", "'character content','characters',''", "'ignorable whitespace','ignorablewhitespace',''", "'a comment','comment',''", "'a processing instruction','processinginstruction',''", "'sets the document source','setdocumentsource','fdocumentsource = source;'", "'returns the document source','getdocumentsource','return fdocumentsource;'", "'an element declaration','elementdecl',''", "'an attribute declaration','attributedecl',''", "'an internal entity declaration','internalentitydecl',''", "'an external entity declaration','externalentitydecl',''", "'an unparsed entity declaration','unparsedentitydecl',''", "'set content model source','setdtdcontentmodelsource','fdtdcontentmodelsource = source;'", "'get content model source','getdtdcontentmodelsource','return fdtdcontentmodelsource;'", "'@return new dimension(short','getmaximumsize','return new dimension(short.max_value, short.max_value);'", "'flush the stream','flush','flushbuffer(); m_os.flush();'", "'get the association list','getcontents','return _contents;'", "'overridden for performance reasons','validate',''", "'overridden for performance reasons','invalidate',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','revalidate',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'overridden for performance reasons','firepropertychange',''", "'return this dtm's entityresolver','getentityresolver','return null;'", "'return this dtm's dtdhandler','getdtdhandler','return null;'", "'return this dtm's errorhandler','geterrorhandler','return null;'", "'return this dtm's declhandler','getdeclhandler','return null;'", "'read needed data (i','initfromfile','setindex(bytes.readunsignedshort()); opcode = com.sun.org.apache.bcel.internal.constants.ldc_w;'", "'<p>get the system identifier','getsystemid','return systemid;'", "'refreshes the configuration','refresh',''", "'be mislead','getencoding','return null;'", "'be mislead','getencoding','return null;'", "'returns the lexical handler','getlexicalhandler','return flexicalhandler;'", "'public identifier','getpublicid','return flocator.getpublicid();'", "'system identifier','getsystemid','return flocator.getexpandedsystemid();'", "'line number','getlinenumber','return flocator.getlinenumber();'", "'column number','getcolumnnumber','return flocator.getcolumnnumber();'", "'locator2 methods','getxmlversion','return flocator.getxmlversion();'", "'sets the xml attributes','setattributes','fattributes = attributes;'", "'{@inheritdoc}','mouseclicked',''", "'{@inheritdoc}','mousepressed',''", "'{@inheritdoc}','mousereleased',''", "'{@inheritdoc}','mouseentered',''", "'{@inheritdoc}','mouseexited',''", "'{@inheritdoc} @since 1','mousewheelmoved',''", "'{@inheritdoc} @since 1','mousedragged',''", "'{@inheritdoc} @since 1','mousemoved',''", "'replaces child views','replace',''", "'remove class from repository','removeclass','loadedclasses.remove(clazz.getclassname());'", "'-------------------------------------------------------------------','type','return ftype;'", "'returns the <code>expandsselectedpaths<code> property','getexpandsselectedpaths','return expandsselectedpaths;'", "'returns <code>iseditable<code>','ispatheditable','return iseditable();'", "'clears the selection','clearselection','getselectionmodel().clearselection();'", "'-----------------------------------------------------------------------','getabbreviation','return era_config[ordinal(getvalue())].getabbreviation();'", "'object','getgrammardescription','return fgrammardescription.makeclone();'", "'annotation support','getdomparser','return null;'", "'object','getgrammardescription','return fgrammardescription.makeclone();'", "'annotation support','getdomparser','return null;'", "'object','getgrammardescription','return fgrammardescription;'", "'dtdgrammar methods','isnamespaceaware','return true;'", "'register one global attribute','addglobalattributedecl','fglobalattrdecls.put(decl.fname, decl); decl.setnamespaceitem(this);'", "'register one global group','addglobalgroupdecl','fglobalgroupdecls.put(decl.fname, decl); decl.setnamespaceitem(this);'", "'register one global notation','addglobalnotationdecl','fglobalnotationdecls.put(decl.fname, decl); decl.setnamespaceitem(this);'", "'register one identity constraint','addidconstraintdecl','elmdecl.addidconstraint(decl); fglobalidconstraintdecls.put(decl.getidentityconstraintname(), decl);'", "'get one global attribute','getglobalattributedecl','return (xsattributedecl) fglobalattrdecls.get(declname);'", "'get one global element','getglobalelementdecl','return (xselementdecl) fglobalelemdecls.get(declname);'", "'get one global group','getglobalgroupdecl','return (xsgroupdecl) fglobalgroupdecls.get(declname);'", "'get one global notation','getglobalnotationdecl','return (xsnotationdecl) fglobalnotationdecls.get(declname);'", "'get one global type','getglobaltypedecl','return (xstypedefinition) fglobaltypedecls.get(declname);'", "'get one identity constraint','getidconstraintdecl','return (identityconstraint) fglobalidconstraintdecls.get(declname);'", "'get one identity constraint','hasidconstraints','return fglobalidconstraintdecls.getlength() > 0;'", "'overridden methods','setvalues',''", "'convenience method','gettypedefinition','return getglobaltypedecl(name);'", "'convenience method','getattributedeclaration','return getglobalattributedecl(name);'", "'convenience method','getelementdeclaration','return getglobalelementdecl(name);'", "'convenience method','getattributegroup','return getglobalattributegroupdecl(name);'", "'convenience method','getmodelgroupdefinition','return getglobalgroupdecl(name);'", "'convenience method','getnotationdeclaration','return getglobalnotationdecl(name);'", "'get the nth element','elementat','return m_map[i];'", "'avoid unnecessary allocations','getfieldsnocopy','return fields;'", "'','lookupdocument','return (_references.get(uri));'", "'directly?','getmessageheader','return header;'", "'call corresponding visitor method(s)','accept','v.visitunconditionalbranch(this); v.visitbranchinstruction(this); v.visitgotoinstruction(this); v.visitgoto_w(this);'", "'finalizes the hashcode method','hashcode','return super.hashcode();'", "'{@inheritdoc}','dynamicinvoker','return makedynamicinvoker();'", "'@return type','gettype','return type.short;'", "'return precomputed value','hashcode','return this.hashval;'", "'generate documentation here','start','return true;'", "'check for doclet-added options','optionlength','return 0;'", "'-- sun','blockedon','sun.misc.sharedsecrets.getjavalangaccess().blockedon(thread.currentthread(), intr);'", "'writes a single character','write','se.write(c);'", "'flushes the stream','flush','se.flush();'", "'calls the <code>configureenclosingscrollpane<code> method','addnotify','super.addnotify(); configureenclosingscrollpane();'", "'equivalent to <code>new jscrollpane(atable)<code>','createscrollpanefortable','return new jscrollpane(atable);'", "'sets the <code>editingcolumn<code> variable','seteditingcolumn','editingcolumn = acolumn;'", "'sets the <code>editingrow<code> variable','seteditingrow','editingrow = arow;'", "'sets the row headers','setaccessiblerowheader',''", "'sets the column headers','setaccessiblecolumnheader',''", "'@since 1','installcomponents','basichtml.updaterenderer(menuitem, menuitem.gettext());'", '\'@since 1\',\'uninstallcomponents\',\'basichtml.updaterenderer(menuitem, "");\'', "'','mouseclicked',''", "'get the current catalog','getcatalog','return catalog;'", "'returns the modulus','getmodulus','return this.modulus;'", "'returns the private exponent','getprivateexponent','return this.privateexponent;'", "'{@inheritdoc} @since 1','getx1','return (double) x1;'", "'{@inheritdoc} @since 1','gety1','return (double) y1;'", "'{@inheritdoc} @since 1','getp1','return new point2d.float(x1, y1);'", "'{@inheritdoc} @since 1','getctrlx1','return (double) ctrlx1;'", "'{@inheritdoc} @since 1','getctrly1','return (double) ctrly1;'", "'{@inheritdoc} @since 1','getctrlp1','return new point2d.float(ctrlx1, ctrly1);'", "'{@inheritdoc} @since 1','getctrlx2','return (double) ctrlx2;'", "'{@inheritdoc} @since 1','getctrly2','return (double) ctrly2;'", "'{@inheritdoc} @since 1','getctrlp2','return new point2d.float(ctrlx2, ctrly2);'", "'{@inheritdoc} @since 1','getx2','return (double) x2;'", "'{@inheritdoc} @since 1','gety2','return (double) y2;'", "'{@inheritdoc} @since 1','getp2','return new point2d.float(x2, y2);'", "'{@inheritdoc} @since 1','getx1','return x1;'", "'{@inheritdoc} @since 1','gety1','return y1;'", "'{@inheritdoc} @since 1','getp1','return new point2d.double(x1, y1);'", "'{@inheritdoc} @since 1','getctrlx1','return ctrlx1;'", "'{@inheritdoc} @since 1','getctrly1','return ctrly1;'", "'{@inheritdoc} @since 1','getctrlp1','return new point2d.double(ctrlx1, ctrly1);'", "'{@inheritdoc} @since 1','getctrlx2','return ctrlx2;'", "'{@inheritdoc} @since 1','getctrly2','return ctrly2;'", "'{@inheritdoc} @since 1','getctrlp2','return new point2d.double(ctrlx2, ctrly2);'", "'{@inheritdoc} @since 1','getx2','return x2;'", "'{@inheritdoc} @since 1','gety2','return y2;'", "'{@inheritdoc} @since 1','getp2','return new point2d.double(x2, y2);'", "'{@inheritdoc} @since 1','contains','return contains(p.getx(), p.gety());'", "'{@inheritdoc} @since 1','getbounds','return getbounds2d().getbounds();'", "'','marksupported','return false;'", "'get linenumber attribute','getlinenumber','return new linenumber(ih.getposition(), src_line);'", "'equivalent to {@code add(1)}','increment','add(1l);'", "'equivalent to {@code add(-1)}','decrement','add(-1l);'", "'equivalent to {@link #sum}','longvalue','return sum();'", '\'returns a <a href="\',\'writereplace\',\'return new serializationproxy(this);\'', "'gets the vetoed <code>propertychangeevent<code>','getpropertychangeevent','return evt;'", "'returns the stylesheet','getstylesheet','return stylesheet;'", "'for internal use only','getobjectname','return objectname;'", "'do nothing','postderegister',''", "'returns the field id','getfieldid','return fieldid;'", "'returns the input string','getinput','return input;'", "'@return type','gettype','return type.double;'", "'gets the caret','getcaret','return caret;'", "'sets the rowmapper instance','setrowmapper','rowmapper = newmapper; resetrowselection();'", "'adds gamma to seed','nextseed','return seed += gamma;'", "'equivalent to {@link #sum}','doublevalue','return sum();'", '\'returns a <a href="\',\'writereplace\',\'return new serializationproxy(this);\'', "'presses a given key','keypress','checkkeycodeargument(keycode); peer.keypress(keycode); afterevent();'", "'releases a given key','keyrelease','checkkeycodeargument(keycode); peer.keyrelease(keycode); afterevent();'", "'an <code>undoableeditlistener<code> method','undoableedithappened','addedit(e.getedit());'", "'reloads the pluggable ui','updateui','setui((textui) uimanager.getui(this)); invalidate();'", "'removes a caret listener','removecaretlistener','listenerlist.remove(caretlistener.class, listener);'", "'sets the <code>navigationfilter<code>','setnavigationfilter','navigationfilter = filter;'", "'returns the <code>navigationfilter<code>','getnavigationfilter','return navigationfilter;'", "'--- focuslistener methods -----------------------------------','focusgained','appcontext.getappcontext().put(focused_component, fe.getsource());'", "'','composedtextexists','return (composedtextstart != null);'", "'retrieves the qop value','getqop','return qop;'", "'retrieves the privacy state','getprivacy','return (privacystate);'", "'sets the qop value','setqop','this.qop = qop;'", "'sets the privacy state','setprivacy','this.privacystate = privstate;'", "'','createui','return new motifinternalframeui((jinternalframe) w);'", "'@return intermediate constant pool','getconstantpool','return new constantpool(constants);'", "'accessors','getstringbuilder','sb.setlength(0); return sb;'", "'performs a clone action','duplicate','return (snmpvalue) clone();'", "'returns the transparency','gettransparency','return transparency;'", "'gets the current value','get','return value;'", "'delegates to schemaparsingconfig','setfeature','config.setfeature(featureid, state);'", "'delegates to schemaparsingconfig','getfeature','return config.getfeature(featureid);'", "'delegates to schemaparsingconfig','setproperty','config.setproperty(propertyid, value);'", "'delegates to schemaparsingconfig','getproperty','return config.getproperty(propertyid);'", "'delegates to schemaparsingconfig','setentityresolver','config.setentityresolver(er);'", "'reset schemaparsingconfig','reset','((schemaparsingconfig) config).reset();'", "'resetnodepool on schemaparsingconfig','resetnodepool','((schemaparsingconfig) config).resetnodepool();'", "'clears the stack','clear','fdepth = 0;'", "'@return data, i','getbytes','return bytes;'", "'@param bytes','setbytes','this.bytes = bytes;'", "'@return integer object','getconstantvalue','return new integer(bytes);'", "'returns the filter operation','getfilter','return filter;'", "'sets the source bean','setsource','this.source = source;'", "'returns the domain part','getdomain','return _canonicalname.substring(0, _domain_length);'", "'@return type','gettype','return type.byte;'", "'reads up to <code>byte','read','return read(b, 0, b.length);'", "'{@inheritdoc}','getexpandedicon','return expandediconwrapper;'", "'{@inheritdoc}','installdefaults','updatestyle(tree);'", "'{@inheritdoc}','installlisteners','super.installlisteners(); tree.addpropertychangelistener(this);'", "'{@inheritdoc}','getcontext','return getcontext(c, synthlookandfeel.getcomponentstate(c));'", "'{@inheritdoc}','createdefaultcellrenderer','return new synthtreecellrenderer();'", "'{@inheritdoc}','uninstalllisteners','super.uninstalllisteners(); tree.removepropertychangelistener(this);'", "'@see org','abort','throw abort.instance;'", "'','installdefaults','super.installdefaults(b);'", "'','createbuttonlistener','return super.createbuttonlistener(b);'", "'returns the node type','getnodetype','return node.document_node;'", '\'returns the node name\',\'getnodename\',\'return "#document";\'', "'@inheritdoc','getbaselocalname','return constants._tag_spkidata;'", "'start java code generation','start','visitjavaclass(_clazz); _out.flush();'", "'@see dtmiterator#getdtmmanager()','getdtmmanager','return m_dtmmgr;'", "'@see dtmiterator#reset()','reset','m_next = 0;'", "'@see dtmiterator#isfresh()','isfresh','return (0 == m_next);'", "'@see dtmiterator#ismutable()','ismutable','return hascache();'", "'@see dtmiterator#getcurrentpos()','getcurrentpos','return m_next;'", "'@see dtmiterator#setcurrentpos(int)','setcurrentpos','runto(i);'", "'@see org','fixupvariables','super.fixupvariables(vars, globalssize);'", "'-------------------------------------------------------------------','getchild','return fchild;'", "'-------------------------------------------------------------------','calcfirstpos','toset.setto(fchild.firstpos());'", "'package private','alwaysontop','return true;'", "'performs a clone action','duplicate','return (snmpvalue) clone();'", "'@since 1','getordefault','checkinitialized(); return super.getordefault(key, defaultvalue);'", "'@since 1','foreach','checkinitialized(); super.foreach(action);'", "'internal only','getaliases','return aliases;'", "'@inheritdoc','getbaselocalname','return constants._tag_derencodedkeyvalue;'", "'-----------------------------------------------------------------------','tolocaldate','return date;'", "'-----------------------------------------------------------------------','atzone','return chronozoneddatetimeimpl.ofbest(this, zone, null);'", "'get the association list','getcontents','return _contents;'", "'read needed data (i','initfromfile','setindex(bytes.readunsignedshort()); length = 3;'", "'','createui','return new basicsliderui((jslider) b);'", "'component handler','componenthidden',''", "'focus handler','focusgained','slider.repaint();'", "'write a single character','write','buf.append((char) c);'", "'write a string','write','buf.append(str);'", "'flush the stream','flush',''", "'sets the revocationenabled flag','setrevocationenabled','revocationenabled = val;'", "'checks the revocationenabled flag','isrevocationenabled','return revocationenabled;'", "'sets the explicitpolicyrequired flag','setexplicitpolicyrequired','explicitpolicyrequired = val;'", "'sets the policymappinginhibited flag','setpolicymappinginhibited','policymappinginhibited = val;'", "'sets the policyqualifiersrejected flag','setpolicyqualifiersrejected','policyqualifiersrejected = qualifiersrejected;'", "'gets the policyqualifiersrejected flag','getpolicyqualifiersrejected','return policyqualifiersrejected;'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifeq(this);'", "'@return negation of instruction','negate','return new ifle(target);'", "'call corresponding visitor method(s)','accept','v.visitstackconsumer(this); v.visitbranchinstruction(this); v.visitifinstruction(this); v.visitifgt(this);'", "'add a linked exception','setlinkedexception','this.linkedexception = exception;'", "'gets a character entity','getentity','return entityhash.get(integer.valueof(ch));'", "'finalizes the hashcode method','hashcode','return super.hashcode();'", "'prints the permission','getstring','return perm;'", "'returns the {@link com','gettransformerfactory','return _tfactory;'", "'returns the {@link com','gettransletoutputhandlerfactory','return _tohfactory;'", "'implements jaxp's transformer','geterrorlistener','return _errorlistener;'", "'implements jaxp's transformer','getoutputproperties','return (properties) _properties.clone();'", "'implements jaxp's transformer','geturiresolver','return _uriresolver;'", "'implements jaxp's transformer','seturiresolver','_uriresolver = resolver;'", "'sets this <code>actionmap<code>'s parent','setparent','this.parent = map;'", "'returns this <code>actionmap<code>'s parent','getparent','return parent;'", "'returns the black color','getblack','return ocean_black;'", "'returns the desktop color','getdesktopcolor','return metaltheme.white;'", "'gets the base url','getcodebase','return stub.getcodebase();'", "'return the whattoshow value','getwhattoshow','return fwhattoshow;'", "'return the nodefilter','getfilter','return fnodefilter;'", "'return the current node','getcurrentnode','return fcurrentnode;'", "'internal function','getnextsibling','return getnextsibling(node, froot);'", "'internal function','getprevioussibling','return getprevioussibling(node, froot);'", "'by this scanner','isvalidnamestarthighsurrogate','return xml11char.isxml11namehighsurrogate(value);'", "'registers listeners','installlisteners','c.addpropertychangelistener(this);'", "'registers components','installcomponents','basichtml.updaterenderer(c, c.gettext()); c.setinheritspopupmenu(true);'", "'uninstalls default properties','uninstalldefaults',''", "'unregisters listeners','uninstalllisteners','c.removepropertychangelistener(this);'", '\'unregisters components\',\'uninstallcomponents\',\'basichtml.updaterenderer(c, "");\'', "'performs a clone action','duplicate','return (snmpvalue) clone();'", "'@inheritdoc','getbaselocalname','return constants._tag_x509issuerserial;'", "'reads a single character','read','return in.read();'", "'skips characters','skip','return in.skip(n);'", "'resets the stream','reset','in.reset();'", "'returns the <code>bufferedimageop<code>','getbufferedimageop','return bufferedimageop;'", "'return this dtm's entityresolver','getentityresolver','return this;'", "'return this dtm's dtdhandler','getdtdhandler','return this;'", "'return this dtm's errorhandler','geterrorhandler','return this;'", "'return this dtm's declhandler','getdeclhandler','return this;'", "'5','isattributespecified','return true;'", "'resolve an external entity','resolveentity','return null;'", "'retrieves role name','getrolename','return rolename;'", "'retrieves role value','getrolevalue','return rolevalue;'", "'retrieves problem type','getproblemtype','return problemtype;'", "'return the dtmmanager object','getdtmmanager','return m_dtmmanager;'", "'%tbd% doc','getdtmidentity','return m_dtmmanager.getdtmidentity(dtm);'", "'pop the current locater','popsaxlocator','m_saxlocations.pop();'", "'return the dtmmanager object','getdtmmanager','return m_dtmmanager;'", "'get the error listener','geterrorlistener','return xpathcontext.this.geterrorlistener();'", '\'{@inheritdoc}\',\'getpropertyprefix\',\'return "radiobuttonmenuitem";\'', "'returns current nanosecond time','now','return system.nanotime();'", "'(non-javadoc) @see org','getxmlgregoriancalendar','return type.getxmlgregoriancalendar(this);'", "'gets the current value','get','return value;'", "'returns the indentation specified','getindent','return _indent;'", "'returns the specified encoding','getencoding','return _encoding;'", "'sets the media type','setmediatype','_mediatype = mediatype;'", "'sets document dtd standalone','setstandalone','_standalone = standalone;'", "'returns the preserveemptyattribute flag','getpreserveemptyattributes','return _preserveemptyattributes;'", "'sets the preserveemptyattribute flag','setpreserveemptyattributes','_preserveemptyattributes = preserve;'", "'overrides <code>jcomponent','setforeground','super.setforeground(c); unselectedforeground = c;'", "'overrides <code>jcomponent','setbackground','super.setbackground(c); unselectedbackground = c;'", "'overridden for performance reasons','invalidate',''", "'overridden for performance reasons','validate',''", "'overridden for performance reasons','revalidate',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','repaint',''", "'overridden for performance reasons','firepropertychange',''", "'get the association list','getcontents','return _contents;'", "'sets this <code>inputmap<code>'s parent','setparent','this.parent = map;'", "'gets this <code>inputmap<code>'s parent','getparent','return parent;'", "'writes a single character','write','out.write(c);'", "'flushes the stream','flush','out.flush();'", "'sets the dtd handler','setdtdhandler','fdtdhandler = dtdhandler;'", "'returns the dtd handler','getdtdhandler','return fdtdhandler;'", "'{@inheritdoc} @throws nullpointerexception {@inheritdoc}','locationtoindex','maybeupdatelayoutstate(); return convertlocationtomodel(location.x, location.y);'", "'','mouseclicked',''"]